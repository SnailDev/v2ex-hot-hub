[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/8d31/7bdc/747_large.png?m=1523201604", "name": "deals", "avatar_normal": "https://cdn.v2ex.com/navatar/8d31/7bdc/747_normal.png?m=1523201604", "title": "优惠信息", "url": "https://www.v2ex.com/go/deals", "topics": 1917, "footer": "", "header": "这里分享和发布来自互联网上的最新优惠信息", "title_alternative": "Deals", "avatar_mini": "https://cdn.v2ex.com/navatar/8d31/7bdc/747_mini.png?m=1523201604", "stars": 2872, "aliases": [], "root": false, "id": 747, "parent_node_name": "life"}, "member": {"id": 360088, "username": "leomm", "url": "https://www.v2ex.com/u/leomm", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/77e12ade92adc3bc5a966015096ec634?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/77e12ade92adc3bc5a966015096ec634?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/77e12ade92adc3bc5a966015096ec634?s=73&d=retro", "created": 1541039825, "last_modified": 1645045384}, "last_reply_by": "mingsz", "last_touched": 1647113254, "title": "315 活动 腾讯云香港云服务器 约 3 年 166 元 每天 3 台", "url": "https://www.v2ex.com/t/840061", "created": 1647170914, "deleted": 0, "content": "315 活动 腾讯云香港 2C-2G-1t 约 3 年 166 元 每天 3 台\r\n* * ** * ** * ** * ** * ** * ** * ** * ** \r\n活动规则\r\n* * ** *\r\n每天回帖前 10 楼 抽 1 个\r\n每天回帖 11-20 楼 抽 1 个\r\n每天回帖 21-30 楼 抽 1 个\r\n（按每天 0.00 开始到 20.00 计算）\r\n* * *\r\n楼数不够的取消相应名额 一号一天最多回帖一次 一天多次回帖取消其中奖结果\r\n* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * *\r\n抽奖结果\r\n* * ** * \r\n看中国体育彩票官网（ lottery.gov.cn ） 《排列 3 》的当天开奖结果（每天 8.25 官网准时开奖）\r\n* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** \r\n第 1 个数字 代表前 10 楼 中奖结果\r\n第 2 个数字 代表前 11-20 楼  中奖结果\r\n第 3 个数字 代表前 21-30 楼  中奖结果\r\n* * ** * ** * ** * ** * ** * ** * *\r\n活动时间: 3 月 13 号 0:00-3 月 20 号 20:00\r\n* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * \r\n* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * \r\n* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *\r\n没中的用户可以等明天继续或者选下面常规套餐\r\n腾讯云香港日本新加坡硅谷云服务器 约 2 年 166 元 约 3 年 230 元\r\n\r\n配置可选\r\n* * *\r\n2 核 2G 30G 硬盘 30M 宽带 1024G 流量 (有效期 31 个月=230)到期可正常续\r\n* * *\r\n2 核 2G 50G 硬盘 30M 宽带 2048G 流量 (有效期 24 个月=230)到期可正常续\r\n* * *\r\n2 核 4G 60G 硬盘 30M 宽带 2560G 流量 （可 win 但是配置会变低 ）(有效期 19 个月=230)到期可正常续\r\n* * *\r\n2 核 4G 80G 硬盘 30M 宽带 3072G 流量 （可 win 但是配置会变低 ）(有效期 15 个月=230)到期可正常续\r\n* * *\r\n2 核 8G 90G 硬盘 30M 宽带 3584G 流量 （可 win 但是配置会变低 ）(有效期 10 个月=230)到期可正常续\r\n* * *\r\n* * *\r\n联系方式\r\n* * *\r\nTG https://t.me/tg988211\r\n* * *\r\n绿色 leommcn\r\n* * *\r\n扣扣 593405600", "content_rendered": "315 活动 腾讯云香港 2C-2G-1t 约 3 年 166 元 每天 3 台<br />* * ** * ** * ** * ** * ** * ** * ** * ** <br />活动规则<br />* * ** *<br />每天回帖前 10 楼 抽 1 个<br />每天回帖 11-20 楼 抽 1 个<br />每天回帖 21-30 楼 抽 1 个<br />（按每天 0.00 开始到 20.00 计算）<br />* * *<br />楼数不够的取消相应名额 一号一天最多回帖一次 一天多次回帖取消其中奖结果<br />* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * *<br />抽奖结果<br />* * ** * <br />看中国体育彩票官网（ <a target=\"_blank\" href=\"http://lottery.gov.cn\" rel=\"nofollow noopener\">lottery.gov.cn</a> ） 《排列 3 》的当天开奖结果（每天 8.25 官网准时开奖）<br />* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** <br />第 1 个数字 代表前 10 楼 中奖结果<br />第 2 个数字 代表前 11-20 楼  中奖结果<br />第 3 个数字 代表前 21-30 楼  中奖结果<br />* * ** * ** * ** * ** * ** * ** * *<br />活动时间: 3 月 13 号 0:00-3 月 20 号 20:00<br />* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * <br />* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * <br />* * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *<br />没中的用户可以等明天继续或者选下面常规套餐<br />腾讯云香港日本新加坡硅谷云服务器 约 2 年 166 元 约 3 年 230 元<br /><br />配置可选<br />* * *<br />2 核 2G 30G 硬盘 30M 宽带 1024G 流量 (有效期 31 个月=230)到期可正常续<br />* * *<br />2 核 2G 50G 硬盘 30M 宽带 2048G 流量 (有效期 24 个月=230)到期可正常续<br />* * *<br />2 核 4G 60G 硬盘 30M 宽带 2560G 流量 （可 win 但是配置会变低 ）(有效期 19 个月=230)到期可正常续<br />* * *<br />2 核 4G 80G 硬盘 30M 宽带 3072G 流量 （可 win 但是配置会变低 ）(有效期 15 个月=230)到期可正常续<br />* * *<br />2 核 8G 90G 硬盘 30M 宽带 3584G 流量 （可 win 但是配置会变低 ）(有效期 10 个月=230)到期可正常续<br />* * *<br />* * *<br />联系方式<br />* * *<br />TG <a target=\"_blank\" href=\"https://t.me/tg988211\" rel=\"nofollow noopener\">https://t.me/tg988211</a><br />* * *<br />绿色 leommcn<br />* * *<br />扣扣 593405600", "last_modified": 1647170914, "replies": 182, "id": 840061}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1647188067", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1647188067", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 182454, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1647188067", "stars": 3437, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 552654, "username": "xingHI", "url": "https://www.v2ex.com/u/xingHI", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/0071fe3c72325deedd95e71a40dc19bc?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/0071fe3c72325deedd95e71a40dc19bc?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/0071fe3c72325deedd95e71a40dc19bc?s=73&d=retro", "created": 1628163542, "last_modified": 1628163542}, "last_reply_by": "ww2000e", "last_touched": 1647235039, "title": "各位 v 友啊，请问一下对于 notion、语雀、wolai、印象笔记等这些你们是什么看法或者有什么可以推荐？", "url": "https://www.v2ex.com/t/840045", "created": 1647164961, "deleted": 0, "content": "各位 v 友啊，请问一下对于 notion 、语雀、wolai 、印象笔记等这些你们是什么看法或者有什么可以推荐？。\r\n我目前的情况是，主要用 notion,因为：  \r\n\t1. 我体验过类似的比如，wolai 、语雀，还是 notion 的功能最强大；    \r\n\t2. 我已经在 notion 有了较多的笔记，转移非常麻烦；      \r\n\t3. 我是学生，用 noton 是免费的。    \r\n我担忧的东西，对于 notion：    \r\n\t1. 害怕被墙，并不是被墙之后我无法访问，是被墙后不方便共享；   \r\n        2. 对于 notion 的安全性，当然这类线上的笔记都不是特别安全，但是 notion 对于个人用户，根本没有二次验证只需要账号密码就可以登陆，对于我们教育邮箱来说就更加不安全；\r\n  \r\n由于存在这些担忧，我时常去体验同类软件，也在寻找更好的解决方式，因为我现在在 notion 的笔记量还不是很大，我怕未来随着笔记的慢慢增加，迁移成本过大。\r\n\r\n本人使用背景：\r\n大学生，开始是计算机专业后面转到法学专业，自认为有计算机基础和英语基础。\r\n笔记大多是对于专业学习的记录和总结", "content_rendered": "<p>各位 v 友啊，请问一下对于 notion 、语雀、wolai 、印象笔记等这些你们是什么看法或者有什么可以推荐？。\n我目前的情况是，主要用 notion,因为：<br/>\n1. 我体验过类似的比如，wolai 、语雀，还是 notion 的功能最强大；<br/>\n2. 我已经在 notion 有了较多的笔记，转移非常麻烦；<br/>\n3. 我是学生，用 noton 是免费的。<br/>\n我担忧的东西，对于 notion：<br/>\n1. 害怕被墙，并不是被墙之后我无法访问，是被墙后不方便共享；<br/>\n2. 对于 notion 的安全性，当然这类线上的笔记都不是特别安全，但是 notion 对于个人用户，根本没有二次验证只需要账号密码就可以登陆，对于我们教育邮箱来说就更加不安全；</p>\n<p>由于存在这些担忧，我时常去体验同类软件，也在寻找更好的解决方式，因为我现在在 notion 的笔记量还不是很大，我怕未来随着笔记的慢慢增加，迁移成本过大。</p>\n<p>本人使用背景：\n大学生，开始是计算机专业后面转到法学专业，自认为有计算机基础和英语基础。\n笔记大多是对于专业学习的记录和总结</p>\n", "last_modified": 1647165049, "replies": 90, "id": 840045}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c9f0/f895/8_large.png?m=1630643991", "name": "iphone", "avatar_normal": "https://cdn.v2ex.com/navatar/c9f0/f895/8_normal.png?m=1630643991", "title": "iPhone", "url": "https://www.v2ex.com/go/iphone", "topics": 9243, "footer": "这里绝不讨论如何获得 iPhone 盗版软件、iTunes 黑卡之类。", "header": "Say hello to the future.", "title_alternative": "iPhone", "avatar_mini": "https://cdn.v2ex.com/navatar/c9f0/f895/8_mini.png?m=1630643991", "stars": 2828, "aliases": [], "root": false, "id": 8, "parent_node_name": "apple"}, "member": {"id": 29340, "username": "xin1284", "url": "https://www.v2ex.com/u/xin1284", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/4912/9551/29340_mini.png?m=1635552146", "avatar_normal": "https://cdn.v2ex.com/avatar/4912/9551/29340_normal.png?m=1635552146", "avatar_large": "https://cdn.v2ex.com/avatar/4912/9551/29340_large.png?m=1635552146", "created": 1352088060, "last_modified": 1635552146}, "last_reply_by": "Lefi", "last_touched": 1647235163, "title": "iPhone 13Pro 屏幕好多划痕，心里特别膈应，怎么办", "url": "https://www.v2ex.com/t/840121", "created": 1647217590, "deleted": 0, "content": "用手机一直裸奔，从来没出现过这么多严重的划痕。\r\n\r\n上一个手机用的 SE2 的，摄像头不突出，换成 13Pro 后摄像头太突出，所以习惯不用手机的时候倒扣在桌上放，前一阵坐了一次地铁，地铁上灯光很亮，发现屏幕上有大概 8 个很深的划痕，其中有俩指甲滑过都很明显的卡一下。\r\n\r\n然后现在就觉得心里特别膈应，一看到手机就闹心，没事就忍不住斜对着光线看划痕，感觉坐下病了。已经决定 14 出来后直接把这个 13Pro 折旧换 14 了。\r\n\r\n重点是我觉得自己这是病，根本没必要这么在意的东西，但是给生活带来很多困扰，一点也犯不着……不知道怎么才能不在意这些划痕", "content_rendered": "用手机一直裸奔，从来没出现过这么多严重的划痕。<br /><br />上一个手机用的 SE2 的，摄像头不突出，换成 13Pro 后摄像头太突出，所以习惯不用手机的时候倒扣在桌上放，前一阵坐了一次地铁，地铁上灯光很亮，发现屏幕上有大概 8 个很深的划痕，其中有俩指甲滑过都很明显的卡一下。<br /><br />然后现在就觉得心里特别膈应，一看到手机就闹心，没事就忍不住斜对着光线看划痕，感觉坐下病了。已经决定 14 出来后直接把这个 13Pro 折旧换 14 了。<br /><br />重点是我觉得自己这是病，根本没必要这么在意的东西，但是给生活带来很多困扰，一点也犯不着……不知道怎么才能不在意这些划痕", "last_modified": 1647217590, "replies": 72, "id": 840121}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/1fc2/1400/864_large.png?m=1497247521", "name": "promotions", "avatar_normal": "https://cdn.v2ex.com/navatar/1fc2/1400/864_normal.png?m=1497247521", "title": "推广", "url": "https://www.v2ex.com/go/promotions", "topics": 6340, "footer": "", "header": "来自厂商的推广活动类主题，会被归类到这个节点。希望有情怀的产商们在发布推广内容时，主动选择发布到本节点下。", "title_alternative": "Promotions", "avatar_mini": "https://cdn.v2ex.com/navatar/1fc2/1400/864_mini.png?m=1497247521", "stars": 684, "aliases": [], "root": false, "id": 864, "parent_node_name": ""}, "member": {"id": 30753, "username": "felix021", "url": "https://www.v2ex.com/u/felix021", "website": "http://www.felix021.com", "twitter": "", "psn": "", "github": "felix021", "btc": "", "location": "上海", "tagline": "人生には、三つ坂があるんですって、上り坂、下り坂、まさか。", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/ac0d/7b02/30753_mini.png?m=1588869191", "avatar_normal": "https://cdn.v2ex.com/avatar/ac0d/7b02/30753_normal.png?m=1588869191", "avatar_large": "https://cdn.v2ex.com/avatar/ac0d/7b02/30753_large.png?m=1588869191", "created": 1355754362, "last_modified": 1588869191}, "last_reply_by": "xloger", "last_touched": 1647214953, "title": "一张证书引发的噱案", "url": "https://www.v2ex.com/t/840034", "created": 1647160912, "deleted": 0, "content": "![]( https://image-static.segmentfault.com/388/740/3887409003-622d9ca20764d)\r\n\r\n# - 引 -\r\n\r\n我也没想到在神策数据这大半年能遇到好几次和证书相关的问题。\r\n\r\n# - 起 -\r\n\r\n2021 年 9 月 3 号，一个新客户接入到我们的 SaaS 系统。在某个环节，我们会给客户发个 HTTPS 请求，没想到竟然遇到了个 `SSLHandshakeException`:\r\n\r\n> Caused by: javax.net.ssl.SSLHandshakeException: ... unable to find valid certification path to requested target\r\n\r\n在服务器上用 curl 试一把，也报错：\r\n\r\n```\r\n$ curl -v https://some.domain/\r\nCAfile: /etc/pki/tls/certs/ca-bundle.crt\r\n...\r\ncurl: (60) Peer's Certificate issuer is not recognized.\r\n```\r\n\r\n但用浏览器打开这个 URL ，却是没问题的，这说明问题应该出在我们的服务器端。\r\n\r\n# - 析 -\r\n\r\n我们知道，HTTPS 是靠证书保证通信安全的；但客户端如何保证服务端给的证书是可信的呢？\r\n\r\n由于证书总是由某个证书颁发机构（ Certificate issuer ，或 Certificate Authority ，简写成 CA ）签发的，如果我们事先将一批可信的证书颁发机构存储在本地，就可以在发起请求的时候判断证书是否可信了。\r\n\r\n有时情况会更复杂一些：某些机构不在我们的列表里，但他的证书是由我们信任的某个机构颁发的，我们也认为他是可信的，因此他颁发的证书也是可信的。\r\n\r\n于是这就构成了一个信任链，链的末端是「根证书颁发机构」（ Root CA ），这些机构通常是国际上公认可靠的大型机构，或者国家权威机关背书的机构。\r\n\r\n理解了这点，就可以推测，应当是我们服务器上的机构列表没有及时更新；只要把该客户证书的颁发机构加入本地的列表就应该能解决该问题。\r\n\r\n# - 解 -\r\n\r\n再细看上面 curl 命令的输出，有一行 `CAfile: /etc/pki/tls/certs/ca-bundle.crt`，这就是 curl 使用到的证书颁发机构列表。\r\n\r\n以 `www.baidu.com` 为例，我们可以通过如下命令获取客户证书的信任链：\r\n\r\n```\r\n$ openssl s_client -showcerts -servername server -connect www.baidu.com:443 > cacert.pem\r\n```\r\n\r\n在得到的 `cacert.pem` 中，我们可以看到如下内容（略作简化)：\r\n```\r\nCertificate chain\r\n 0 s:/CN=baidu.com\r\n   i:/CN=GlobalSign Organization Validation CA - SHA256 - G2\r\n\r\n-----BEGIN CERTIFICATE-----\r\nMIIKQDCCCSigAwIBAgIMEZhyT2Z0o9Yhv76iMA0GCSqGSIb3DQEBCwUAMGYxCzAJ\r\n...(略)...\r\nn3XcFtwQLBY9Iuqh8Mn7vtiv5k2azdGsYhZcFBCBAeUoRhDC\r\n-----END CERTIFICATE-----\r\n\r\n 1 s:/CN=GlobalSign Organization Validation CA - SHA256 - G2\r\n   i:/OU=Root CA/CN=GlobalSign Root CA\r\n\r\n-----BEGIN CERTIFICATE-----\r\nMIIEaTCCA1GgAwIBAgILBAAAAAABRE7wQkcwDQYJKoZIhvcNAQELBQAwVzELMAkG\r\n...(略)...\r\nK1pp74P1S8SqtCr4fKGxhZSM9AyHDPSsQPhZSZg=\r\n-----END CERTIFICATE-----\r\n\r\n...(略)...\r\n```\r\n\r\n可以看到里面有两段用 `--BEGIN CERTIFICATE--` 和 `--END CERTIFICATE--` 包起来的 base64 编码字符串，这就是被编码为 PEM 格式（ Privacy Enhanced Mail ）的证书了（有时也会用 .crt 作为扩展名）。\r\n\r\n在 BEGIN 前面有一些摘要，可以帮助我们了解证书的内容，比如 `s:/CN=baidu.com` 表示这个证书的主体（ s 即 subject ）是 baidu.com （ CN 即 common name ），`i:/CN=GlobalSign` 表示它的颁发机构（ i 即 issuer ）是 GlobalSign 。\r\n\r\n因此可以看到，这个 `cacert.pem` 实际上包含了两个证书，一个是百度使用的证书，另一个是颁发该证书的 GlobalSign 这个机构（ CA ）自己的证书。\r\n\r\n通过 `curl --cacert cacert.pem https://www.baidu.com` 我们可以确认，这个信任链能用来验证 www.baidu.com 的证书（实际上我们只需要里面第二个证书，将第一个证书删除，不影响 curl 的执行）。\r\n\r\n回到该客户的情况，我们用相同的方法取得客户证书颁发机构的证书，将它放到 `/etc/pki/ca-trust/source/anchors/` 目录，执行 `update-ca-trust` 将其加入到证书列表中，就可以正常使用 curl 命令来请求了。\r\n\r\n# - 然 -\r\n\r\n没有「但是」的文章不是好文章。\r\n\r\ncurl 正常了，但是我们的 Java 代码依然报错，这说明 java 和 curl 使用了不同的 CA 列表。\r\n\r\n问题倒是好解决，简单搜索一下，就了解到 jre 的证书是存放在 `$JAVA_HOME/jre/lib/security/cacerts` 这个文件里，需要使用专门的 keytool 工具来更新它：\r\n\r\n```\r\n$ keytool -import -trustcacerts -file cacert.pem -alias 证书颁发机构的名称 -keystore $JAVA_HOME/jre/lib/security/cacerts\r\n\r\nEnter keystore password:  changeit （这是 jre 自带的默认密码）\r\n\r\nCertificate was added to keystore\r\n```\r\n\r\n再次验证，Java 代码就可以正常运行了。\r\n\r\n注：如果想要单独验证某个证书，可以这样\r\n\r\n* (1) 先创建一个空的 keyStore （密码为 storePassword ）：\r\n```\r\n$ keytool -genkeypair -alias boguscert -storepass storePassword -keypass secretPassword -keystore keystore -dname \"CN=Developer\"\r\n$ keytool -delete -alias boguscert -storepass storePassword -keystore emptyStore.keystore\r\n```\r\n* (2) 添加证书到该 keyStore：\r\n```\r\n$ keytool -import -trustcacerts -file cacert.pem -alias 机构名称 -keystore keystore\r\n```\r\n* (3) 指定 keyStore 启动 java 程序：\r\n```\r\n$ java -Djavax.net.ssl.trustStore=keystore -Djavax.net.ssl.trustStorePassword=storePassword -cp $CLASS_PATH CLASS_NAME\r\n```\r\n\r\n# - 劫 -\r\n\r\n不巧的是，这周又遇到了一个证书信任的问题，这次是客户的环境向我们的服务器发起请求，报了相同的错误。\r\n\r\n有了前车之鉴，上面这些命令执行起来可谓得心应手，但是这次却不灵了。\r\n\r\n排查过程比较琐碎，也因为陷入思维定势而走了一些弯路，但其实原因很简单，这里就不卖关子了。\r\n\r\n这家客户是一家泛金融类的企业，其生产环境的网络安全级别非常高，不仅有严格的外网访问限制，而且针对所有 https 请求都会默认劫持，用一个自签名证书返回错误信息。\r\n\r\n经过与客户沟通，将神策数据的域名添加到白名单后，问题得以解决。\r\n\r\n# - 故事 -\r\n\r\n讲完了事故，再讲讲故事。\r\n\r\n非对称加密、证书、信任链这一系列发明，构成了现在 web 通信安全的基石，很难想象如果没有这些基础设施，现在互联网还能做些什么。\r\n\r\n但是这里隐藏了一个大 bug：**我们凭什么相信本地这些证书颁发机构是可信的？**\r\n\r\n至少有三种情况会打破这个假设：\r\n\r\n* 本地 CA 列表被污染\r\n\r\n可能你的电脑 /手机被病毒导入了 CA 证书；或者你自己可能就做过这个事情，比如公司网管要求添加公司的自签名证书，又或者你为了能使用 Charles 来抓 https 请求，导入了它自签名的 Root CA 证书。\r\n\r\n* 机构的私钥泄漏\r\n\r\n我没有在公开渠道查到相关的事故（倒是有一个代理商把客户证书的私钥给泄漏了）；如果某个机构的私钥泄漏，这家机构应该离倒闭也不远了。\r\n\r\n* 看起来正经的机构也可能不正经\r\n\r\n各国政府控制的 CA 机构大概都干过些「不干净」的事情（至少有这种冲动），有一些被发现了，有一些还没有。出于本文的安全考虑，这里就不展开细节了。此外，「不被政府控制」的那些机构，就一定干净么？说到底，机构总是被所在国管辖的，当遇到政府行政命令的时候，不一定有反抗的能力。\r\n\r\n综上，理论上并不存在 100% 可靠的通信安全方案。\r\n\r\n如果你的应用对通信安全要求非常严格，连本地的 CA 列表都不相信，可以考虑加入更多的手段来提高通信的安全等级。\r\n\r\n简单一点的场景（例如 app 不想被抓包破解协议），可以自己校验服务器的证书（证书指纹，或者自己指定证书颁发机构列表）；要求更高的场景（例如需要访问内部控制系统），可以给客户端颁发证书，浏览器会在请求时提供证书用于校验，感兴趣的话可以参考 [这个不太完善的项目]( https://github.com/felix021/openssl-selfsign)。\r\n\r\n# - 收 -\r\n\r\n结尾照例做一个小结：\r\n\r\n1. HTTPS 是基于证书链来保证通信安全的；\r\n2. 信任的基石是本地的证书颁发机构（ CA ）列表；\r\n3. 可以通过向本地列表添加 CA 证书的方式来解决需要信任的证书；\r\n4. 本地的 CA 不一定都是可信的；\r\n5. 可以通过更严格的校验，或者客户端证书来加强通信的安全等级。\r\n\r\n最后，神策在北京、上海、成都、武汉、深圳等多地均在招聘开发、产品、QA 等岗位，感兴趣的小伙伴欢迎私信勾搭；也可以点击我的 [内推链接]( https://neitui.italent.cn/sensorsdata/sharejobs?shareId=058b610b-1748-4984-8ac4-5be9c4af6d79) 查看 JD 并投递简历。\r\n\r\n\r\n# 关注公众号，查看更多历史文章\r\n\r\n\r\n```\r\n   ▄▄▄▄▄▄▄   ▄      ▄▄▄▄ ▄▄▄▄▄▄▄  \r\n   █ ▄▄▄ █ ▄▀ ▄ ▀██▄ ▀█▄ █ ▄▄▄ █  \r\n   █ ███ █  █  █  █▀▀▀█▀ █ ███ █  \r\n   █▄▄▄▄▄█ ▄ █▀█ █▀█ ▄▀█ █▄▄▄▄▄█  \r\n   ▄▄▄ ▄▄▄▄█  ▀▄█▀▀▀█ ▄█▄▄   ▄    \r\n   ▄█▄▄▄▄▄▀▄▀▄██   ▀ ▄  █▀▄▄▀▄▄█  \r\n   █ █▀▄▀▄▄▀▀█▄▀█▄▀█████▀█▀▀█ █▄  \r\n    ▀▀  █▄██▄█▀  █ ▀█▀ ▀█▀ ▄▀▀▄█  \r\n   █▀ ▀ ▄▄▄▄▄▄▀▄██  █ ▄████▀▀ █▄  \r\n   ▄▀▄▄▄ ▄ ▀▀▄████▀█▀  ▀ █▄▄▄▀▄█  \r\n   ▄▀▀██▄▄  █▀▄▀█▀▀ █▀ ▄▄▄██▀ ▀   \r\n   ▄▄▄▄▄▄▄ █ █▀ ▀▀   ▄██ ▄ █▄▀██  \r\n   █ ▄▄▄ █ █▄ ▀▄▀ ▀██  █▄▄▄█▄  ▀  \r\n   █ ███ █ ▄ ███▀▀▀█▄ █▀▄ ██▄ ▀█  \r\n   █▄▄▄▄▄█ ██ ▄█▀█  █ ▀██▄▄▄  █▄  \r\n```", "content_rendered": "<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://image-static.segmentfault.com/388/740/3887409003-622d9ca20764d\"/></p>\n<h1>- 引 -</h1>\n<p>我也没想到在神策数据这大半年能遇到好几次和证书相关的问题。</p>\n<h1>- 起 -</h1>\n<p>2021 年 9 月 3 号，一个新客户接入到我们的 SaaS 系统。在某个环节，我们会给客户发个 HTTPS 请求，没想到竟然遇到了个 <code>SSLHandshakeException</code>:</p>\n<blockquote>\n<p>Caused by: javax.net.ssl.SSLHandshakeException: ... unable to find valid certification path to requested target</p>\n</blockquote>\n<p>在服务器上用 curl 试一把，也报错：</p>\n<pre><code>$ curl -v https://some.domain/\nCAfile: /etc/pki/tls/certs/ca-bundle.crt\n...\ncurl: (60) Peer's Certificate issuer is not recognized.\n</code></pre>\n<p>但用浏览器打开这个 URL ，却是没问题的，这说明问题应该出在我们的服务器端。</p>\n<h1>- 析 -</h1>\n<p>我们知道，HTTPS 是靠证书保证通信安全的；但客户端如何保证服务端给的证书是可信的呢？</p>\n<p>由于证书总是由某个证书颁发机构（ Certificate issuer ，或 Certificate Authority ，简写成 CA ）签发的，如果我们事先将一批可信的证书颁发机构存储在本地，就可以在发起请求的时候判断证书是否可信了。</p>\n<p>有时情况会更复杂一些：某些机构不在我们的列表里，但他的证书是由我们信任的某个机构颁发的，我们也认为他是可信的，因此他颁发的证书也是可信的。</p>\n<p>于是这就构成了一个信任链，链的末端是「根证书颁发机构」（ Root CA ），这些机构通常是国际上公认可靠的大型机构，或者国家权威机关背书的机构。</p>\n<p>理解了这点，就可以推测，应当是我们服务器上的机构列表没有及时更新；只要把该客户证书的颁发机构加入本地的列表就应该能解决该问题。</p>\n<h1>- 解 -</h1>\n<p>再细看上面 curl 命令的输出，有一行 <code>CAfile: /etc/pki/tls/certs/ca-bundle.crt</code>，这就是 curl 使用到的证书颁发机构列表。</p>\n<p>以 <code><a href=\"http://www.baidu.com\" rel=\"nofollow\">www.baidu.com</a></code> 为例，我们可以通过如下命令获取客户证书的信任链：</p>\n<pre><code>$ openssl s_client -showcerts -servername server -connect www.baidu.com:443 &gt; cacert.pem\n</code></pre>\n<p>在得到的 <code>cacert.pem</code> 中，我们可以看到如下内容（略作简化)：</p>\n<pre><code>Certificate chain\n 0 s:/CN=baidu.com\n   i:/CN=GlobalSign Organization Validation CA - SHA256 - G2\n\n-----BEGIN CERTIFICATE-----\nMIIKQDCCCSigAwIBAgIMEZhyT2Z0o9Yhv76iMA0GCSqGSIb3DQEBCwUAMGYxCzAJ\n...(略)...\nn3XcFtwQLBY9Iuqh8Mn7vtiv5k2azdGsYhZcFBCBAeUoRhDC\n-----END CERTIFICATE-----\n\n 1 s:/CN=GlobalSign Organization Validation CA - SHA256 - G2\n   i:/OU=Root CA/CN=GlobalSign Root CA\n\n-----BEGIN CERTIFICATE-----\nMIIEaTCCA1GgAwIBAgILBAAAAAABRE7wQkcwDQYJKoZIhvcNAQELBQAwVzELMAkG\n...(略)...\nK1pp74P1S8SqtCr4fKGxhZSM9AyHDPSsQPhZSZg=\n-----END CERTIFICATE-----\n\n...(略)...\n</code></pre>\n<p>可以看到里面有两段用 <code>--BEGIN CERTIFICATE--</code> 和 <code>--END CERTIFICATE--</code> 包起来的 base64 编码字符串，这就是被编码为 PEM 格式（ Privacy Enhanced Mail ）的证书了（有时也会用 .crt 作为扩展名）。</p>\n<p>在 BEGIN 前面有一些摘要，可以帮助我们了解证书的内容，比如 <code>s:/CN=<a href=\"http://baidu.com\" rel=\"nofollow\">baidu.com</a></code> 表示这个证书的主体（ s 即 subject ）是 <a href=\"http://baidu.com\" rel=\"nofollow\">baidu.com</a> （ CN 即 common name ），<code>i:/CN=GlobalSign</code> 表示它的颁发机构（ i 即 issuer ）是 GlobalSign 。</p>\n<p>因此可以看到，这个 <code>cacert.pem</code> 实际上包含了两个证书，一个是百度使用的证书，另一个是颁发该证书的 GlobalSign 这个机构（ CA ）自己的证书。</p>\n<p>通过 <code>curl --cacert cacert.pem <a href=\"https://www.baidu.com\" rel=\"nofollow\">https://www.baidu.com</a></code> 我们可以确认，这个信任链能用来验证 <a href=\"http://www.baidu.com\" rel=\"nofollow\">www.baidu.com</a> 的证书（实际上我们只需要里面第二个证书，将第一个证书删除，不影响 curl 的执行）。</p>\n<p>回到该客户的情况，我们用相同的方法取得客户证书颁发机构的证书，将它放到 <code>/etc/pki/ca-trust/source/anchors/</code> 目录，执行 <code>update-ca-trust</code> 将其加入到证书列表中，就可以正常使用 curl 命令来请求了。</p>\n<h1>- 然 -</h1>\n<p>没有「但是」的文章不是好文章。</p>\n<p>curl 正常了，但是我们的 Java 代码依然报错，这说明 java 和 curl 使用了不同的 CA 列表。</p>\n<p>问题倒是好解决，简单搜索一下，就了解到 jre 的证书是存放在 <code>$JAVA_HOME/jre/lib/security/cacerts</code> 这个文件里，需要使用专门的 keytool 工具来更新它：</p>\n<pre><code>$ keytool -import -trustcacerts -file cacert.pem -alias 证书颁发机构的名称 -keystore $JAVA_HOME/jre/lib/security/cacerts\n\nEnter keystore password:  changeit （这是 jre 自带的默认密码）\n\nCertificate was added to keystore\n</code></pre>\n<p>再次验证，Java 代码就可以正常运行了。</p>\n<p>注：如果想要单独验证某个证书，可以这样</p>\n<ul>\n<li>(1) 先创建一个空的 keyStore （密码为 storePassword ）：</li>\n</ul>\n<pre><code>$ keytool -genkeypair -alias boguscert -storepass storePassword -keypass secretPassword -keystore keystore -dname \"CN=Developer\"\n$ keytool -delete -alias boguscert -storepass storePassword -keystore emptyStore.keystore\n</code></pre>\n<ul>\n<li>(2) 添加证书到该 keyStore：</li>\n</ul>\n<pre><code>$ keytool -import -trustcacerts -file cacert.pem -alias 机构名称 -keystore keystore\n</code></pre>\n<ul>\n<li>(3) 指定 keyStore 启动 java 程序：</li>\n</ul>\n<pre><code>$ java -Djavax.net.ssl.trustStore=keystore -Djavax.net.ssl.trustStorePassword=storePassword -cp $CLASS_PATH CLASS_NAME\n</code></pre>\n<h1>- 劫 -</h1>\n<p>不巧的是，这周又遇到了一个证书信任的问题，这次是客户的环境向我们的服务器发起请求，报了相同的错误。</p>\n<p>有了前车之鉴，上面这些命令执行起来可谓得心应手，但是这次却不灵了。</p>\n<p>排查过程比较琐碎，也因为陷入思维定势而走了一些弯路，但其实原因很简单，这里就不卖关子了。</p>\n<p>这家客户是一家泛金融类的企业，其生产环境的网络安全级别非常高，不仅有严格的外网访问限制，而且针对所有 https 请求都会默认劫持，用一个自签名证书返回错误信息。</p>\n<p>经过与客户沟通，将神策数据的域名添加到白名单后，问题得以解决。</p>\n<h1>- 故事 -</h1>\n<p>讲完了事故，再讲讲故事。</p>\n<p>非对称加密、证书、信任链这一系列发明，构成了现在 web 通信安全的基石，很难想象如果没有这些基础设施，现在互联网还能做些什么。</p>\n<p>但是这里隐藏了一个大 bug：<strong>我们凭什么相信本地这些证书颁发机构是可信的？</strong></p>\n<p>至少有三种情况会打破这个假设：</p>\n<ul>\n<li>本地 CA 列表被污染</li>\n</ul>\n<p>可能你的电脑 /手机被病毒导入了 CA 证书；或者你自己可能就做过这个事情，比如公司网管要求添加公司的自签名证书，又或者你为了能使用 Charles 来抓 https 请求，导入了它自签名的 Root CA 证书。</p>\n<ul>\n<li>机构的私钥泄漏</li>\n</ul>\n<p>我没有在公开渠道查到相关的事故（倒是有一个代理商把客户证书的私钥给泄漏了）；如果某个机构的私钥泄漏，这家机构应该离倒闭也不远了。</p>\n<ul>\n<li>看起来正经的机构也可能不正经</li>\n</ul>\n<p>各国政府控制的 CA 机构大概都干过些「不干净」的事情（至少有这种冲动），有一些被发现了，有一些还没有。出于本文的安全考虑，这里就不展开细节了。此外，「不被政府控制」的那些机构，就一定干净么？说到底，机构总是被所在国管辖的，当遇到政府行政命令的时候，不一定有反抗的能力。</p>\n<p>综上，理论上并不存在 100% 可靠的通信安全方案。</p>\n<p>如果你的应用对通信安全要求非常严格，连本地的 CA 列表都不相信，可以考虑加入更多的手段来提高通信的安全等级。</p>\n<p>简单一点的场景（例如 app 不想被抓包破解协议），可以自己校验服务器的证书（证书指纹，或者自己指定证书颁发机构列表）；要求更高的场景（例如需要访问内部控制系统），可以给客户端颁发证书，浏览器会在请求时提供证书用于校验，感兴趣的话可以参考 <a href=\"https://github.com/felix021/openssl-selfsign\" rel=\"nofollow\">这个不太完善的项目</a>。</p>\n<h1>- 收 -</h1>\n<p>结尾照例做一个小结：</p>\n<ol>\n<li>HTTPS 是基于证书链来保证通信安全的；</li>\n<li>信任的基石是本地的证书颁发机构（ CA ）列表；</li>\n<li>可以通过向本地列表添加 CA 证书的方式来解决需要信任的证书；</li>\n<li>本地的 CA 不一定都是可信的；</li>\n<li>可以通过更严格的校验，或者客户端证书来加强通信的安全等级。</li>\n</ol>\n<p>最后，神策在北京、上海、成都、武汉、深圳等多地均在招聘开发、产品、QA 等岗位，感兴趣的小伙伴欢迎私信勾搭；也可以点击我的 <a href=\"https://neitui.italent.cn/sensorsdata/sharejobs?shareId=058b610b-1748-4984-8ac4-5be9c4af6d79\" rel=\"nofollow\">内推链接</a> 查看 JD 并投递简历。</p>\n<h1>关注公众号，查看更多历史文章</h1>\n<pre><code>   ▄▄▄▄▄▄▄   ▄      ▄▄▄▄ ▄▄▄▄▄▄▄  \n   █ ▄▄▄ █ ▄▀ ▄ ▀██▄ ▀█▄ █ ▄▄▄ █  \n   █ ███ █  █  █  █▀▀▀█▀ █ ███ █  \n   █▄▄▄▄▄█ ▄ █▀█ █▀█ ▄▀█ █▄▄▄▄▄█  \n   ▄▄▄ ▄▄▄▄█  ▀▄█▀▀▀█ ▄█▄▄   ▄    \n   ▄█▄▄▄▄▄▀▄▀▄██   ▀ ▄  █▀▄▄▀▄▄█  \n   █ █▀▄▀▄▄▀▀█▄▀█▄▀█████▀█▀▀█ █▄  \n    ▀▀  █▄██▄█▀  █ ▀█▀ ▀█▀ ▄▀▀▄█  \n   █▀ ▀ ▄▄▄▄▄▄▀▄██  █ ▄████▀▀ █▄  \n   ▄▀▄▄▄ ▄ ▀▀▄████▀█▀  ▀ █▄▄▄▀▄█  \n   ▄▀▀██▄▄  █▀▄▀█▀▀ █▀ ▄▄▄██▀ ▀   \n   ▄▄▄▄▄▄▄ █ █▀ ▀▀   ▄██ ▄ █▄▀██  \n   █ ▄▄▄ █ █▄ ▀▄▀ ▀██  █▄▄▄█▄  ▀  \n   █ ███ █ ▄ ███▀▀▀█▄ █▀▄ ██▄ ▀█  \n   █▄▄▄▄▄█ ██ ▄█▀█  █ ▀██▄▄▄  █▄  \n</code></pre>\n", "last_modified": 1647223543, "replies": 55, "id": 840034}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/093f/65e0/59_large.png?m=1615956453", "name": "random", "avatar_normal": "https://cdn.v2ex.com/navatar/093f/65e0/59_normal.png?m=1615956453", "title": "随想", "url": "https://www.v2ex.com/go/random", "topics": 3145, "footer": "", "header": "有的时候，可以停下来找找灵感，然后再继续。", "title_alternative": "Random", "avatar_mini": "https://cdn.v2ex.com/navatar/093f/65e0/59_mini.png?m=1615956453", "stars": 1015, "aliases": [], "root": false, "id": 59, "parent_node_name": "v2ex"}, "member": {"id": 340358, "username": "zwnozhuce", "url": "https://www.v2ex.com/u/zwnozhuce", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/df16/43fd/340358_mini.png?m=1584192513", "avatar_normal": "https://cdn.v2ex.com/avatar/df16/43fd/340358_normal.png?m=1584192513", "avatar_large": "https://cdn.v2ex.com/avatar/df16/43fd/340358_large.png?m=1584192513", "created": 1533969633, "last_modified": 1584192513}, "last_reply_by": "lscexpress", "last_touched": 1647229719, "title": "程序员的人生不要设限", "url": "https://www.v2ex.com/t/840026", "created": 1647158773, "deleted": 0, "content": "接上次发的帖子讨论,我觉得程序员的人生不应该给自己设限.\r\n\r\n比如我是后端程序员,前端就不接触和学习或者前端人员就不接触学习其它的技术.\r\n\r\n上面的做法无疑降低了自己的竞争性,一个程序员应该是努力培养自己多方面的东西,比如根据需要学习相关技术,\r\n或者学习市场、运营相关知识,努力扩展自己的上限,不要给自己设置限制.当前就业环境可能要求我们精通某项技术然后去扭螺丝钉,但是如果离开这个公司,作为个体我能做什么.培养不依赖公司依然能让自己活下去的技术和能力很重要.单一技能可能会让我们没有太多选择性,最终越来越没有竞争里.多方面的技能会让我们在未来面对裁员或各种大环境变化的场景从容应对甚至可以快速切换职业角色.\r\n\r\n总结一句话,人生不设限,努力扩展上限.不要当一颗随时可能被替换的螺丝钉.\r\n\r\n\r\n睡醒有感 2022.03.13", "content_rendered": "<p>接上次发的帖子讨论,我觉得程序员的人生不应该给自己设限.</p>\n<p>比如我是后端程序员,前端就不接触和学习或者前端人员就不接触学习其它的技术.</p>\n<p>上面的做法无疑降低了自己的竞争性,一个程序员应该是努力培养自己多方面的东西,比如根据需要学习相关技术,\n或者学习市场、运营相关知识,努力扩展自己的上限,不要给自己设置限制.当前就业环境可能要求我们精通某项技术然后去扭螺丝钉,但是如果离开这个公司,作为个体我能做什么.培养不依赖公司依然能让自己活下去的技术和能力很重要.单一技能可能会让我们没有太多选择性,最终越来越没有竞争里.多方面的技能会让我们在未来面对裁员或各种大环境变化的场景从容应对甚至可以快速切换职业角色.</p>\n<p>总结一句话,人生不设限,努力扩展上限.不要当一颗随时可能被替换的螺丝钉.</p>\n<p>睡醒有感 2022.03.13</p>\n", "last_modified": 1647224576, "replies": 51, "id": 840026}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4299/8cf3/457_large.png?m=1583583838", "name": "gamedev", "avatar_normal": "https://cdn.v2ex.com/navatar/4299/8cf3/457_normal.png?m=1583583838", "title": "游戏开发", "url": "https://www.v2ex.com/go/gamedev", "topics": 288, "footer": "", "header": "无论你正在制作自己的 indie game，或是在大公司参与 AAA 大作，这里是大家讨论技术和理念的地方。", "title_alternative": "Game Development", "avatar_mini": "https://cdn.v2ex.com/navatar/4299/8cf3/457_mini.png?m=1583583838", "stars": 480, "aliases": [], "root": false, "id": 457, "parent_node_name": "programmer"}, "member": {"id": 522487, "username": "theklf4", "url": "https://www.v2ex.com/u/theklf4", "website": null, "twitter": "", "psn": "", "github": "", "btc": "", "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/4992f9ff63c26b4694fd1d2ca4e805e5?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/4992f9ff63c26b4694fd1d2ca4e805e5?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/4992f9ff63c26b4694fd1d2ca4e805e5?s=73&d=retro", "created": 1607186074, "last_modified": 1646801032}, "last_reply_by": "yy77", "last_touched": 1647235625, "title": "为什么欧美二次元游戏厂商这么少？", "url": "https://www.v2ex.com/t/840101", "created": 1647184359, "deleted": 0, "content": "几乎没听说过一个欧美开发的二次元游戏。", "content_rendered": "几乎没听说过一个欧美开发的二次元游戏。", "last_modified": 1647184359, "replies": 47, "id": 840101}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913", "name": "apple", "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913", "title": "Apple", "url": "https://www.v2ex.com/go/apple", "topics": 17842, "footer": "", "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。", "title_alternative": "Apple", "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913", "stars": 2093, "aliases": [], "root": false, "id": 184, "parent_node_name": "hardware"}, "member": {"id": 540908, "username": "INFP", "url": "https://www.v2ex.com/u/INFP", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "United States", "tagline": "", "bio": "我的所有回复都有一定几率是反串黑", "avatar_mini": "https://cdn.v2ex.com/avatar/8744/742f/540908_mini.png?m=1647204588", "avatar_normal": "https://cdn.v2ex.com/avatar/8744/742f/540908_normal.png?m=1647204588", "avatar_large": "https://cdn.v2ex.com/avatar/8744/742f/540908_large.png?m=1647204588", "created": 1617372047, "last_modified": 1647204588}, "last_reply_by": "LxExExl", "last_touched": 1647235219, "title": "你以为 Studio Display 贵，可能这是未来最便宜的苹果显示器了", "url": "https://www.v2ex.com/t/840131", "created": 1647221188, "deleted": 0, "content": "很多人抱怨 Studio Display 没有 ProMotion 没有 miniLED ，卖 1600 美元，属于智商税产品。\r\n\r\n有没有一种可能，有 ProMotion 和 miniLED 的下一款苹果显示器，售价不是$2500 而是继续保持$4999+？\r\n\r\n\r\n等到这款显示器出来的时候，可能你还是要回去下单买 Studio Display 。有没有一种可能，三年后，Studio Display 还是唯一的 5K 果味显示器，想买还是要 1599 ，而别人首发 1599 买的已经用了三年了。所以，如果你以前不想买 Pro Display XDR ，那么以后你也不会买新 XDR 显示器，这款 5K 600nits 的屏幕就是你的唯一选择。\r\n\r\n\r\n\r\n还有就是为什么 5K 分辨率贵。你以为显示器的造价是只按尺寸算的，其实是按像素数算的，多 78%的像素保证无坏点的难度翻一倍，除了苹果 LG 外确实没有哪家制造商没事干去卖 5K 显示器。\r\n\r\n说句题外话，去年买的升降桌腿是 350 刀，现在一模一样的东西卖 599 刀，什么玩意都涨价了，高通胀下的物价就是这样的。", "content_rendered": "很多人抱怨 Studio Display 没有 ProMotion 没有 miniLED ，卖 1600 美元，属于智商税产品。<br /><br />有没有一种可能，有 ProMotion 和 miniLED 的下一款苹果显示器，售价不是$2500 而是继续保持$4999+？<br /><br /><br />等到这款显示器出来的时候，可能你还是要回去下单买 Studio Display 。有没有一种可能，三年后，Studio Display 还是唯一的 5K 果味显示器，想买还是要 1599 ，而别人首发 1599 买的已经用了三年了。所以，如果你以前不想买 Pro Display XDR ，那么以后你也不会买新 XDR 显示器，这款 5K 600nits 的屏幕就是你的唯一选择。<br /><br /><br /><br />还有就是为什么 5K 分辨率贵。你以为显示器的造价是只按尺寸算的，其实是按像素数算的，多 78%的像素保证无坏点的难度翻一倍，除了苹果 LG 外确实没有哪家制造商没事干去卖 5K 显示器。<br /><br />说句题外话，去年买的升降桌腿是 350 刀，现在一模一样的东西卖 599 刀，什么玩意都涨价了，高通胀下的物价就是这样的。", "last_modified": 1647221473, "replies": 46, "id": 840131}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/74bb/a227/938_large.png?m=1591791660", "name": "gts", "avatar_normal": "https://cdn.v2ex.com/navatar/74bb/a227/938_normal.png?m=1591791660", "title": "全球工单系统", "url": "https://www.v2ex.com/go/gts", "topics": 8847, "footer": "", "header": "希望这里能够为你遇到的问题找到解决方案", "title_alternative": "Global Ticket System", "avatar_mini": "https://cdn.v2ex.com/navatar/74bb/a227/938_mini.png?m=1591791660", "stars": 1664, "aliases": [], "root": false, "id": 938, "parent_node_name": "geek"}, "member": {"id": 487715, "username": "goodhellonice", "url": "https://www.v2ex.com/u/goodhellonice", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/a66b/6c3e/487715_mini.png?m=1615460716", "avatar_normal": "https://cdn.v2ex.com/avatar/a66b/6c3e/487715_normal.png?m=1615460716", "avatar_large": "https://cdn.v2ex.com/avatar/a66b/6c3e/487715_large.png?m=1615460716", "created": 1588595775, "last_modified": 1615460716}, "last_reply_by": "chippai", "last_touched": 1647235219, "title": "彩云天气，原来多好的一个 app，现在真是让人一言难尽……（记得产品经理在 v 站出没过", "url": "https://www.v2ex.com/t/840040", "created": 1647162295, "deleted": 0, "content": "1. pro 用户不如🐕系列，免费版本竟然更新的更快\r\n2. 会员体系是学的迅雷么？付费了再付费？\r\n3. 广告，广告，广告\r\n4. 越来越不准...", "content_rendered": "<ol>\n<li>pro 用户不如🐕系列，免费版本竟然更新的更快</li>\n<li>会员体系是学的迅雷么？付费了再付费？</li>\n<li>广告，广告，广告</li>\n<li>越来越不准...</li>\n</ol>\n", "last_modified": 1647190684, "replies": 40, "id": 840040}]