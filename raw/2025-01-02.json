[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/a4a0/42cf/171_large.png?m=1630576706", "name": "invest", "avatar_normal": "https://cdn.v2ex.com/navatar/a4a0/42cf/171_normal.png?m=1630576706", "title": "投资", "url": "https://www.v2ex.com/go/invest", "topics": 2144, "footer": "", "header": "Can you make money with money?", "title_alternative": "Invest", "avatar_mini": "https://cdn.v2ex.com/navatar/a4a0/42cf/171_mini.png?m=1630576706", "stars": 3254, "aliases": [], "root": false, "id": 171, "parent_node_name": "money"}, "member": {"id": 686243, "username": "opscoffeecn", "url": "https://www.v2ex.com/u/opscoffeecn", "website": "https://ops-coffee.cn", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/871cdaeae3ca210361844a40467aa96c?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/871cdaeae3ca210361844a40467aa96c?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/871cdaeae3ca210361844a40467aa96c?s=73&d=retro", "created": 1713748704, "last_modified": 1713748704}, "last_reply_by": "isSamle", "last_touched": 1735817332, "title": "意外得到一笔钱， 100 万，那么问题来了", "url": "https://www.v2ex.com/t/1101896", "created": 1735782744, "deleted": 0, "content": "麻烦问下大佬们，2025 年了，有什么稳定（不损失本金）收益高点的理财方式？期望收益能在 3%以上\r\n\r\n保本！保本！保本！", "content_rendered": "<p>麻烦问下大佬们，2025 年了，有什么稳定（不损失本金）收益高点的理财方式？期望收益能在 3%以上</p>\n<p>保本！保本！保本！</p>\n", "last_modified": 1735785149, "replies": 164, "id": 1101896}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 6905, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 1652, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 109519, "username": "LouisGuo", "url": "https://www.v2ex.com/u/LouisGuo", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/a0c2/f323/109519_mini.png?m=1579440756", "avatar_normal": "https://cdn.v2ex.com/avatar/a0c2/f323/109519_normal.png?m=1579440756", "avatar_large": "https://cdn.v2ex.com/avatar/a0c2/f323/109519_large.png?m=1579440756", "created": 1428348149, "last_modified": 1579440756}, "last_reply_by": "spicy777", "last_touched": 1735827011, "title": "2025, 留下你最近的烦恼吧", "url": "https://www.v2ex.com/t/1101874", "created": 1735778013, "deleted": 0, "content": "亚里士多德：理性的人寻求的不是快乐，而是没有痛苦。\r\n\r\n    假如我们整个身体健康无恙，但只有一处地方受伤或者疼痛，那我们身体的整体健康就不会进入我们的意识里。我们的注意力始终集中在那微小的疼痛之处。同样，违反我们意愿的事情，即使是微不足道的，但这不如意就会进入我们头脑，我们就会惦记这件事情。\r\n    所以，判断一个人现在是否幸福，去问问他最近烦恼的事情把，看看事情是多么渺小，你就知道你现在有多幸福了。在很不幸地时候，那些微小的事情，你是感受不到的。\r\n\r\n写下大家最近的烦恼吧", "content_rendered": "亚里士多德：理性的人寻求的不是快乐，而是没有痛苦。<br /><br />    假如我们整个身体健康无恙，但只有一处地方受伤或者疼痛，那我们身体的整体健康就不会进入我们的意识里。我们的注意力始终集中在那微小的疼痛之处。同样，违反我们意愿的事情，即使是微不足道的，但这不如意就会进入我们头脑，我们就会惦记这件事情。<br />    所以，判断一个人现在是否幸福，去问问他最近烦恼的事情把，看看事情是多么渺小，你就知道你现在有多幸福了。在很不幸地时候，那些微小的事情，你是感受不到的。<br /><br />写下大家最近的烦恼吧", "last_modified": 1735785147, "replies": 134, "id": 1101874}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1733731195", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1733731195", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 65291, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1733731195", "stars": 9175, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 715558, "username": "edgebitllc", "url": "https://www.v2ex.com/u/edgebitllc", "website": "https://quickbookmark.online", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/250bf1cd9697b5a29509522ea27d2f13?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/250bf1cd9697b5a29509522ea27d2f13?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/250bf1cd9697b5a29509522ea27d2f13?s=73&d=retro", "created": 1729156504, "last_modified": 1732088348}, "last_reply_by": "seansong", "last_touched": 1735828524, "title": "postman 太臃肿，求推荐 mac 下的轻量替代品", "url": "https://www.v2ex.com/t/1101928", "created": 1735786573, "deleted": 0, "content": "postman 的开发者是没有别的产品了吗， 一直在 postman 加功能， 越来越臃肿，m1pro 都要启动一分钟出不来。\r\n\r\n受不了。\r\n\r\n求推荐个 mac 下性能好，功能便捷的 postman 替代品。curl 就别推荐了，用起来还是不方便。", "content_rendered": "<p>postman 的开发者是没有别的产品了吗， 一直在 postman 加功能， 越来越臃肿，m1pro 都要启动一分钟出不来。</p>\n<p>受不了。</p>\n<p>求推荐个 mac 下性能好，功能便捷的 postman 替代品。curl 就别推荐了，用起来还是不方便。</p>\n", "last_modified": 1735786573, "replies": 121, "id": 1101928}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1733731195", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1733731195", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 65291, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1733731195", "stars": 9175, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 207779, "username": "iintothewind", "url": "https://www.v2ex.com/u/iintothewind", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/cd1b/05b0/207779_mini.png?m=1735787935", "avatar_normal": "https://cdn.v2ex.com/avatar/cd1b/05b0/207779_normal.png?m=1735787935", "avatar_large": "https://cdn.v2ex.com/avatar/cd1b/05b0/207779_large.png?m=1735787935", "created": 1482796843, "last_modified": 1735787935}, "last_reply_by": "lesismal", "last_touched": 1735820587, "title": "golang, 开发效率低执行效率高的语言?", "url": "https://www.v2ex.com/t/1101972", "created": 1735792338, "deleted": 0, "content": "最近因为偶然的原因, 不得不用了一段时间的 go.\r\n经过这一段时间的使用, 发现这门语言实在是有太多不爽的地方, 所以就在这里吐槽一下, 看看是不是因为我理解不对, 还是这就是 go 语言以及生态的缺陷.\r\n\r\n## 语法表达力非常差\r\n\r\ngo 的控制流非常简单: for, if, else, switch and defer 就是全部了\r\n当然, 你如果之前对计算机语言所有的认知都来自于命令范式的语言(比如 C), 这并没有什么, 甚至觉得够用了.\r\n\r\n但是对于偏函数式风格的语言, 这简直太简陋了, 函数式的控制流不仅有 for, if-else, 对于 switch 来说有更加强大的 pattern-match, 对于 defer 这种玩意, 有更好 try-catch-finally 替代, 而且你想怎么写就怎么写.\r\n而且支持 unit, filter, map, flatMap 等等统一的操作.\r\n\r\n**golang 控制流的简陋直接造成了 golang 的语法表达能力差.**\r\n解决同样的问题, 需要更多更长的代码, 就像当年不支持 Lambda 特性的 Java 一样.\r\n\r\n\r\n我就奇怪了: Java 没有支持 Lambda 以前, 人人骂 Java 代码啰嗦, 写起来累人, 到了 golang 了这么差的语法表达力, 怎么就成了简单清爽?\r\n\r\n\r\n## 简陋敷衍的容错处理(Error Handling)\r\n\r\n我接触到其它语言在写后端业务逻辑是, 对于 public 方法的入参是采取完全不信任的态度的.\r\n原因很简单, 传进来的值在运行时存在非常多的可能, 最典型的就是 null 值一定要处理.\r\n如果存在 a.b.c.d 等这样取值方式, 恐怕要不得不采用 Option 一层层去拿.\r\n我可以理解有人说 Option 麻烦, 不管你用什么方式, 至少判空的逻辑是少不了的.\r\n\r\n但是, Golang 是没有 Option 和 Try 的, golang 甚至连三元表达式都没有, 所以一般 Golang 是这样做的:\r\n\r\nif a == nil {\r\n\treturn nil, someError(\"...\")\r\n} \r\n\r\nb, err := a.b\r\n\r\nif(err != nil) {\r\n\treturn nil, someError(\"...\")\r\n}\r\n\r\n\r\n后面一大长串的 if(err != nil).......\r\n\r\n\r\n如果你天天是写这样的代码, 你觉得这叫简洁?\r\n\r\n\r\n\r\n## 少到寒酸的集合类型以及集合操作\r\n\r\n其实 golang 的集合就只有个 array 和 map.\r\n\r\n还有人说 array 的 slice 支持操作很方便啊? \r\n我劝你醒醒, 看看其它语言吧, 就这几个操作哪个语言不支持啊?\r\n\r\nGo 默认集合类型就是可变的, 所以所有对集合的操作, 实际上是修改集合自身.\r\nGo 是没有不可变集合这个概念的.\r\n\r\n嗯, 找了找居然有人写了类似于 Linq 的 go-linq, 但是你看看相同的操作, go 得写多少代码吧, 而且每个操作结束时输出的变量居然时实现声明好再传进去的, 连直接输出到一个不可变集合的能力都没有.\r\n\r\n\r\n## 蛋疼的数据库处理\r\n\r\n其实我认为 Java 的数据库处理已经够老旧了.\r\nJDBC 标准已经很久没更新了, 而且很可能也不再更新了, 之前很多人期待的原生异步处理能力很可能不会再有了.\r\nJava 比较流行的 ORM 框架, hibernate 和 MyBatis 也已经非常老了, 老到都没办法在多线程环境下正常运行, 因为 Context 默认是单线程环境的.\r\n但就这么老的 ORM 框架, 或许没办法跟.Net 的 linq 处理效率比一比, 但跟 Go 比起来也是好太多了.\r\n\r\n来来来, Go 现在访问数据库, 有好的 ORM 框架吗? 有一个 sqlc 代码生成器, 大家已经觉得好太多了, 比自己写实在是快多了, 怎么不骂 Go 的数据库处理低效了, 就这??? 连个像样的 ORM 框架都没有.\r\n\r\n## 鸡肋的泛型系统\r\n\r\nGo 有泛型, 但又不支持方法级别的泛型.\r\n\r\nGo 也没有泛型型变的概念.\r\n\r\n所以你在接口上做一定程度的抽象, 绑定更多操作, 生成新的类型的实例是做不到的.\r\n\r\n\r\n## 总结\r\n\r\nGolang 其实真的只是一个 Better C 的定位, 当然这还是在开发效率上来说的,\r\n就是仅仅** Better-Than-C **.\r\n但 Golang 这简陋的语法, 相对于其它非常多的现代语言来讲, 还是差的很多的.\r\n\r\n可能 Go 语言的那几个掌舵人就是典型的命令范式计算机语言的拥趸, \r\n\"嗯, 我们可绝不会加入任何函数式的特性, 这会增加这个语言的复杂度, 降低编译速度, 让语言不纯粹....\"\r\n\r\n您说您的, 但是 Go 写写底层就好了, 毕竟比 C 好. \r\nC 可是连数据类型概念都没有, 从来只操作内存的.\r\n\r\n现在结构体都允许写接收方法了, 也能写点泛型了, 内存都帮你回收了, 你还想怎样?\r\n\r\n\r\n什么? 你说用 Go 写业务逻辑很痛苦???\r\n\r\n谁让你用 Go 写业务逻辑了, 跟你说了别去跟那帮写 Java 的混一起, 他们就只会 spring, 除了 spring 啥都不会.", "content_rendered": "<p>最近因为偶然的原因, 不得不用了一段时间的 go.\n经过这一段时间的使用, 发现这门语言实在是有太多不爽的地方, 所以就在这里吐槽一下, 看看是不是因为我理解不对, 还是这就是 go 语言以及生态的缺陷.</p>\n<h2>语法表达力非常差</h2>\n<p>go 的控制流非常简单: for, if, else, switch and defer 就是全部了\n当然, 你如果之前对计算机语言所有的认知都来自于命令范式的语言(比如 C), 这并没有什么, 甚至觉得够用了.</p>\n<p>但是对于偏函数式风格的语言, 这简直太简陋了, 函数式的控制流不仅有 for, if-else, 对于 switch 来说有更加强大的 pattern-match, 对于 defer 这种玩意, 有更好 try-catch-finally 替代, 而且你想怎么写就怎么写.\n而且支持 unit, filter, map, flatMap 等等统一的操作.</p>\n<p><strong>golang 控制流的简陋直接造成了 golang 的语法表达能力差.</strong>\n解决同样的问题, 需要更多更长的代码, 就像当年不支持 Lambda 特性的 Java 一样.</p>\n<p>我就奇怪了: Java 没有支持 Lambda 以前, 人人骂 Java 代码啰嗦, 写起来累人, 到了 golang 了这么差的语法表达力, 怎么就成了简单清爽?</p>\n<h2>简陋敷衍的容错处理(Error Handling)</h2>\n<p>我接触到其它语言在写后端业务逻辑是, 对于 public 方法的入参是采取完全不信任的态度的.\n原因很简单, 传进来的值在运行时存在非常多的可能, 最典型的就是 null 值一定要处理.\n如果存在 a.b.c.d 等这样取值方式, 恐怕要不得不采用 Option 一层层去拿.\n我可以理解有人说 Option 麻烦, 不管你用什么方式, 至少判空的逻辑是少不了的.</p>\n<p>但是, Golang 是没有 Option 和 Try 的, golang 甚至连三元表达式都没有, 所以一般 Golang 是这样做的:</p>\n<p>if a == nil {\nreturn nil, someError(\"...\")\n} </p>\n<p>b, err := a.b</p>\n<p>if(err != nil) {\nreturn nil, someError(\"...\")\n}</p>\n<p>后面一大长串的 if(err != nil).......</p>\n<p>如果你天天是写这样的代码, 你觉得这叫简洁?</p>\n<h2>少到寒酸的集合类型以及集合操作</h2>\n<p>其实 golang 的集合就只有个 array 和 map.</p>\n<p>还有人说 array 的 slice 支持操作很方便啊?\n我劝你醒醒, 看看其它语言吧, 就这几个操作哪个语言不支持啊?</p>\n<p>Go 默认集合类型就是可变的, 所以所有对集合的操作, 实际上是修改集合自身.\nGo 是没有不可变集合这个概念的.</p>\n<p>嗯, 找了找居然有人写了类似于 Linq 的 go-linq, 但是你看看相同的操作, go 得写多少代码吧, 而且每个操作结束时输出的变量居然时实现声明好再传进去的, 连直接输出到一个不可变集合的能力都没有.</p>\n<h2>蛋疼的数据库处理</h2>\n<p>其实我认为 Java 的数据库处理已经够老旧了.\nJDBC 标准已经很久没更新了, 而且很可能也不再更新了, 之前很多人期待的原生异步处理能力很可能不会再有了.\nJava 比较流行的 ORM 框架, hibernate 和 MyBatis 也已经非常老了, 老到都没办法在多线程环境下正常运行, 因为 Context 默认是单线程环境的.\n但就这么老的 ORM 框架, <a href=\"http://或许没办法跟.Net\" rel=\"nofollow\">或许没办法跟.Net</a> 的 linq 处理效率比一比, 但跟 Go 比起来也是好太多了.</p>\n<p>来来来, Go 现在访问数据库, 有好的 ORM 框架吗? 有一个 sqlc 代码生成器, 大家已经觉得好太多了, 比自己写实在是快多了, 怎么不骂 Go 的数据库处理低效了, 就这??? 连个像样的 ORM 框架都没有.</p>\n<h2>鸡肋的泛型系统</h2>\n<p>Go 有泛型, 但又不支持方法级别的泛型.</p>\n<p>Go 也没有泛型型变的概念.</p>\n<p>所以你在接口上做一定程度的抽象, 绑定更多操作, 生成新的类型的实例是做不到的.</p>\n<h2>总结</h2>\n<p>Golang 其实真的只是一个 Better C 的定位, 当然这还是在开发效率上来说的,\n就是仅仅** Better-Than-C **.\n但 Golang 这简陋的语法, 相对于其它非常多的现代语言来讲, 还是差的很多的.</p>\n<p>可能 Go 语言的那几个掌舵人就是典型的命令范式计算机语言的拥趸,\n\"嗯, 我们可绝不会加入任何函数式的特性, 这会增加这个语言的复杂度, 降低编译速度, 让语言不纯粹....\"</p>\n<p>您说您的, 但是 Go 写写底层就好了, 毕竟比 C 好.\nC 可是连数据类型概念都没有, 从来只操作内存的.</p>\n<p>现在结构体都允许写接收方法了, 也能写点泛型了, 内存都帮你回收了, 你还想怎样?</p>\n<p>什么? 你说用 Go 写业务逻辑很痛苦???</p>\n<p>谁让你用 Go 写业务逻辑了, 跟你说了别去跟那帮写 Java 的混一起, 他们就只会 spring, 除了 spring 啥都不会.</p>\n", "last_modified": 1735792338, "replies": 109, "id": 1101972}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/093f/65e0/59_large.png?m=1615956453", "name": "random", "avatar_normal": "https://cdn.v2ex.com/navatar/093f/65e0/59_normal.png?m=1615956453", "title": "随想", "url": "https://www.v2ex.com/go/random", "topics": 3902, "footer": "", "header": "有的时候，可以停下来找找灵感，然后再继续。", "title_alternative": "Random", "avatar_mini": "https://cdn.v2ex.com/navatar/093f/65e0/59_mini.png?m=1615956453", "stars": 1251, "aliases": [], "root": false, "id": 59, "parent_node_name": "v2ex"}, "member": {"id": 162422, "username": "queuey", "url": "https://www.v2ex.com/u/queuey", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "SHANG HAI", "tagline": "May the force be with you", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/88fa/b0cd/162422_mini.png?m=1733904202", "avatar_normal": "https://cdn.v2ex.com/avatar/88fa/b0cd/162422_normal.png?m=1733904202", "avatar_large": "https://cdn.v2ex.com/avatar/88fa/b0cd/162422_large.png?m=1733904202", "created": 1457428422, "last_modified": 1733904202}, "last_reply_by": "NetworkGuru30", "last_touched": 1735825888, "title": "33 岁才悟透一个道理，有钱是真好", "url": "https://www.v2ex.com/t/1101991", "created": 1735796635, "deleted": 0, "content": "有钱确实可以解决 99%的穷人烦恼～\r\n不会失业，\r\n不会中年焦虑，\r\n可以做真正喜欢的事情\r\n可以拒绝不喜欢的事情\r\n\r\n甚至身边的人都友善了起来", "content_rendered": "<p>有钱确实可以解决 99%的穷人烦恼～\n不会失业，\n不会中年焦虑，\n可以做真正喜欢的事情\n可以拒绝不喜欢的事情</p>\n<p>甚至身边的人都友善了起来</p>\n", "last_modified": 1735803498, "replies": 96, "id": 1101991}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 6905, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 1652, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 28162, "username": "dvbs2000", "url": "https://www.v2ex.com/u/dvbs2000", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/89fb/52e6/28162_mini.png?m=1733058874", "avatar_normal": "https://cdn.v2ex.com/avatar/89fb/52e6/28162_normal.png?m=1733058874", "avatar_large": "https://cdn.v2ex.com/avatar/89fb/52e6/28162_large.png?m=1733058874", "created": 1350261667, "last_modified": 1733058874}, "last_reply_by": "night98", "last_touched": 1735829945, "title": "为什么现在信息这么发达，还有房地产中介的生存空间", "url": "https://www.v2ex.com/t/1101882", "created": 1735780800, "deleted": 0, "content": "而且房地产中介不卷中介费\r\n比如降到 0.5%\r\n\r\n绿中介普遍都是 2%，甚至 2.5%\r\n\r\n按道理一个自由竞争市场，这个费用理论上会卷到 0 ，因为总有平台为了流量冲。\r\n\r\n这是为何？", "content_rendered": "<p>而且房地产中介不卷中介费\n比如降到 0.5%</p>\n<p>绿中介普遍都是 2%，甚至 2.5%</p>\n<p>按道理一个自由竞争市场，这个费用理论上会卷到 0 ，因为总有平台为了流量冲。</p>\n<p>这是为何？</p>\n", "last_modified": 1735780800, "replies": 92, "id": 1101882}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1733731195", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1733731195", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 65291, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1733731195", "stars": 9175, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 657012, "username": "drymonfidelia", "url": "https://www.v2ex.com/u/drymonfidelia", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/017bcef6e642dbf067e17838a9cd447a?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/017bcef6e642dbf067e17838a9cd447a?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/017bcef6e642dbf067e17838a9cd447a?s=73&d=retro", "created": 1698662217, "last_modified": 1732962265}, "last_reply_by": "feikaras", "last_touched": 1735829095, "title": "Flash 被放弃真的是因为安全问题吗？为什么 Adobe 不选择重写更安全的 Flash，而是直接放弃这么大的市场，很多老动画、游戏的官网都是 Flash 写的，十几年没人维护现在都打不开了。Ruffle 非常多效果都不支持模拟", "url": "https://www.v2ex.com/t/1101870", "created": 1735756489, "deleted": 0, "content": "", "content_rendered": "", "last_modified": 1735756489, "replies": 88, "id": 1101870}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 6905, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 1652, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 603081, "username": "V2April", "url": "https://www.v2ex.com/u/V2April", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/bc97bcb8d54927012550a062b5459daf?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/bc97bcb8d54927012550a062b5459daf?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/bc97bcb8d54927012550a062b5459daf?s=73&d=retro", "created": 1669173932, "last_modified": 1714275748}, "last_reply_by": "chouxw112233", "last_touched": 1735829379, "title": "2025 年了，成人验光配镜的最好方式是什么？", "url": "https://www.v2ex.com/t/1101916", "created": 1735785647, "deleted": 0, "content": "从小到大配眼镜的方式基本上都是，找一家线下的眼镜店，验光，配镜，选镜框，拿货走人。但是多年来的体验差距很大，有的配的没啥问题，有的就觉得质量很差。上次配的尤其差，戴了一年感觉度数提高了不少。之前听说有人在线下找眼镜店验光，拿到处方后给网店配镜。但感觉这样更没法信得过，并且白嫖线下店验光也有点说不过去。那么在 2025 年有什么更好的模式吗？", "content_rendered": "<p>从小到大配眼镜的方式基本上都是，找一家线下的眼镜店，验光，配镜，选镜框，拿货走人。但是多年来的体验差距很大，有的配的没啥问题，有的就觉得质量很差。上次配的尤其差，戴了一年感觉度数提高了不少。之前听说有人在线下找眼镜店验光，拿到处方后给网店配镜。但感觉这样更没法信得过，并且白嫖线下店验光也有点说不过去。那么在 2025 年有什么更好的模式吗？</p>\n", "last_modified": 1735785647, "replies": 80, "id": 1101916}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/9f61/408e/56_large.png?m=1628212285", "name": "internet", "avatar_normal": "https://cdn.v2ex.com/navatar/9f61/408e/56_normal.png?m=1628212285", "title": "互联网", "url": "https://www.v2ex.com/go/internet", "topics": 3841, "footer": "", "header": "In Internet we trust", "title_alternative": "Internet", "avatar_mini": "https://cdn.v2ex.com/navatar/9f61/408e/56_mini.png?m=1628212285", "stars": 1130, "aliases": [], "root": false, "id": 56, "parent_node_name": "computer"}, "member": {"id": 578158, "username": "Byleth", "url": "https://www.v2ex.com/u/Byleth", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/5b0b/bc41/578158_mini.png?m=1729584048", "avatar_normal": "https://cdn.v2ex.com/avatar/5b0b/bc41/578158_normal.png?m=1729584048", "avatar_large": "https://cdn.v2ex.com/avatar/5b0b/bc41/578158_large.png?m=1729584048", "avatar_xlarge": "https://cdn.v2ex.com/avatar/5b0b/bc41/578158_xlarge.png?m=1729584048", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/5b0b/bc41/578158_xlarge.png?m=1729584048", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/5b0b/bc41/578158_xlarge.png?m=1729584048", "created": 1649843151, "last_modified": 1729584048}, "last_reply_by": "Raynard", "last_touched": 1735830179, "title": "PT 站的不可替代性是什么？", "url": "https://www.v2ex.com/t/1101920", "created": 1735785977, "deleted": 0, "content": "因为各种 PT 站总是很难注册，有层神秘的面纱，对于我这种从来没玩过的人来说非常好奇里面到底有什么东西\r\n\r\n目前我对于影视的需求就是各种电影、电视剧，对于这种，感觉只是需要：\r\n\r\n1. 打开 rarbg(现在没了)，pirate bay 之类的网站\r\n2. 搜索英文片名，找个清晰度高的，复制磁力链接\r\n3. 打开 115 网盘：添加链接任务 -> 开始下载\r\n\r\n就完事了，99% 的影视资源，115 都能成功秒传到网盘，然后跑满家庭千兆带宽高速取回本地。之后刮削完打开 infuse 直接看就完事了。\r\n\r\n如果是 PT 的话，还要费劲调试种子客户端，还要记得不能忘记下载完成后再上传一段时间避免被 PT 封号，还要预留一部分 NAS 的磁盘空间去存储 PT 上热门的资源，以及各种五花八门的规矩/守则等等，感觉麻烦很多啊？\r\n\r\n难道是同一个电影，PT 站上有更高的清晰度？可我都已经从 pirate bay 下载到 4K REMUX 了，难道 PT 上有独家 8K 版本？\r\n\r\n或者是有「冷门资源」？可是什么样的冷门资源呢？难道是类似上个世纪的古早电视剧、纪录片这种？这种感觉需求量应该也不会很大呀？", "content_rendered": "<p>因为各种 PT 站总是很难注册，有层神秘的面纱，对于我这种从来没玩过的人来说非常好奇里面到底有什么东西</p>\n<p>目前我对于影视的需求就是各种电影、电视剧，对于这种，感觉只是需要：</p>\n<ol>\n<li>打开 rarbg(现在没了)，pirate bay 之类的网站</li>\n<li>搜索英文片名，找个清晰度高的，复制磁力链接</li>\n<li>打开 115 网盘：添加链接任务 -&gt; 开始下载</li>\n</ol>\n<p>就完事了，99% 的影视资源，115 都能成功秒传到网盘，然后跑满家庭千兆带宽高速取回本地。之后刮削完打开 infuse 直接看就完事了。</p>\n<p>如果是 PT 的话，还要费劲调试种子客户端，还要记得不能忘记下载完成后再上传一段时间避免被 PT 封号，还要预留一部分 NAS 的磁盘空间去存储 PT 上热门的资源，以及各种五花八门的规矩/守则等等，感觉麻烦很多啊？</p>\n<p>难道是同一个电影，PT 站上有更高的清晰度？可我都已经从 pirate bay 下载到 4K REMUX 了，难道 PT 上有独家 8K 版本？</p>\n<p>或者是有「冷门资源」？可是什么样的冷门资源呢？难道是类似上个世纪的古早电视剧、纪录片这种？这种感觉需求量应该也不会很大呀？</p>\n", "last_modified": 1735796792, "replies": 71, "id": 1101920}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1660301119", "name": "create", "avatar_normal": "https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1660301119", "title": "分享创造", "url": "https://www.v2ex.com/go/create", "topics": 26025, "footer": "", "header": "欢迎你在这里发布自己的最新作品！", "title_alternative": "Create", "avatar_mini": "https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1660301119", "stars": 5558, "aliases": [], "root": false, "id": 17, "parent_node_name": "geek"}, "member": {"id": 321412, "username": "powersee", "url": "https://www.v2ex.com/u/powersee", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/877c/cc47/321412_mini.png?m=1725498619", "avatar_normal": "https://cdn.v2ex.com/avatar/877c/cc47/321412_normal.png?m=1725498619", "avatar_large": "https://cdn.v2ex.com/avatar/877c/cc47/321412_large.png?m=1725498619", "created": 1528447553, "last_modified": 1725498619}, "last_reply_by": "zhiyu1998", "last_touched": 1735829736, "title": "采用 Java 开发的 SSH/终端工具，希望大家给点建议", "url": "https://www.v2ex.com/t/1101966", "created": 1735789813, "deleted": 0, "content": "## 为什么要做这个？\r\n\r\n目前市面上大多数客户端都是基于 Electron 或 HTML 开发，我个人不太喜欢这种“塑料的感觉”（并不是贬义，缺乏真实触感的体验）。因此，我选择使用 Java Swing 开发一个桌面端客户端。\r\n\r\n核心部分采用 Kotlin 开发，最终目标是通过 Kotlin Multiplatform 打造一款全平台的 SSH/终端 工具。\r\n\r\n## 功能特色\r\n\r\n- 支持多标签页\r\n- 数据加密存储\r\n- 通过 Gist 同步配置\r\n- 宏功能\r\n- 密钥管理\r\n- [Find Everywhere]( https://github.com/TermoraDev/termora/blob/1.0.0/docs/findeverywhere.png)\r\n- ...\r\n\r\n**目前尚不支持 SFTP/FTP 等**\r\n\r\n## XTerm 协议部分\r\n\r\n使用 Kotlin 实现了 XTerm 协议（尚未完全实现）。桌面端的渲染层基于 Java Swing ，未来计划将这一部分迁移到 KMP ，从而实现真正的跨平台支持（包括移动端）。\r\n\r\n在实现协议的过程中，参考了许多经典的客户端，例如：\r\n\r\n- [xtermjs]( https://xtermjs.org)\r\n- [jediterm]( https://github.com/JetBrains/jediterm)\r\n\r\n## 预览\r\n\r\n<img src=\"https://github.com/TermoraDev/termora/blob/1.0.0/docs/readme.png?raw=true\" width=500px />\r\n\r\n----\r\n\r\n<img src=\"https://github.com/TermoraDev/termora/blob/1.0.0/docs/findeverywhere.png?raw=true\" width=500px />\r\n\r\n## 后续发展\r\n\r\n- 命令提示（这部分我还在构思，如何准确获取用户输入的命令？）\r\n- AI 功能\r\n- 增加团队协同功能\r\n- 支持 Telnet\r\n- 支持 X-Server\r\n- 支持 VNC Viewer\r\n- SFTP/FTP\r\n- 串口\r\n- ...\r\n\r\n这是一个长期发展的项目。\r\n\r\n----\r\n\r\n希望大家给点建议 🙏\r\n\r\n项目地址：[https://github.com/TermoraDev/termora]( https://github.com/TermoraDev/termora)", "content_rendered": "<h2>为什么要做这个？</h2>\n<p>目前市面上大多数客户端都是基于 Electron 或 HTML 开发，我个人不太喜欢这种“塑料的感觉”（并不是贬义，缺乏真实触感的体验）。因此，我选择使用 Java Swing 开发一个桌面端客户端。</p>\n<p>核心部分采用 Kotlin 开发，最终目标是通过 Kotlin Multiplatform 打造一款全平台的 SSH/终端 工具。</p>\n<h2>功能特色</h2>\n<ul>\n<li>支持多标签页</li>\n<li>数据加密存储</li>\n<li>通过 Gist 同步配置</li>\n<li>宏功能</li>\n<li>密钥管理</li>\n<li><a href=\"https://github.com/TermoraDev/termora/blob/1.0.0/docs/findeverywhere.png\" rel=\"nofollow\">Find Everywhere</a></li>\n<li>...</li>\n</ul>\n<p><strong>目前尚不支持 SFTP/FTP 等</strong></p>\n<h2>XTerm 协议部分</h2>\n<p>使用 Kotlin 实现了 XTerm 协议（尚未完全实现）。桌面端的渲染层基于 Java Swing ，未来计划将这一部分迁移到 KMP ，从而实现真正的跨平台支持（包括移动端）。</p>\n<p>在实现协议的过程中，参考了许多经典的客户端，例如：</p>\n<ul>\n<li><a href=\"https://xtermjs.org\" rel=\"nofollow\">xtermjs</a></li>\n<li><a href=\"https://github.com/JetBrains/jediterm\" rel=\"nofollow\">jediterm</a></li>\n</ul>\n<h2>预览</h2>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://github.com/TermoraDev/termora/blob/1.0.0/docs/readme.png?raw=true\"/>\n<hr/>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://github.com/TermoraDev/termora/blob/1.0.0/docs/findeverywhere.png?raw=true\"/>\n<h2>后续发展</h2>\n<ul>\n<li>命令提示（这部分我还在构思，如何准确获取用户输入的命令？）</li>\n<li>AI 功能</li>\n<li>增加团队协同功能</li>\n<li>支持 Telnet</li>\n<li>支持 X-Server</li>\n<li>支持 VNC Viewer</li>\n<li>SFTP/FTP</li>\n<li>串口</li>\n<li>...</li>\n</ul>\n<p>这是一个长期发展的项目。</p>\n<hr/>\n<p>希望大家给点建议 🙏</p>\n<p>项目地址：<a href=\"https://github.com/TermoraDev/termora\" rel=\"nofollow\">https://github.com/TermoraDev/termora</a></p>\n", "last_modified": 1735789813, "replies": 65, "id": 1101966}]