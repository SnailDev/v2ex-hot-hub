[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 3089, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 813, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 352399, "username": "samohyes", "url": "https://www.v2ex.com/u/samohyes", "website": "xdshao.com", "twitter": "", "psn": "", "github": "samohyes", "btc": "", "location": "", "tagline": "Just a guy who is a hacker for fun.", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/0c3ec0910e9ae3ec6fb24d75a983d366?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/0c3ec0910e9ae3ec6fb24d75a983d366?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/0c3ec0910e9ae3ec6fb24d75a983d366?s=73&d=retro", "created": 1537970950, "last_modified": 1537970950}, "last_reply_by": "trlove", "last_touched": 1650792656, "title": "女生这种情况下究竟是想些啥。。。", "url": "https://www.v2ex.com/t/848863", "created": 1650761995, "deleted": 0, "content": "有个老同学妹纸，我一直不知道她脑子里想什么。。。\r\n\r\n初高中的时候会和我写写信，后来工作了恢复联系会主动约我吃饭还叫我和她一起去旅游，我当时以为她对我有意思，后来她说只是把我当朋友，不能害我云云，然后说她是颜狗于是和一个帅哥在一起了。。\r\n\r\n过了一年又来约我，说什么在相亲，没遇到合适的。请我吃饭，送我巧克力。问她和那个帅哥咋样了也闭口不谈。我不知道她想啥回家后就没联系她。这几天过了两三个月她又来联系我，说我后来是不是很忙，感觉抱怨不联系她。。。当然也可能是话术。 所以她这是脑子里想啥，养鱼吗。。。", "content_rendered": "<p>有个老同学妹纸，我一直不知道她脑子里想什么。。。</p>\n<p>初高中的时候会和我写写信，后来工作了恢复联系会主动约我吃饭还叫我和她一起去旅游，我当时以为她对我有意思，后来她说只是把我当朋友，不能害我云云，然后说她是颜狗于是和一个帅哥在一起了。。</p>\n<p>过了一年又来约我，说什么在相亲，没遇到合适的。请我吃饭，送我巧克力。问她和那个帅哥咋样了也闭口不谈。我不知道她想啥回家后就没联系她。这几天过了两三个月她又来联系我，说我后来是不是很忙，感觉抱怨不联系她。。。当然也可能是话术。 所以她这是脑子里想啥，养鱼吗。。。</p>\n", "last_modified": 1650761995, "replies": 123, "id": 848863}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 3089, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 813, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 494209, "username": "CNN", "url": "https://www.v2ex.com/u/CNN", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/49a1/e4d7/494209_mini.png?m=1648952853", "avatar_normal": "https://cdn.v2ex.com/avatar/49a1/e4d7/494209_normal.png?m=1648952853", "avatar_large": "https://cdn.v2ex.com/avatar/49a1/e4d7/494209_large.png?m=1648952853", "created": 1591791985, "last_modified": 1648952853}, "last_reply_by": "ikaros", "last_touched": 1650794344, "title": "戴眼镜的诸位，你们如何清洁镜片？", "url": "https://www.v2ex.com/t/848909", "created": 1650771446, "deleted": 0, "content": "近视眼好麻烦，每次出去浮潜，戴隐形眼镜都要 30 分钟左右（我很少戴，也不会搞），哎~\r\n\r\n\r\n生活在江苏，镜片太容易脏了，眼镜布每次洗干净也就用个一两天，再用就擦不干净\r\n\r\n超声波清洗器，刚买来的时候用，后来觉得麻烦耗时，现在吃灰中\r\n\r\n现在用的最多的反倒是抽纸，比眼镜布擦的干净，就是会把镜片搞出拉丝 🐶", "content_rendered": "近视眼好麻烦，每次出去浮潜，戴隐形眼镜都要 30 分钟左右（我很少戴，也不会搞），哎~<br /><br /><br />生活在江苏，镜片太容易脏了，眼镜布每次洗干净也就用个一两天，再用就擦不干净<br /><br />超声波清洗器，刚买来的时候用，后来觉得麻烦耗时，现在吃灰中<br /><br />现在用的最多的反倒是抽纸，比眼镜布擦的干净，就是会把镜片搞出拉丝 🐶", "last_modified": 1650779493, "replies": 100, "id": 848909}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1650127257", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1650127257", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 48452, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1650127257", "stars": 7792, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 220603, "username": "liuidetmks", "url": "https://www.v2ex.com/u/liuidetmks", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/e540/71e7/220603_mini.png?m=1649733132", "avatar_normal": "https://cdn.v2ex.com/avatar/e540/71e7/220603_normal.png?m=1649733132", "avatar_large": "https://cdn.v2ex.com/avatar/e540/71e7/220603_large.png?m=1649733132", "avatar_xlarge": "https://cdn.v2ex.com/avatar/e540/71e7/220603_xlarge.png?m=1649733132", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/e540/71e7/220603_xlarge.png?m=1649733132", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/e540/71e7/220603_xlarge.png?m=1649733132", "created": 1489372952, "last_modified": 1649733132}, "last_reply_by": "KoMAsS121", "last_touched": 1650794531, "title": "为什么国内前端都只写 chrome only 的 网站?", "url": "https://www.v2ex.com/t/848878", "created": 1650764709, "deleted": 0, "content": "火狐都提示不兼容\r\n火狐明明用着没问题,网页常驻一个下载最新 Chrome 的广告\r\n\r\n实际上功能用着没问题。", "content_rendered": "火狐都提示不兼容<br />火狐明明用着没问题,网页常驻一个下载最新 Chrome 的广告<br /><br />实际上功能用着没问题。", "last_modified": 1650764709, "replies": 95, "id": 848878}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4e73/2ced/26_large.png?m=1584288945", "name": "hangzhou", "avatar_normal": "https://cdn.v2ex.com/navatar/4e73/2ced/26_normal.png?m=1584288945", "title": "杭州", "url": "https://www.v2ex.com/go/hangzhou", "topics": 1729, "footer": "", "header": "", "title_alternative": "Hangzhou", "avatar_mini": "https://cdn.v2ex.com/navatar/4e73/2ced/26_mini.png?m=1584288945", "stars": 1458, "aliases": [], "root": false, "id": 26, "parent_node_name": "cn"}, "member": {"id": 550541, "username": "Turkestan", "url": "https://www.v2ex.com/u/Turkestan", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/a6da/35dc/550541_mini.png?m=1642924447", "avatar_normal": "https://cdn.v2ex.com/avatar/a6da/35dc/550541_normal.png?m=1642924447", "avatar_large": "https://cdn.v2ex.com/avatar/a6da/35dc/550541_large.png?m=1642924447", "created": 1625892398, "last_modified": 1642924447}, "last_reply_by": "isRealLeven", "last_touched": 1650792532, "title": "想找个女朋友，不知道怎么开始", "url": "https://www.v2ex.com/t/848795", "created": 1650712051, "deleted": 0, "content": "25 了，只谈过一段恋爱，还是大学时候，两个月的异地恋\r\n\r\n条件比较差，不知道怎么开口，怕听到什么难听的话\r\n\r\n月入才 1w 出头，和 v 友们比不了\r\n\r\n但有时候就特别孤独\r\n\r\n不知道自己配不配", "content_rendered": "<p>25 了，只谈过一段恋爱，还是大学时候，两个月的异地恋</p>\n<p>条件比较差，不知道怎么开口，怕听到什么难听的话</p>\n<p>月入才 1w 出头，和 v 友们比不了</p>\n<p>但有时候就特别孤独</p>\n<p>不知道自己配不配</p>\n", "last_modified": 1650712051, "replies": 91, "id": 848795}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913", "name": "apple", "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913", "title": "Apple", "url": "https://www.v2ex.com/go/apple", "topics": 18191, "footer": "", "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。", "title_alternative": "Apple", "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913", "stars": 2135, "aliases": [], "root": false, "id": 184, "parent_node_name": "hardware"}, "member": {"id": 340304, "username": "v2Cj", "url": "https://www.v2ex.com/u/v2Cj", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/e077ab1090564e6714fc0dc395d40985?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/e077ab1090564e6714fc0dc395d40985?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/e077ab1090564e6714fc0dc395d40985?s=73&d=retro", "created": 1533946843, "last_modified": 1650428192}, "last_reply_by": "dog82", "last_touched": 1650792493, "title": "纠结退不退 m1 Ultra，等不等 m2", "url": "https://www.v2ex.com/t/848806", "created": 1650716928, "deleted": 0, "content": "手持 m1 MacBook Pro ，苦于只能连一个屏幕，需要更新设备。\r\n尴尬的是 m1 Ultra 预计 6 月 02-6 月 11 才能送到，比较了一下 m1 max 送达时间也要 6 月以后。\r\n\r\n目前疑问是 m2 到底会不会在 wwdc 上发布，春季发布会说 mac 产品线还有 mac pro 没发，mac pro 会用上 m2 吗？\r\n暂时计划 mac studio 订单不取消，等 wwdc 后再做比较，可是又怕生产线恢复后 mac studio 提前送达，所以目前在纠结中。\r\n\r\n\r\n了解到 m1 系列芯片是有设计上的问题导致 64 核 Gpu 没法跑满的，本人日常使用 6k+5k 屏幕，有魔兽世界跑满画质的需求，也没看到 m1 Ultra 对这个的测评，不太知道能否满足。又害怕万一 mac pro 还是用 m1 系列芯片，那 m2 就不知道得等到说明时候了。。\r\n（补充说一下，windows 主机是 gtx1080 显卡，也无法做到跑满魔兽画质，而且发热严重，最主要的是显卡市场尚不明朗，有用 macos 主机代替 windows 主机的打算，暂不考虑更新 pc 显卡了）\r\n\r\n\r\n毕竟 m1 也是两年前的东西了，如果 m2 在今年推出的话还是会优先考虑 m2 的，但理性上分析又觉得苹果不会这么蠢，几个月后就背刺 mac studio 用户，就算 m2 推出了也是基础机型优先。假如需要再等一年的话又觉得太久了，不禁陷入了沉思。\r\n\r\n有同样在纠结 mac studio 的朋友吗，希望交流下，也欢迎内部知情人士透露下 m2 系列消息帮助小弟我作出选择~", "content_rendered": "<p>手持 m1 MacBook Pro ，苦于只能连一个屏幕，需要更新设备。\n尴尬的是 m1 Ultra 预计 6 月 02-6 月 11 才能送到，比较了一下 m1 max 送达时间也要 6 月以后。</p>\n<p>目前疑问是 m2 到底会不会在 wwdc 上发布，春季发布会说 mac 产品线还有 mac pro 没发，mac pro 会用上 m2 吗？\n暂时计划 mac studio 订单不取消，等 wwdc 后再做比较，可是又怕生产线恢复后 mac studio 提前送达，所以目前在纠结中。</p>\n<p>了解到 m1 系列芯片是有设计上的问题导致 64 核 Gpu 没法跑满的，本人日常使用 6k+5k 屏幕，有魔兽世界跑满画质的需求，也没看到 m1 Ultra 对这个的测评，不太知道能否满足。又害怕万一 mac pro 还是用 m1 系列芯片，那 m2 就不知道得等到说明时候了。。\n（补充说一下，windows 主机是 gtx1080 显卡，也无法做到跑满魔兽画质，而且发热严重，最主要的是显卡市场尚不明朗，有用 macos 主机代替 windows 主机的打算，暂不考虑更新 pc 显卡了）</p>\n<p>毕竟 m1 也是两年前的东西了，如果 m2 在今年推出的话还是会优先考虑 m2 的，但理性上分析又觉得苹果不会这么蠢，几个月后就背刺 mac studio 用户，就算 m2 推出了也是基础机型优先。假如需要再等一年的话又觉得太久了，不禁陷入了沉思。</p>\n<p>有同样在纠结 mac studio 的朋友吗，希望交流下，也欢迎内部知情人士透露下 m2 系列消息帮助小弟我作出选择~</p>\n", "last_modified": 1650716928, "replies": 83, "id": 848806}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1650127257", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1650127257", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 48452, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1650127257", "stars": 7792, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 457168, "username": "VincentYoung", "url": "https://www.v2ex.com/u/VincentYoung", "website": "https://vincent.moe", "twitter": "", "psn": "", "github": "", "btc": "", "location": "Shanghai", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/e0ad/8309/457168_mini.png?m=1639984007", "avatar_normal": "https://cdn.v2ex.com/avatar/e0ad/8309/457168_normal.png?m=1639984007", "avatar_large": "https://cdn.v2ex.com/avatar/e0ad/8309/457168_large.png?m=1639984007", "created": 1575370066, "last_modified": 1639984007}, "last_reply_by": "yvkino", "last_touched": 1650792237, "title": "10 美元永久保留 GV", "url": "https://www.v2ex.com/t/848817", "created": 1650719942, "deleted": 0, "content": "疑似新旧系统之间的 Bug 。或是谷歌改了政策。感兴趣的朋友可以试试。\n\n具体操作方法：\nhttps://missuo.me/post/makes-google-voice-permanent/", "content_rendered": "疑似新旧系统之间的 Bug 。或是谷歌改了政策。感兴趣的朋友可以试试。<br /><br />具体操作方法：<br /><a target=\"_blank\" href=\"https://missuo.me/post/makes-google-voice-permanent/\" rel=\"nofollow noopener\">https://missuo.me/post/makes-google-voice-permanent/</a>", "last_modified": 1650719942, "replies": 66, "id": 848817}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/3417/3cb3/30_large.png?m=1598508698", "name": "chengdu", "avatar_normal": "https://cdn.v2ex.com/navatar/3417/3cb3/30_normal.png?m=1598508698", "title": "成都", "url": "https://www.v2ex.com/go/chengdu", "topics": 1220, "footer": "", "header": "", "title_alternative": "Chengdu", "avatar_mini": "https://cdn.v2ex.com/navatar/3417/3cb3/30_mini.png?m=1598508698", "stars": 1003, "aliases": [], "root": false, "id": 30, "parent_node_name": "cn"}, "member": {"id": 326227, "username": "aLazarus", "url": "https://www.v2ex.com/u/aLazarus", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "FML", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/105bd352188b1b28c59f0e3438098d3f?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/105bd352188b1b28c59f0e3438098d3f?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/105bd352188b1b28c59f0e3438098d3f?s=73&d=retro", "created": 1530512021, "last_modified": 1646188241}, "last_reply_by": "Cloutain", "last_touched": 1650736957, "title": "逃 离 成 都", "url": "https://www.v2ex.com/t/848881", "created": 1650765817, "deleted": 0, "content": "17 年来成都，然后光速落户买房定居。\r\n\r\n工资低，工作卷，工时长。\r\n\r\n同样是 996 ，为什么要在成都拿着一万出头的外包工资呢，为什么要住在没有烟火气的高新区呢。\r\n\r\n唉，无数次想逃离成都。", "content_rendered": "<p>17 年来成都，然后光速落户买房定居。</p>\n<p>工资低，工作卷，工时长。</p>\n<p>同样是 996 ，为什么要在成都拿着一万出头的外包工资呢，为什么要住在没有烟火气的高新区呢。</p>\n<p>唉，无数次想逃离成都。</p>\n", "last_modified": 1650765817, "replies": 54, "id": 848881}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913", "name": "apple", "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913", "title": "Apple", "url": "https://www.v2ex.com/go/apple", "topics": 18191, "footer": "", "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。", "title_alternative": "Apple", "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913", "stars": 2135, "aliases": [], "root": false, "id": 184, "parent_node_name": "hardware"}, "member": {"id": 158620, "username": "ZE3kr", "url": "https://www.v2ex.com/u/ZE3kr", "website": "https://guozeyu.com/", "twitter": "ZE3kr", "psn": "", "github": "ZE3kr", "btc": "", "location": "北京", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/1c75/8bf5/158620_mini.png?m=1649441357", "avatar_normal": "https://cdn.v2ex.com/avatar/1c75/8bf5/158620_normal.png?m=1649441357", "avatar_large": "https://cdn.v2ex.com/avatar/1c75/8bf5/158620_large.png?m=1649441357", "created": 1455287252, "last_modified": 1649441357}, "last_reply_by": "wonderwall2237", "last_touched": 1650789762, "title": "关于 Apple Care 的一些想法", "url": "https://www.v2ex.com/t/848831", "created": 1650726221, "deleted": 0, "content": "我个人从来没买过 Apple Care ，也不打算买，理由如下：\r\n\r\n+ Apple 是一家商业公司，推出 Apple Care 是为了盈利\r\n+ 所以买 Apple Care 就和买商业保险一样，从概率论上来说，总体的收益期望值是负的\r\n+ 个人从来没有找到苹果付费维修过，所有的损坏都被保修，包括两个 MacBook Pro 的键盘问题（都是免费更换了键盘和其周围配件）、AirPods Pro 降噪问题（免费更换了两个新 Pods ），也从来没有一个设备两年内电池健康到 80 以下过\r\n+ 最后一次摔碎苹果手机是十年前的 iPhone 4 背玻璃面板，之后一直用 iPhone ，一直没摔过 iPhone\r\n+ MacBook Pro 摔变形了 A 面，影响大概是卖二手损失 1000-2000 元，感觉也并没有比 Apple Care 贵\r\n+ 个人有足够的存款，若设备意外损坏，交全额维修费是完全不影响的日常生活的。而且正如前文所说，这部分的花费期望理论上是小于 Care 的\r\n\r\n当然肯定有人会反驳，但我想补充：\r\n\r\n+ Care 到期前操作一波换电池 /免费维修？或许可以想想，如果没有 Care ，是不是就根本不去换了？不去换会损失很大的体验吗？（保修期内低于 80%本来就是免费换，高于 80%换电池通常不会带来性能提升，只是续航提升）\r\n\r\n只是个人想法，欢迎讨论。想到的 Care 还有一个优势就是买了后用设备会更加随意，会大胆裸奔，更不怕被摔（因为一旦买了 Care ，那部分钱就是沉没 /固定成本了，再摔设备的边际成本相比没买 Care 就很低）。此外，Care 对于少部分人（摔手机概率远超平均值的人，比如我妈妈的手机就一年一摔）还是很划算的", "content_rendered": "<p>我个人从来没买过 Apple Care ，也不打算买，理由如下：</p>\n<ul>\n<li>Apple 是一家商业公司，推出 Apple Care 是为了盈利</li>\n<li>所以买 Apple Care 就和买商业保险一样，从概率论上来说，总体的收益期望值是负的</li>\n<li>个人从来没有找到苹果付费维修过，所有的损坏都被保修，包括两个 MacBook Pro 的键盘问题（都是免费更换了键盘和其周围配件）、AirPods Pro 降噪问题（免费更换了两个新 Pods ），也从来没有一个设备两年内电池健康到 80 以下过</li>\n<li>最后一次摔碎苹果手机是十年前的 iPhone 4 背玻璃面板，之后一直用 iPhone ，一直没摔过 iPhone</li>\n<li>MacBook Pro 摔变形了 A 面，影响大概是卖二手损失 1000-2000 元，感觉也并没有比 Apple Care 贵</li>\n<li>个人有足够的存款，若设备意外损坏，交全额维修费是完全不影响的日常生活的。而且正如前文所说，这部分的花费期望理论上是小于 Care 的</li>\n</ul>\n<p>当然肯定有人会反驳，但我想补充：</p>\n<ul>\n<li>Care 到期前操作一波换电池 /免费维修？或许可以想想，如果没有 Care ，是不是就根本不去换了？不去换会损失很大的体验吗？（保修期内低于 80%本来就是免费换，高于 80%换电池通常不会带来性能提升，只是续航提升）</li>\n</ul>\n<p>只是个人想法，欢迎讨论。想到的 Care 还有一个优势就是买了后用设备会更加随意，会大胆裸奔，更不怕被摔（因为一旦买了 Care ，那部分钱就是沉没 /固定成本了，再摔设备的边际成本相比没买 Care 就很低）。此外，Care 对于少部分人（摔手机概率远超平均值的人，比如我妈妈的手机就一年一摔）还是很划算的</p>\n", "last_modified": 1650726221, "replies": 46, "id": 848831}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6c34/0f25/1063_large.png?m=1645243654", "name": "cpp", "avatar_normal": "https://cdn.v2ex.com/navatar/6c34/0f25/1063_normal.png?m=1645243654", "title": "C++", "url": "https://www.v2ex.com/go/cpp", "topics": 337, "footer": "", "header": "关于编程语言 C++ 的使用讨论", "title_alternative": "C++", "avatar_mini": "https://cdn.v2ex.com/navatar/6c34/0f25/1063_mini.png?m=1645243654", "stars": 476, "aliases": [], "root": false, "id": 1063, "parent_node_name": "programming"}, "member": {"id": 152647, "username": "fawdlstty", "url": "https://www.v2ex.com/u/fawdlstty", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/7e9d/f035/152647_mini.png?m=1650718717", "avatar_normal": "https://cdn.v2ex.com/avatar/7e9d/f035/152647_normal.png?m=1650718717", "avatar_large": "https://cdn.v2ex.com/avatar/7e9d/f035/152647_large.png?m=1650718717", "avatar_xlarge": "https://cdn.v2ex.com/avatar/7e9d/f035/152647_xlarge.png?m=1650718717", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/7e9d/f035/152647_xlarge.png?m=1650718717", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/7e9d/f035/152647_xlarge.png?m=1650718717", "created": 1450854544, "last_modified": 1650718717}, "last_reply_by": "fawdlstty", "last_touched": 1650776984, "title": "libfv：基于 C++20 的异步 HTTP 库", "url": "https://www.v2ex.com/t/848811", "created": 1650718366, "deleted": 0, "content": "仓库地址：<https://github.com/fawdlstty/libfv>\r\n\r\n介绍一款船新 HTTP 库。C++的 HTTP 库很多，但基于 C++20 的异步网络 HTTP 库几乎没有。我没找到好用的，因此写了一个。在讲解这个库之前，我先说说为什么我们需要这样的库。\r\n\r\nC++ HTTP 库有两种主要的实现方式，第一种是同步 HTTP 网络访问，比如这样的代码：\r\n\r\n```cpp\r\n// 伪代码\r\nResponse _r = HttpGet (\"https://t.cn\");\r\nstd::cout << _t.text;\r\n```\r\n\r\n这样的代码写起来很简单，但它存在一个问题：HTTP 网络访问比较耗时，可能需要几百毫秒，这么长时间，这个线程将阻塞在这里，比较消耗线程资源。假如遇到需要同时发起几十、几百个请求，将较大消耗系统资源。很显然，它不是一个较好的设计。\r\n\r\n第二种是回调通知，比如这样的代码：\r\n\r\n```cpp\r\n// 伪代码\r\nHttpGet (\"https://t.cn\", [] (Response _r) {\r\n\tstd::cout << _t.text;\r\n});\r\n```\r\n\r\n这种方式解决了线程问题，也就是，几十、几百个请求可以同时发起，只需要极少量或者一个线程就行，HTTP 库内部实现了请求的内部管理，在收到请求的回复后，调用回调函数，从而实现请求的高效处理。但这种方式有个问题，假如我们需要根据请求结果内容转给下一个请求，这会带来一个回调地狱问题，比如这样的代码：\r\n\r\n```cpp\r\n// 伪代码\r\nHttpGet (\"https://t.cn\", [] (Response _r) {\r\n    HttpGet (_t.text, [] (Response _r) {\r\n        HttpGet (_t.text, [] (Response _r) {\r\n            HttpGet (_t.text, [] (Response _r) {\r\n                HttpGet (_t.text, [] (Response _r) {\r\n                    std::cout << _t.text;\r\n                });\r\n            });\r\n        });\r\n    });\r\n});\r\n```\r\n\r\n那么，有没更好的处理方式呢？有，通过 C++20 的 co_await 实现异步等待。下面给出 libfv 的发起请求的代码：\r\n\r\n```cpp\r\nfv::Response _r = co_await fv::Get (\"https://t.cn\");\r\n```\r\n\r\n一方面它能获得回调方式的好处，也就是少量线程支撑同时大量的请求任务，同时它不会带来回调地狱问题。上面的代码通过 libfv 实现，代码可以这样写：\r\n\r\n```cpp\r\nfv::Response _r = co_await fv::Get (\"https://t.cn\");\r\n_r = co_await fv::Get (_r.text);\r\n_r = co_await fv::Get (_r.text);\r\n_r = co_await fv::Get (_r.text);\r\n_r = co_await fv::Get (_r.text);\r\nstd::cout << _t.text;\r\n```\r\n\r\n这儿特别说明一下。单 CPU 处理效率来说，C++20 的异步性能比回调要低，大概 10%左右，也就是假设理论上跑满网络 IO 带宽情况，回调需要 10%的 CPU ，那么使用 C++20 的异步需要 11%，这是 stackless 需要付出的代价。当然，在我看来这个特性完全可以忽略，毕竟 IO 密集型应用首先需要考虑的是跑满网络带宽，一般不太需要关注 CPU 使用率。\r\n\r\nlibfv 使用方法见仓库：<https://github.com/fawdlstty/libfv>", "content_rendered": "<p>仓库地址：<a href=\"https://github.com/fawdlstty/libfv\" rel=\"nofollow\">https://github.com/fawdlstty/libfv</a></p>\n<p>介绍一款船新 HTTP 库。C++的 HTTP 库很多，但基于 C++20 的异步网络 HTTP 库几乎没有。我没找到好用的，因此写了一个。在讲解这个库之前，我先说说为什么我们需要这样的库。</p>\n<p>C++ HTTP 库有两种主要的实现方式，第一种是同步 HTTP 网络访问，比如这样的代码：</p>\n<pre><code class=\"language-cpp\">// 伪代码\nResponse _r = HttpGet (\"https://t.cn\");\nstd::cout &lt;&lt; _t.text;\n</code></pre>\n<p>这样的代码写起来很简单，但它存在一个问题：HTTP 网络访问比较耗时，可能需要几百毫秒，这么长时间，这个线程将阻塞在这里，比较消耗线程资源。假如遇到需要同时发起几十、几百个请求，将较大消耗系统资源。很显然，它不是一个较好的设计。</p>\n<p>第二种是回调通知，比如这样的代码：</p>\n<pre><code class=\"language-cpp\">// 伪代码\nHttpGet (\"https://t.cn\", [] (Response _r) {\n\tstd::cout &lt;&lt; _t.text;\n});\n</code></pre>\n<p>这种方式解决了线程问题，也就是，几十、几百个请求可以同时发起，只需要极少量或者一个线程就行，HTTP 库内部实现了请求的内部管理，在收到请求的回复后，调用回调函数，从而实现请求的高效处理。但这种方式有个问题，假如我们需要根据请求结果内容转给下一个请求，这会带来一个回调地狱问题，比如这样的代码：</p>\n<pre><code class=\"language-cpp\">// 伪代码\nHttpGet (\"https://t.cn\", [] (Response _r) {\n    HttpGet (_t.text, [] (Response _r) {\n        HttpGet (_t.text, [] (Response _r) {\n            HttpGet (_t.text, [] (Response _r) {\n                HttpGet (_t.text, [] (Response _r) {\n                    std::cout &lt;&lt; _t.text;\n                });\n            });\n        });\n    });\n});\n</code></pre>\n<p>那么，有没更好的处理方式呢？有，通过 C++20 的 co_await 实现异步等待。下面给出 libfv 的发起请求的代码：</p>\n<pre><code class=\"language-cpp\">fv::Response _r = co_await fv::Get (\"https://t.cn\");\n</code></pre>\n<p>一方面它能获得回调方式的好处，也就是少量线程支撑同时大量的请求任务，同时它不会带来回调地狱问题。上面的代码通过 libfv 实现，代码可以这样写：</p>\n<pre><code class=\"language-cpp\">fv::Response _r = co_await fv::Get (\"https://t.cn\");\n_r = co_await fv::Get (_r.text);\n_r = co_await fv::Get (_r.text);\n_r = co_await fv::Get (_r.text);\n_r = co_await fv::Get (_r.text);\nstd::cout &lt;&lt; _t.text;\n</code></pre>\n<p>这儿特别说明一下。单 CPU 处理效率来说，C++20 的异步性能比回调要低，大概 10%左右，也就是假设理论上跑满网络 IO 带宽情况，回调需要 10%的 CPU ，那么使用 C++20 的异步需要 11%，这是 stackless 需要付出的代价。当然，在我看来这个特性完全可以忽略，毕竟 IO 密集型应用首先需要考虑的是跑满网络带宽，一般不太需要关注 CPU 使用率。</p>\n<p>libfv 使用方法见仓库：<a href=\"https://github.com/fawdlstty/libfv\" rel=\"nofollow\">https://github.com/fawdlstty/libfv</a></p>\n", "last_modified": 1650718366, "replies": 44, "id": 848811}]