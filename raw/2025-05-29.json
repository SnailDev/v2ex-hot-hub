[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/38af/8613/176_large.png?m=1644885960", "name": "car", "avatar_normal": "https://cdn.v2ex.com/navatar/38af/8613/176_normal.png?m=1644885960", "title": "汽车", "url": "https://www.v2ex.com/go/car", "topics": 2774, "footer": "", "header": "关于买车、开车及汽车文化的技术讨论", "title_alternative": "Car", "avatar_mini": "https://cdn.v2ex.com/navatar/38af/8613/176_mini.png?m=1644885960", "stars": 2126, "aliases": [], "root": false, "id": 176, "parent_node_name": "life"}, "member": {"id": 494342, "username": "DEVINLGZ", "url": "https://www.v2ex.com/u/DEVINLGZ", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/e0c0f71ab73bc89d8a1f325b376440c1?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/e0c0f71ab73bc89d8a1f325b376440c1?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/e0c0f71ab73bc89d8a1f325b376440c1?s=73&d=retro", "created": 1591869106, "last_modified": 1710136685}, "last_reply_by": "lostberryzz", "last_touched": 1748462813, "title": "新手司机，希望省心，耐用，预算 不超过 20W，主要给老婆开", "url": "https://www.v2ex.com/t/1134806", "created": 1748399024, "deleted": 0, "content": "预算 不超过 20W ，坐标深圳\r\n非油车（没有蓝牌）\r\n主要给老婆开，中山上班，大概单程 90km,预计周末往返，\r\n对车，品牌，配置没什么感觉，纯工具，纯代步，家用性质\r\n新手司机，希望省心，耐用，有智驾更好，目前试驾过秦宋 L,小鹏 m3\r\n有什么推荐的么？", "content_rendered": "<p>预算 不超过 20W ，坐标深圳\n非油车（没有蓝牌）\n主要给老婆开，中山上班，大概单程 90km,预计周末往返，\n对车，品牌，配置没什么感觉，纯工具，纯代步，家用性质\n新手司机，希望省心，耐用，有智驾更好，目前试驾过秦宋 L,小鹏 m3\n有什么推荐的么？</p>\n", "last_modified": 1748399024, "replies": 120, "id": 1134806}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1739135407", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1739135407", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 230456, "footer": "", "header": "<!--\r\n一个更好的世界需要你持续地提出好问题。\r\n-->", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1739135407", "stars": 4348, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 249886, "username": "lucienlin18", "url": "https://www.v2ex.com/u/lucienlin18", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "一条不会游泳的鱼", "avatar_mini": "https://cdn.v2ex.com/gravatar/6c8cb1d31b8fbe59ef41d25d6f8fd1bb?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/6c8cb1d31b8fbe59ef41d25d6f8fd1bb?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/6c8cb1d31b8fbe59ef41d25d6f8fd1bb?s=73&d=retro", "created": 1503287431, "last_modified": 1746849041}, "last_reply_by": "iv8d", "last_touched": 1748446850, "title": "夏天开始脚上有很多死皮，有什么好的药可以治疗？", "url": "https://www.v2ex.com/t/1134780", "created": 1748395913, "deleted": 0, "content": "是脚气还是死皮？不痒", "content_rendered": "<p>是脚气还是死皮？不痒</p>\n", "last_modified": 1748395913, "replies": 83, "id": 1134780}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1747623425", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1747623425", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 8024, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1747623425", "stars": 1847, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 231649, "username": "qiangmin", "url": "https://www.v2ex.com/u/qiangmin", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "穷Free生活践行者", "avatar_mini": "https://cdn.v2ex.com/avatar/e583/dc0d/231649_mini.png?m=1569249757", "avatar_normal": "https://cdn.v2ex.com/avatar/e583/dc0d/231649_normal.png?m=1569249757", "avatar_large": "https://cdn.v2ex.com/avatar/e583/dc0d/231649_large.png?m=1569249757", "created": 1495327464, "last_modified": 1569249757}, "last_reply_by": "caleb", "last_touched": 1748451666, "title": "我这种亲情观点是否自私？", "url": "https://www.v2ex.com/t/1134811", "created": 1748400043, "deleted": 0, "content": "旅居中遇到很多躺友，有很多都和父母因为婚姻和传宗接代问题，闹的过年都不想回家。所以想说一下自己的看法，但是不知道我的观点是否自私？\r\n\r\n父母对子女：生是权，养是责，托举是恩\r\n子女对父母：婚/生是权，养是责，恩？（重病看病应该属于恩吧）\r\n\r\n细讲的话，父母对于子女来说，生子女是父母的权利，子女完全没有选择的权利；管吃穿住，供读书，引导成人，是父母的责任；提供车房首付，彩礼嫁妆，照看孙子辈，这是父母对子女的恩情。\r\n\r\n子女对于父母来说，结不结婚生不生孩子，这是子女的权利；赡养父母，这是子女责任；父母重病，掏空存款看病，这也算是恩情。\r\n\r\n其中，我觉得父母对于子女的托举，很大程度上决定了子女会结婚/生育。如果没有提供足够的托举，大概率子女会不结婚/不生育。（因为我的父母对我没有任何托举，我自己也自卑无能，我无力给自己孩子提供什么，我就知道自己不应该结婚。）\r\n\r\n那么，如果父母独断专行，蛮不讲理，闹到无法交谈。子女确实可以独立出来，但是应该做到的责任还是要做的。", "content_rendered": "<p>旅居中遇到很多躺友，有很多都和父母因为婚姻和传宗接代问题，闹的过年都不想回家。所以想说一下自己的看法，但是不知道我的观点是否自私？</p>\n<p>父母对子女：生是权，养是责，托举是恩\n子女对父母：婚/生是权，养是责，恩？（重病看病应该属于恩吧）</p>\n<p>细讲的话，父母对于子女来说，生子女是父母的权利，子女完全没有选择的权利；管吃穿住，供读书，引导成人，是父母的责任；提供车房首付，彩礼嫁妆，照看孙子辈，这是父母对子女的恩情。</p>\n<p>子女对于父母来说，结不结婚生不生孩子，这是子女的权利；赡养父母，这是子女责任；父母重病，掏空存款看病，这也算是恩情。</p>\n<p>其中，我觉得父母对于子女的托举，很大程度上决定了子女会结婚/生育。如果没有提供足够的托举，大概率子女会不结婚/不生育。（因为我的父母对我没有任何托举，我自己也自卑无能，我无力给自己孩子提供什么，我就知道自己不应该结婚。）</p>\n<p>那么，如果父母独断专行，蛮不讲理，闹到无法交谈。子女确实可以独立出来，但是应该做到的责任还是要做的。</p>\n", "last_modified": 1748473236, "replies": 61, "id": 1134811}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/f61d/6947/375_large.png?m=1658910399", "name": "go", "avatar_normal": "https://cdn.v2ex.com/navatar/f61d/6947/375_normal.png?m=1658910399", "title": "Go 编程语言", "url": "https://www.v2ex.com/go/go", "topics": 3214, "footer": "", "header": "Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。", "title_alternative": "The Go Programming Language", "avatar_mini": "https://cdn.v2ex.com/navatar/f61d/6947/375_mini.png?m=1658910399", "stars": 4076, "aliases": [], "root": false, "id": 375, "parent_node_name": "programming"}, "member": {"id": 671232, "username": "shannn", "url": "https://www.v2ex.com/u/shannn", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/e8c5447c7e91cb27cca25dcdb6bf1e61?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/e8c5447c7e91cb27cca25dcdb6bf1e61?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/e8c5447c7e91cb27cca25dcdb6bf1e61?s=73&d=retro", "created": 1705056691, "last_modified": 1748395503}, "last_reply_by": "hymzhek", "last_touched": 1748447018, "title": "[求助] Go 项目中大量第三方 SDK 需要访问外部域名，但甲方要求全部走内网代理，有哪些优雅处理方式？", "url": "https://www.v2ex.com/t/1134781", "created": 1748395925, "deleted": 0, "content": "各位大佬，\r\n\r\n我们在给甲方部署一个 Go 项目 时，遇到一个关于外部网络访问受限的问题，想请教有没有通用、优雅的解决方案。\r\n\r\n\r\n✅ 背景信息：\r\n\r\n\t1. 项目使用 Go 编写，集成了多个第三方 SDK ，比如：\r\n\t\t•\t阿里云 SDK （ Aliyun ）\r\n\t\t•\tAWS SDK\r\n\t\t•\tLet’s Encrypt （自动申请证书）\r\n\t\t•\t其他 RESTful API 客户端\r\n\t2. 这些 SDK 会直接访问公网域名，比如：\r\n\t\t•\thttps://alidns.aliyuncs.com\r\n\t\t•\thttps://acme-v02.api.letsencrypt.org\r\n\t\t•\thttps://sts.amazonaws.com\r\n\r\n\r\n🚧 甲方网络要求：\r\n\r\n\t1.\t甲方有严格的出口策略，服务器不能直接访问公网。\r\n\t2.\t所有流量必须经过其提供的 内网网关，并统一审计。\r\n\t3.\t我们需要先提交所需的“外部域名列表”，然后他们会提供 一一对应的代理地址，比如：\r\n\t\t•\thttps://alidns.aliyuncs.com → http://alidns.my.local\r\n\t\t•\thttps://acme-v02.api.letsencrypt.org → http://acme.my.local\r\n\t4.\t服务实际运行时，必须通过这些映射地址访问外部服务。\r\n\r\n\r\n⛰️我们面临的核心挑战是：\r\n\r\n\t1.\tGo 项目中大量使用第三方 SDK ，这些 SDK 会直接访问外部域名。\r\n\t2.\t我们不想直接修改 SDK 的代码，不想维护一堆 fork 。\r\n\t3.\t域名数量多、来源复杂，难以完全靠手工收集和配置。\r\n\r\n\r\n🤔 当前尝试：\r\n\r\n\t1.\t部分 SDK （如 AWS ）提供了自定义 Endpoint 的设置方式，我们可以通过代码配置替换了对应的 URL 。\r\n\t2.\t其他 SDK （如 tencentcloud go sdk 、Aliyun Go SDK ）：\r\n\t\t•\t有的不支持 endpoint 替换，或者是在计算签名要包含 host 参数\r\n\t\t•\t有的需要深度改代码或 fork\r\n\t3.\t考虑过系统层或中间层方案，比如：\r\n\t\t•\thosts 劫持（不适用于 HTTPS + SNI ）\r\n\t\t•\t本地 HTTP 代理 + 域名重写（如 mitmproxy 、squid ）\r\n\t\t•\tiptables + redsocks 实现透明代理（过于复杂）\r\n\t\t•\tGo 中自定义 http.Transport + DialContext：受限于 SDK 能否复用全局 http.Client\r\n\r\n❓想请教大家：\r\n\r\n\t1.\t有没有通用方式拦截 Go 项目中 SDK 发起的 HTTPS 请求，并做统一的域名映射或代理转发？\r\n\t\t•\t比如运行时 Hook 、网络中间层、标准库配置等。\r\n\t2.\t是否有成熟的内网网关代理解决方案（支持 hostname 映射、HTTPS 转发）适合这种场景？\r\n\t3.\t有没有人做过类似政企、金融、军工、政府等受限内网部署，你们是怎么处理第三方 SDK 出口问题的？\r\n\r\n非常感谢大家宝贵的经验和建议！🙏\r\n如有成熟工具、框架、示例代码或经验文章，也欢迎推荐。", "content_rendered": "<p>各位大佬，</p>\n<p>我们在给甲方部署一个 Go 项目 时，遇到一个关于外部网络访问受限的问题，想请教有没有通用、优雅的解决方案。</p>\n<p>✅ 背景信息：</p>\n<pre><code>1. 项目使用 Go 编写，集成了多个第三方 SDK ，比如：\n\t•\t阿里云 SDK （ Aliyun ）\n\t•\tAWS SDK\n\t•\tLet’s Encrypt （自动申请证书）\n\t•\t其他 RESTful API 客户端\n2. 这些 SDK 会直接访问公网域名，比如：\n\t•\thttps://alidns.aliyuncs.com\n\t•\thttps://acme-v02.api.letsencrypt.org\n\t•\thttps://sts.amazonaws.com\n</code></pre>\n<p>🚧 甲方网络要求：</p>\n<pre><code>1.\t甲方有严格的出口策略，服务器不能直接访问公网。\n2.\t所有流量必须经过其提供的 内网网关，并统一审计。\n3.\t我们需要先提交所需的“外部域名列表”，然后他们会提供 一一对应的代理地址，比如：\n\t•\thttps://alidns.aliyuncs.com → http://alidns.my.local\n\t•\thttps://acme-v02.api.letsencrypt.org → http://acme.my.local\n4.\t服务实际运行时，必须通过这些映射地址访问外部服务。\n</code></pre>\n<p>⛰️我们面临的核心挑战是：</p>\n<pre><code>1.\tGo 项目中大量使用第三方 SDK ，这些 SDK 会直接访问外部域名。\n2.\t我们不想直接修改 SDK 的代码，不想维护一堆 fork 。\n3.\t域名数量多、来源复杂，难以完全靠手工收集和配置。\n</code></pre>\n<p>🤔 当前尝试：</p>\n<pre><code>1.\t部分 SDK （如 AWS ）提供了自定义 Endpoint 的设置方式，我们可以通过代码配置替换了对应的 URL 。\n2.\t其他 SDK （如 tencentcloud go sdk 、Aliyun Go SDK ）：\n\t•\t有的不支持 endpoint 替换，或者是在计算签名要包含 host 参数\n\t•\t有的需要深度改代码或 fork\n3.\t考虑过系统层或中间层方案，比如：\n\t•\thosts 劫持（不适用于 HTTPS + SNI ）\n\t•\t本地 HTTP 代理 + 域名重写（如 mitmproxy 、squid ）\n\t•\tiptables + redsocks 实现透明代理（过于复杂）\n\t•\tGo 中自定义 http.Transport + DialContext：受限于 SDK 能否复用全局 http.Client\n</code></pre>\n<p>❓想请教大家：</p>\n<pre><code>1.\t有没有通用方式拦截 Go 项目中 SDK 发起的 HTTPS 请求，并做统一的域名映射或代理转发？\n\t•\t比如运行时 Hook 、网络中间层、标准库配置等。\n2.\t是否有成熟的内网网关代理解决方案（支持 hostname 映射、HTTPS 转发）适合这种场景？\n3.\t有没有人做过类似政企、金融、军工、政府等受限内网部署，你们是怎么处理第三方 SDK 出口问题的？\n</code></pre>\n<p>非常感谢大家宝贵的经验和建议！🙏\n如有成熟工具、框架、示例代码或经验文章，也欢迎推荐。</p>\n", "last_modified": 1748395925, "replies": 56, "id": 1134781}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1733731195", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1733731195", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 66878, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1733731195", "stars": 9332, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 155576, "username": "elantion", "url": "https://www.v2ex.com/u/elantion", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/2c33cb175ef747314abc5730911213ba?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/2c33cb175ef747314abc5730911213ba?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/2c33cb175ef747314abc5730911213ba?s=73&d=retro", "created": 1452839112, "last_modified": 1452839112}, "last_reply_by": "elantion", "last_touched": 1748476787, "title": "失业在家，花一个月撸了个 web 前端框架，求大佬们指点", "url": "https://www.v2ex.com/t/1134903", "created": 1748416858, "deleted": 0, "content": "## 失业状况（请跳过）\r\n失业在家快一年了，刚过 40 岁，有点不知所措。刚拿到赔偿金那天还很高兴，当天就去自驾游了，但玩得很内疚，总感觉在浪费时间，想是不是该沉下心来学习？于是玩了一周就回家了。\r\n回来后，几个月都在打兼职，写 AI 工具，总共就赚了五千块，还借了六七千块钱给个在创业的朋友（估计是要不回来了）。<br>\r\n后面感觉做兼职是浪费时间，转头研究 AI Agent ，自已写了个本地对话工具，基于 Ollama ，但是本地电脑算力不够，而且 ollama 不支持 mcp ，bridge 写得头大，放弃了。(遗产： https://gitee.com/james-yin01/viviwawa ）<br>\r\n又转头研究腾讯的 KuiklyUI ，自研个“贷款计算 App”，但发现 Kuikly 非常不成熟，文档不全，bug 多，功能不完善，社区没人，果断放弃。（遗产： https://gitee.com/james-yin01/lc-loan-calculator ）<br>\r\n最后，心想还是做自已最擅长的东西吧（我十多年 web 前端开发），于是就花一个月写了个 web 框架。当然，目前只是原型阶段，只是跑通了基本的几个小场景，问题肯定还有很多，所以想在这儿问问大佬们这玩意有没有搞头，有的话就继续写写看，没有的话就放弃搞别的去了。\r\n\r\n## 框架简述\r\n框架名为 LazyCoffee ，是一款设计为面向对象开发的 web 框架。框架地址： https://gitee.com/james-yin01/lc_ood_framework\r\n\r\n## 为什么要开发这个框架？\r\n实话实说，我也是个讨厌重复造轮子的人，没事找事，感觉像刷 KPI 。但我写前端这么多年了，用了巨多框架，各种优点缺点我都心中有数，所以想能不能造个能解决某些痛点，又简单好用的框架，于是就萌生了写框架的想法，绝不是简单的造轮子。\r\n\r\n### 失控的状态变量\r\n我是从 ie6 那年代过来的，我特别喜欢原生开发，有一种掌控全局的感觉，到后面 angular, react, vue ，我发现项目变大后，有种失控的感觉，例如一个 dom 元素会被 state, props, redux 等各种变量控制，产生这样的问题是因为不同的变量有不同的作用域，你必须从上到下传递变量或者利用 redux 这样的框架全局把控。随着代码贡献的人变多，思路不一致，会发现项目的组件像口袋里的有线耳机一样混乱，例如明明可以组件内控制的变量非要用 props 传过来。<br>\r\n举个经典例子：弹窗。我们要做很多个弹窗，所以会有一个叫 Modal 的组件统一显示弹窗，弹窗内容通过`props.children`传过来，开关通过`props.isOpen`控制。因为你有很多不同的弹窗，所以你要一个数组来控制所有的弹窗变量，这就需要 redux 之类的状态管理工具来全局把控了。如果要关闭某个弹窗，你要遍历，变更状态，触发更新，麻烦的很。\r\n\r\n### 解决单向流的痛点\r\n其实造成上面的问题的根本原因就是 react, vue 都一直尊循的原则：状态变量单向流，你的状态变量只能从上层往下层传递，如果你的下层组件想变更上层状态变量，是不允许的，如果想实现，只能把状态变量统一提取到全局作用域，下层组件通过变更全局变量才能实现。<br>\r\n为了解决这个问题 LazyCoffee 框架利用了两个古老但实用的设计：元素查找和属性代理。\r\n\r\n### 元素查找和属性代理\r\n如果有两个平行的组件，例如两个弹窗，你不能在一个组件里变更另一个组件的变量，只能改为上下级或者通过共同父组件来控制。但 LazyCoffee 框架就可以，你只要找到另一个组件的实例，然后调用实例方法即可，看下面伪代码：\r\n\r\n\r\n```tsx\r\nimport { queryOne } from 'lc_ood_framework';\r\n\r\nfunction submit() {\r\n    const anotherModal = queryOne('#confirm');\r\n    anotherModal.open('Are you sure?', function () {\r\n        // do something\r\n    });\r\n}\r\n```\r\n\r\n是不是很熟悉的感觉？这不就是 jquery 老一辈的设计嘛？是的，朋友，是的。`queryOne`就是元素查找的方法，`anotherModal`就是元素的实例，`open`就是元素的方法，这个方法就是通过属性代理实现的。\r\n通过这种设计，不管你的组件是平行的，还是上下级，都可以直接操控别的组件，从单向流的桎梏中解脱出来。\r\n\r\n### 是不是有别的办法？\r\n我在想，是不是有别的办法解决上面说的痛点，有必要另外写个框架？有的，朋友，当然有。利用 redux 或 pinia 之类的状态管理库，统一管控起来，然后让团队成员遵守代码规范，做好代码检视，一般是能实现的。我之所有写框架，是想更优雅解决这个痛点，提供一个与众不同的思路。\r\n\r\n### 没了，就这样\r\n框架的其他设计几乎都是照抄 react ，就是代码实现上自已另外造了个轮子，没找到复用的方法（有想到的告诉我，维护一个 jsx 实现是很难的）。<br>\r\n<br>\r\n请大佬们指点迷津，谢谢！<br>\r\n另外，有需要前端老中医的欢迎联系我，我失业中，谢谢！<br>", "content_rendered": "<h2>失业状况（请跳过）</h2>\n<p>失业在家快一年了，刚过 40 岁，有点不知所措。刚拿到赔偿金那天还很高兴，当天就去自驾游了，但玩得很内疚，总感觉在浪费时间，想是不是该沉下心来学习？于是玩了一周就回家了。\n回来后，几个月都在打兼职，写 AI 工具，总共就赚了五千块，还借了六七千块钱给个在创业的朋友（估计是要不回来了）。<br/>\n后面感觉做兼职是浪费时间，转头研究 AI Agent ，自已写了个本地对话工具，基于 Ollama ，但是本地电脑算力不够，而且 ollama 不支持 mcp ，bridge 写得头大，放弃了。(遗产： <a href=\"https://gitee.com/james-yin01/viviwawa\" rel=\"nofollow\">https://gitee.com/james-yin01/viviwawa</a> ）<br/>\n又转头研究腾讯的 KuiklyUI ，自研个“贷款计算 App”，但发现 Kuikly 非常不成熟，文档不全，bug 多，功能不完善，社区没人，果断放弃。（遗产： <a href=\"https://gitee.com/james-yin01/lc-loan-calculator\" rel=\"nofollow\">https://gitee.com/james-yin01/lc-loan-calculator</a> ）<br/>\n最后，心想还是做自已最擅长的东西吧（我十多年 web 前端开发），于是就花一个月写了个 web 框架。当然，目前只是原型阶段，只是跑通了基本的几个小场景，问题肯定还有很多，所以想在这儿问问大佬们这玩意有没有搞头，有的话就继续写写看，没有的话就放弃搞别的去了。</p>\n<h2>框架简述</h2>\n<p>框架名为 LazyCoffee ，是一款设计为面向对象开发的 web 框架。框架地址： <a href=\"https://gitee.com/james-yin01/lc_ood_framework\" rel=\"nofollow\">https://gitee.com/james-yin01/lc_ood_framework</a></p>\n<h2>为什么要开发这个框架？</h2>\n<p>实话实说，我也是个讨厌重复造轮子的人，没事找事，感觉像刷 KPI 。但我写前端这么多年了，用了巨多框架，各种优点缺点我都心中有数，所以想能不能造个能解决某些痛点，又简单好用的框架，于是就萌生了写框架的想法，绝不是简单的造轮子。</p>\n<h3>失控的状态变量</h3>\n<p>我是从 ie6 那年代过来的，我特别喜欢原生开发，有一种掌控全局的感觉，到后面 angular, react, vue ，我发现项目变大后，有种失控的感觉，例如一个 dom 元素会被 state, props, redux 等各种变量控制，产生这样的问题是因为不同的变量有不同的作用域，你必须从上到下传递变量或者利用 redux 这样的框架全局把控。随着代码贡献的人变多，思路不一致，会发现项目的组件像口袋里的有线耳机一样混乱，例如明明可以组件内控制的变量非要用 props 传过来。<br/>\n举个经典例子：弹窗。我们要做很多个弹窗，所以会有一个叫 Modal 的组件统一显示弹窗，弹窗内容通过<code>props.children</code>传过来，开关通过<code>props.isOpen</code>控制。因为你有很多不同的弹窗，所以你要一个数组来控制所有的弹窗变量，这就需要 redux 之类的状态管理工具来全局把控了。如果要关闭某个弹窗，你要遍历，变更状态，触发更新，麻烦的很。</p>\n<h3>解决单向流的痛点</h3>\n<p>其实造成上面的问题的根本原因就是 react, vue 都一直尊循的原则：状态变量单向流，你的状态变量只能从上层往下层传递，如果你的下层组件想变更上层状态变量，是不允许的，如果想实现，只能把状态变量统一提取到全局作用域，下层组件通过变更全局变量才能实现。<br/>\n为了解决这个问题 LazyCoffee 框架利用了两个古老但实用的设计：元素查找和属性代理。</p>\n<h3>元素查找和属性代理</h3>\n<p>如果有两个平行的组件，例如两个弹窗，你不能在一个组件里变更另一个组件的变量，只能改为上下级或者通过共同父组件来控制。但 LazyCoffee 框架就可以，你只要找到另一个组件的实例，然后调用实例方法即可，看下面伪代码：</p>\n<pre><code class=\"language-tsx\">import { queryOne } from 'lc_ood_framework';\n\nfunction submit() {\n    const anotherModal = queryOne('#confirm');\n    anotherModal.open('Are you sure?', function () {\n        // do something\n    });\n}\n</code></pre>\n<p>是不是很熟悉的感觉？这不就是 jquery 老一辈的设计嘛？是的，朋友，是的。<code>queryOne</code>就是元素查找的方法，<code>anotherModal</code>就是元素的实例，<code>open</code>就是元素的方法，这个方法就是通过属性代理实现的。\n通过这种设计，不管你的组件是平行的，还是上下级，都可以直接操控别的组件，从单向流的桎梏中解脱出来。</p>\n<h3>是不是有别的办法？</h3>\n<p>我在想，是不是有别的办法解决上面说的痛点，有必要另外写个框架？有的，朋友，当然有。利用 redux 或 pinia 之类的状态管理库，统一管控起来，然后让团队成员遵守代码规范，做好代码检视，一般是能实现的。我之所有写框架，是想更优雅解决这个痛点，提供一个与众不同的思路。</p>\n<h3>没了，就这样</h3>\n<p>框架的其他设计几乎都是照抄 react ，就是代码实现上自已另外造了个轮子，没找到复用的方法（有想到的告诉我，维护一个 jsx 实现是很难的）。<br/>\n<br/>\n请大佬们指点迷津，谢谢！<br/>\n另外，有需要前端老中医的欢迎联系我，我失业中，谢谢！<br/></p>\n", "last_modified": 1748432018, "replies": 48, "id": 1134903}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1733731195", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1733731195", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 66878, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1733731195", "stars": 9332, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 14375, "username": "idblife", "url": "https://www.v2ex.com/u/idblife", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/a95c/4050/14375_mini.png?m=1646796005", "avatar_normal": "https://cdn.v2ex.com/avatar/a95c/4050/14375_normal.png?m=1646796005", "avatar_large": "https://cdn.v2ex.com/avatar/a95c/4050/14375_large.png?m=1646796005", "created": 1323348088, "last_modified": 1646796005}, "last_reply_by": "Avedge", "last_touched": 1748453559, "title": "有没有适合写代码时盘的手串", "url": "https://www.v2ex.com/t/1134795", "created": 1748397971, "deleted": 0, "content": "Vibe coding 时手上有点无聊呢", "content_rendered": "Vibe coding 时手上有点无聊呢", "last_modified": 1748397971, "replies": 47, "id": 1134795}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1739135407", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1739135407", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 230456, "footer": "", "header": "<!--\r\n一个更好的世界需要你持续地提出好问题。\r\n-->", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1739135407", "stars": 4348, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 602622, "username": "luck2023", "url": "https://www.v2ex.com/u/luck2023", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/daa09f726c0b722fa89f5baceb898c55?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/daa09f726c0b722fa89f5baceb898c55?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/daa09f726c0b722fa89f5baceb898c55?s=73&d=retro", "created": 1668903689, "last_modified": 1743290891}, "last_reply_by": "stll7", "last_touched": 1748460670, "title": "当今这个社会，普通人逆天改命的机会在哪？", "url": "https://www.v2ex.com/t/1134958", "created": 1748424749, "deleted": 0, "content": "当今这个社会，我觉得普通人逆天改命的机会，只剩下投资美股，炒币了，赚钱相对容易一点。创业基本九死一生。打工都很难苟活于世，很辛苦很没有前途。30 多的人，基本上工作都很难找了，除非去做铁人三项之类的，或者进厂之类。各位 v 友觉得还有什么路子可走？", "content_rendered": "当今这个社会，我觉得普通人逆天改命的机会，只剩下投资美股，炒币了，赚钱相对容易一点。创业基本九死一生。打工都很难苟活于世，很辛苦很没有前途。30 多的人，基本上工作都很难找了，除非去做铁人三项之类的，或者进厂之类。各位 v 友觉得还有什么路子可走？", "last_modified": 1748424749, "replies": 45, "id": 1134958}]