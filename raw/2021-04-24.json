[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1618915518", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1618915518", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 44271, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1618915518", "stars": 7354, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"username": "Renco", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/8530/7718/402540_mini.png?m=1593570831", "bio": "", "url": "https://www.v2ex.com/u/Renco", "tagline": "", "twitter": "", "created": 1555480728, "avatar_large": "https://cdn.v2ex.com/avatar/8530/7718/402540_mini.png?m=1593570831", "avatar_mini": "https://cdn.v2ex.com/avatar/8530/7718/402540_mini.png?m=1593570831", "location": "", "btc": "", "id": 402540}, "last_reply_by": "nutting", "last_touched": 1619207714, "title": "数据库设计太拉跨被喷了。", "url": "https://www.v2ex.com/t/772712", "created": 1619158754, "content": "发现都是些智障问题，总结一下。\r\n\r\n- 表内创建人字段和更新人字段，只存了 name，没有存人的 Id 。当时想着是应该只关心是谁做的操作，所以没有加入 id 的关联关系。但是实际上在表设计中有关联关系但是不存关联信息的数据干脆就不存，要存就都存。\r\n\r\n- 关联表的索引关系一定要明确，该做约束的约束。该设置必输的设置必输。\r\n\r\n- 部分在代码中或者项目里比较高频的字段，表设计时最好加_info 。\r\n\r\n- 英文尽量要合理 比如创建人不应该是 create_name 合理的应该是 creator_name，这块当时设计的时候想的是 creator_name，但是为了和创建时间和更新时间对应就统一变成了  create_name 和 lst_name 。\r\n\r\n目前统计下来应该都是类似的问题。我数据库设计确实拉跨，可能是因为之前做的东西过度松散，对于数据库设计基本都是能用就行，关联表的约束关系可能都没有做全，全靠代码来做。还有很多细节上的问题。其实每次开发都是很快很简单，但是表设计真的让我头大。", "content_rendered": "<p>发现都是些智障问题，总结一下。</p>\n<ul>\n<li>\n<p>表内创建人字段和更新人字段，只存了 name，没有存人的 Id 。当时想着是应该只关心是谁做的操作，所以没有加入 id 的关联关系。但是实际上在表设计中有关联关系但是不存关联信息的数据干脆就不存，要存就都存。</p>\n</li>\n<li>\n<p>关联表的索引关系一定要明确，该做约束的约束。该设置必输的设置必输。</p>\n</li>\n<li>\n<p>部分在代码中或者项目里比较高频的字段，表设计时最好加_info 。</p>\n</li>\n<li>\n<p>英文尽量要合理 比如创建人不应该是 create_name 合理的应该是 creator_name，这块当时设计的时候想的是 creator_name，但是为了和创建时间和更新时间对应就统一变成了  create_name 和 lst_name 。</p>\n</li>\n</ul>\n<p>目前统计下来应该都是类似的问题。我数据库设计确实拉跨，可能是因为之前做的东西过度松散，对于数据库设计基本都是能用就行，关联表的约束关系可能都没有做全，全靠代码来做。还有很多细节上的问题。其实每次开发都是很快很简单，但是表设计真的让我头大。</p>\n", "last_modified": 1619158754, "replies": 64, "id": 772712}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1618915518", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1618915518", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 44271, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1618915518", "stars": 7354, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"username": "forsigner", "website": "http://forsigner.com", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/1f58/4098/159198_mini.png?m=1455692741", "bio": "", "url": "https://www.v2ex.com/u/forsigner", "tagline": "Find the bug of the world.", "twitter": "", "created": 1455692599, "avatar_large": "https://cdn.v2ex.com/avatar/1f58/4098/159198_mini.png?m=1455692741", "avatar_mini": "https://cdn.v2ex.com/avatar/1f58/4098/159198_mini.png?m=1455692741", "location": "珠海", "btc": "", "id": 159198}, "last_reply_by": "forsigner", "last_touched": 1619195718, "title": "Fower: 一个可在 Vue 和 React 方便使用的 CSS in JS 库", "url": "https://www.v2ex.com/t/772656", "created": 1619145637, "content": "今天给大家介绍一个我断断续续花了半年开发的 CSS 项目： [Fower]( https://github.com/forsigner/fower).\r\n\r\n## Fower 是什么？\r\n\r\nFower 是一个让你高效开发 UI 的样式工具库，目标是让你写 CSS 不再痛苦。Fower 的核心特点是原子化(Atomic/utility-first)、类型安全(Type Safe)、CSS in JS，它非常注重开发体验，让你快速且开心的开发界面。\r\n\r\nFower 是框架无关的，你可以在 React 、Vue 、React native 、小程序等任何 JavaScript 项目中使用。\r\n\r\n## 项目背景\r\n\r\n一年前，我所在的团队同时在开发 Web 、React native 、小程序项目。在这三类项目中，我们使用了各不相同的样式方案：\r\n\r\n- 在 Web 项目中，我们使用的是 Styed-component ；\r\n- 在 React native 项目中，我们使用 React native 自带的 `StyleSheet.create`；\r\n- 在小程序项目中，我们使用 Taro 开发，样式方案是 Sass;\r\n\r\n三种样式的方案写法各不相同，导致我们编写样式时特别痛苦：\r\n\r\n- 开发体验差，开发同样的界面，却要不同的写法，需要不断切换习惯和思维\r\n- 工具链太广太复杂，Styled-component 、Sass 、StyleSheet.create...\r\n- 开发效率低下，重复代码特别多\r\n- CSS 天生缺点多，可维护性差\r\n\r\n后面，我发现了 [Tailwindcss]( https://tailwindcss.com/)，一个 utility 优先(utility-first) 的 CSS 框架，在我的推动下，我们团队开始在 Web 项目中使用 Tailwindcss 。一段时间后，我们发现开发体验很不错，开发效率也很高，特别适合在我们这种需要高度定制界面的项目使用。可惜的是，Tailwindcss 无法直接在 React native 、小程序等非 Web 项目使用。\r\n\r\n我们团队的成员都喜欢 Tailwindcss 这种样式写法。所以我创建了 [Fower]( https://github.com/forsigner/fower)，希望能统一了所有项目的样式编写方式。\r\n\r\n和 Tailwindcss 类似，我们也使用了 utility-first 的理念，但有 Fower 又有点不同，Fower 使用 Atomic style props 的方式编写样式，代码如下：\r\n\r\n```html\r\n<div toCenterY p-10 w-260 rounded-10 shadow>\r\n  <img circle-48 src=\"/img/jobs.jpg\" />\r\n  <div ml-10>\r\n    <div textXL fontBold>Steve Jobs</div>\r\n    <span gray800>Co-founder of Apple Inc.</span>\r\n  </div>\r\n</div>\r\n```\r\n\r\n## 核心理念\r\n\r\nFower 是 opinionated 的，我们基于以下理念创建了它：\r\n\r\n- **utility-first**，这种方式让我们更快速地编写样式，和其他 \"utility-first\" CSS 框架不同的是，Fower 使用 \"Atomic style prop\" 编写样式\r\n\r\n- **Type safe**，我们团队是 TypeScript 重度使用用户，Type safe 带来的智能提示，让我们几乎很少翻阅文档，并且在编写代码时不依赖任何编辑插件就有准确的自动补全\r\n\r\n- **Framework-agnostic**，这是我们创建 Fower 的最主要原因之一，Fower 可以让你用一致的写法在 React 、Vue 、React Native 编写样式\r\n\r\n- **CSS in JS**，我们讨厌在独立的 CSS 文件中编写 CSS，纯 CSS 有非常多缺点，如：无法访问 JS 变量；容易产生样式冲突；容易产生死代码... 我们喜欢使用 JS (CSS in JS) 编写样式，它更适合在组件化时代中使用。实际上，Fower 不仅仅是 CSS in JS，它也是 CSS in HTML 。\r\n\r\n## 一些很酷的特性\r\n\r\nFower 有非常多的特性，如原子类、响应式、伪类、主题、设计系统、CSS in JS...，我觉这些是 Fower 的基础功能，并不是特色功能。\r\n\r\nFower 有几个我认为很酷的功能：\r\n\r\n### 1. Layout Toolkit\r\n\r\n如果要我在 Fower 中选一个最喜欢的特性，那毫无疑问是 [Layout Toolkitd]( https://fower.vercel.app/zh-cn/docs/fower-layout-introduction)。\r\n\r\nFower 提供了一个强大的基于 Flexdiv 的布局工具，通过调整布局的方向(Direction)和对齐(Alignment)，可以实现大部分的布局，使布局工作更轻松。\r\n\r\n相比传统的 flex 布局，Fower 的布局更加抽象精简，Fower 的布局抽象为 `toCenter`、`toCenterX`、`toCenterY`、`toLeft`、`toTop`、`toRight`、`toBottom`、`toBetween`、`toEvenly`、`toAround` 十种原子对齐方式，使用时你可以忘记传统 flex 布局中的主轴（ main axis ）和交叉轴（ cross axis ）的概念，你只需要有方向感即可。\r\n\r\n使用方式如下：\r\n\r\n```html\r\n<div toCenter bgGray100 square-200>\r\n  <div square-60 bgAmber400 rounded-8></div>\r\n  <div square-80 bgBlue400 rounded-8></div>\r\n</div>\r\n```\r\n\r\n更详细的使用方法请看文档： [Layout Toolkitd]( https://fower.vercel.app/zh-cn/docs/fower-layout-introduction)。\r\n\r\n### 2. Predictable style\r\n\r\n另外一个我个人很喜欢的特性的是 Predictable style 。在传统的 CSS 中，我认为样式是不可预测的。为什么这么说？这里举个例子。\r\n\r\n我们有如下的 CSS:\r\n\r\n```css\r\n.red {\r\n  color: red;\r\n}\r\n.blue {\r\n  color: blue;\r\n}\r\n```\r\n\r\n有如下的的 html, css 类名分别为 \"red blue\" 和 \"blue red\"：\r\n\r\n```html\r\n<div>\r\n  <span className=\"red blue\">Fower</span>\r\n  <span className=\"blue red\">Fower</span>\r\n</div>\r\n```\r\n\r\n你能确定文字的颜色吗？不好确定，如果我们不翻看上面的 CSS 代码，你无法直接判断文字的颜色，只能通过开发者工具调试得知。\r\n\r\n在 Flower 中，你可以轻易判断下面文字的颜色：\r\n\r\n```html\r\n<div>\r\n  <span red400 blue400> text will be color blue400 </span>\r\n  <span blue400 red400> text will be color red400 </span>\r\n</div>\r\n```\r\n\r\n这有什么用呢？除了让我们更容易判断样式结果，我觉的最有用的是：当我们抽象出一个可复用的组件时，比如一个通用的 `Button`, 那调用方可以轻易的覆盖组件默认样式，比如这样类似的代码 `<Button bgRed300></Button>` 可以安全的设置背景色。\r\n\r\n更详细的使用方法请看文档：[Predictable style]( https://fower.vercel.app/zh-cn/docs/predictable-style)。\r\n\r\n### 3. 颜色助手\r\n\r\nFower 的另一个很酷的功能是颜色助手，您可以使用一些后缀来处理颜色。\r\n\r\n使用 `--D{0-100}` 这样的后缀来加深一个颜色:\r\n\r\n```html\r\n<div toEvenly toCenterY>\r\n  <div red300>normal</div>\r\n  <div red300--D40>darken</div>\r\n  <div color=\"#fff--D40\">darken</div>\r\n  <div bgRed300 square-84></div>\r\n  <div bgRed300--D40 square-84></div>\r\n  <div border borderRed300 square-84></div>\r\n  <div border borderRed300--D40 square-84></div>\r\n</div>\r\n```\r\n\r\n使用 `--L{0-100}` 后缀来变浅一个颜色：\r\n\r\n```html\r\n<div toEvenly>\r\n  <div red500>normal</div>\r\n  <div red500--T40>transparentize</div>\r\n  <div color=\"#000--T40\">transparentize</div>\r\n  <div bgRed500 square-84></div>\r\n  <div bgRed500--T40 square-84></div>\r\n  <div border borderRed300 square-84></div>\r\n  <div border borderRed300--T40 square-84></div>\r\n</div>\r\n```\r\n\r\n使用 `--T{0-100}` 后缀来增加颜色的透明度：\r\n\r\n```html\r\n<div toEvenly>\r\n  <div red500>normal</div>\r\n  <div red500--T40>transparentize</div>\r\n  <div color=\"#000--T40\">transparentize</div>\r\n  <div bgRed500 square-84></div>\r\n  <div bgRed500--T40 square-84></div>\r\n  <div border borderRed300 square-84></div>\r\n  <div border borderRed300--T40 square-84></div>\r\n</div>\r\n```\r\n\r\n使用 `--O{0-100}` 后缀来增加颜色的不透明度：\r\n\r\n```html\r\n<div toEvenly>\r\n  <div color=\"rgba(0,0,0,0.4)\">0.4</div>\r\n  <div color=\"rgba(0,0,0,0.4)--O40\">Opacify to 0.6</div>\r\n  <div bg=\"rgba(0,0,0,0.4)\" square-84></div>\r\n  <div bg=\"rgba(0,0,0,0.4)--O40\" square-84></div>\r\n  <div border borderColor=\"rgba(0,0,0,0.4)\" square-84></div>\r\n  <div border borderColor=\"rgba(0,0,0,0.4)--O40\" square-84></div>\r\n</div>\r\n```\r\n\r\n更详细的使用方法请看文档：[Color helper]( https://fower.vercel.app/zh-cn/docs/color-helper)。\r\n\r\n### 4. 可组合的后缀\r\n\r\nFower 提供一些后缀来快速处理样式, 如: `--hover`, `--focus`, `--sm`, `--dark`, `--T{amount}`...\r\n\r\nFlower 的另一个很酷的功能是可组合的后缀。 您可以组合一些后缀，并且顺序是**任意**的:\r\n\r\n```html\r\n<div square-84 bgOrange300 bgOrange400--D10--hover--sm></div>\r\n```\r\n\r\n下面的代码和上面是等价的：\r\n\r\n```html\r\n<div square-84 bgOrange300 bgOrange400--hover--sm--D10></div>\r\n```\r\n\r\n## 最后\r\n\r\n如果你想了解更多关于 Fower 的信息，你可以访问项目网站和官方文档。\r\n\r\n- 项目地址： ( https://github.com/forsigner/fower)[https://github.com/forsigner/fower]\r\n- 项目文档：( https://fower.vercel.app)[https://fower.vercel.app]", "content_rendered": "<p>今天给大家介绍一个我断断续续花了半年开发的 CSS 项目： <a href=\"https://github.com/forsigner/fower\" rel=\"nofollow\">Fower</a>.</p>\n<h2>Fower 是什么？</h2>\n<p>Fower 是一个让你高效开发 UI 的样式工具库，目标是让你写 CSS 不再痛苦。Fower 的核心特点是原子化(Atomic/utility-first)、类型安全(Type Safe)、CSS in JS，它非常注重开发体验，让你快速且开心的开发界面。</p>\n<p>Fower 是框架无关的，你可以在 React 、Vue 、React native 、小程序等任何 JavaScript 项目中使用。</p>\n<h2>项目背景</h2>\n<p>一年前，我所在的团队同时在开发 Web 、React native 、小程序项目。在这三类项目中，我们使用了各不相同的样式方案：</p>\n<ul>\n<li>在 Web 项目中，我们使用的是 Styed-component ；</li>\n<li>在 React native 项目中，我们使用 React native 自带的 <code>StyleSheet.create</code>；</li>\n<li>在小程序项目中，我们使用 Taro 开发，样式方案是 Sass;</li>\n</ul>\n<p>三种样式的方案写法各不相同，导致我们编写样式时特别痛苦：</p>\n<ul>\n<li>开发体验差，开发同样的界面，却要不同的写法，需要不断切换习惯和思维</li>\n<li>工具链太广太复杂，Styled-component 、Sass 、StyleSheet.create...</li>\n<li>开发效率低下，重复代码特别多</li>\n<li>CSS 天生缺点多，可维护性差</li>\n</ul>\n<p>后面，我发现了 <a href=\"https://tailwindcss.com/\" rel=\"nofollow\">Tailwindcss</a>，一个 utility 优先(utility-first) 的 CSS 框架，在我的推动下，我们团队开始在 Web 项目中使用 Tailwindcss 。一段时间后，我们发现开发体验很不错，开发效率也很高，特别适合在我们这种需要高度定制界面的项目使用。可惜的是，Tailwindcss 无法直接在 React native 、小程序等非 Web 项目使用。</p>\n<p>我们团队的成员都喜欢 Tailwindcss 这种样式写法。所以我创建了 <a href=\"https://github.com/forsigner/fower\" rel=\"nofollow\">Fower</a>，希望能统一了所有项目的样式编写方式。</p>\n<p>和 Tailwindcss 类似，我们也使用了 utility-first 的理念，但有 Fower 又有点不同，Fower 使用 Atomic style props 的方式编写样式，代码如下：</p>\n<pre><code class=\"language-html\">&lt;div toCenterY p-10 w-260 rounded-10 shadow&gt;\n  &lt;img circle-48 src=\"/img/jobs.jpg\" /&gt;\n  &lt;div ml-10&gt;\n    &lt;div textXL fontBold&gt;Steve Jobs&lt;/div&gt;\n    &lt;span gray800&gt;Co-founder of Apple Inc.&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<h2>核心理念</h2>\n<p>Fower 是 opinionated 的，我们基于以下理念创建了它：</p>\n<ul>\n<li>\n<p><strong>utility-first</strong>，这种方式让我们更快速地编写样式，和其他 \"utility-first\" CSS 框架不同的是，Fower 使用 \"Atomic style prop\" 编写样式</p>\n</li>\n<li>\n<p><strong>Type safe</strong>，我们团队是 TypeScript 重度使用用户，Type safe 带来的智能提示，让我们几乎很少翻阅文档，并且在编写代码时不依赖任何编辑插件就有准确的自动补全</p>\n</li>\n<li>\n<p><strong>Framework-agnostic</strong>，这是我们创建 Fower 的最主要原因之一，Fower 可以让你用一致的写法在 React 、Vue 、React Native 编写样式</p>\n</li>\n<li>\n<p><strong>CSS in JS</strong>，我们讨厌在独立的 CSS 文件中编写 CSS，纯 CSS 有非常多缺点，如：无法访问 JS 变量；容易产生样式冲突；容易产生死代码... 我们喜欢使用 JS (CSS in JS) 编写样式，它更适合在组件化时代中使用。实际上，Fower 不仅仅是 CSS in JS，它也是 CSS in HTML 。</p>\n</li>\n</ul>\n<h2>一些很酷的特性</h2>\n<p>Fower 有非常多的特性，如原子类、响应式、伪类、主题、设计系统、CSS in JS...，我觉这些是 Fower 的基础功能，并不是特色功能。</p>\n<p>Fower 有几个我认为很酷的功能：</p>\n<h3>1. Layout Toolkit</h3>\n<p>如果要我在 Fower 中选一个最喜欢的特性，那毫无疑问是 <a href=\"https://fower.vercel.app/zh-cn/docs/fower-layout-introduction\" rel=\"nofollow\">Layout Toolkitd</a>。</p>\n<p>Fower 提供了一个强大的基于 Flexdiv 的布局工具，通过调整布局的方向(Direction)和对齐(Alignment)，可以实现大部分的布局，使布局工作更轻松。</p>\n<p>相比传统的 flex 布局，Fower 的布局更加抽象精简，Fower 的布局抽象为 <code>toCenter</code>、<code>toCenterX</code>、<code>toCenterY</code>、<code>toLeft</code>、<code>toTop</code>、<code>toRight</code>、<code>toBottom</code>、<code>toBetween</code>、<code>toEvenly</code>、<code>toAround</code> 十种原子对齐方式，使用时你可以忘记传统 flex 布局中的主轴（ main axis ）和交叉轴（ cross axis ）的概念，你只需要有方向感即可。</p>\n<p>使用方式如下：</p>\n<pre><code class=\"language-html\">&lt;div toCenter bgGray100 square-200&gt;\n  &lt;div square-60 bgAmber400 rounded-8&gt;&lt;/div&gt;\n  &lt;div square-80 bgBlue400 rounded-8&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p>更详细的使用方法请看文档： <a href=\"https://fower.vercel.app/zh-cn/docs/fower-layout-introduction\" rel=\"nofollow\">Layout Toolkitd</a>。</p>\n<h3>2. Predictable style</h3>\n<p>另外一个我个人很喜欢的特性的是 Predictable style 。在传统的 CSS 中，我认为样式是不可预测的。为什么这么说？这里举个例子。</p>\n<p>我们有如下的 CSS:</p>\n<pre><code class=\"language-css\">.red {\n  color: red;\n}\n.blue {\n  color: blue;\n}\n</code></pre>\n<p>有如下的的 html, css 类名分别为 \"red blue\" 和 \"blue red\"：</p>\n<pre><code class=\"language-html\">&lt;div&gt;\n  &lt;span className=\"red blue\"&gt;Fower&lt;/span&gt;\n  &lt;span className=\"blue red\"&gt;Fower&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n<p>你能确定文字的颜色吗？不好确定，如果我们不翻看上面的 CSS 代码，你无法直接判断文字的颜色，只能通过开发者工具调试得知。</p>\n<p>在 Flower 中，你可以轻易判断下面文字的颜色：</p>\n<pre><code class=\"language-html\">&lt;div&gt;\n  &lt;span red400 blue400&gt; text will be color blue400 &lt;/span&gt;\n  &lt;span blue400 red400&gt; text will be color red400 &lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n<p>这有什么用呢？除了让我们更容易判断样式结果，我觉的最有用的是：当我们抽象出一个可复用的组件时，比如一个通用的 <code>Button</code>, 那调用方可以轻易的覆盖组件默认样式，比如这样类似的代码 <code>&lt;Button bgRed300&gt;&lt;/Button&gt;</code> 可以安全的设置背景色。</p>\n<p>更详细的使用方法请看文档：<a href=\"https://fower.vercel.app/zh-cn/docs/predictable-style\" rel=\"nofollow\">Predictable style</a>。</p>\n<h3>3. 颜色助手</h3>\n<p>Fower 的另一个很酷的功能是颜色助手，您可以使用一些后缀来处理颜色。</p>\n<p>使用 <code>--D{0-100}</code> 这样的后缀来加深一个颜色:</p>\n<pre><code class=\"language-html\">&lt;div toEvenly toCenterY&gt;\n  &lt;div red300&gt;normal&lt;/div&gt;\n  &lt;div red300--D40&gt;darken&lt;/div&gt;\n  &lt;div color=\"#fff--D40\"&gt;darken&lt;/div&gt;\n  &lt;div bgRed300 square-84&gt;&lt;/div&gt;\n  &lt;div bgRed300--D40 square-84&gt;&lt;/div&gt;\n  &lt;div border borderRed300 square-84&gt;&lt;/div&gt;\n  &lt;div border borderRed300--D40 square-84&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p>使用 <code>--L{0-100}</code> 后缀来变浅一个颜色：</p>\n<pre><code class=\"language-html\">&lt;div toEvenly&gt;\n  &lt;div red500&gt;normal&lt;/div&gt;\n  &lt;div red500--T40&gt;transparentize&lt;/div&gt;\n  &lt;div color=\"#000--T40\"&gt;transparentize&lt;/div&gt;\n  &lt;div bgRed500 square-84&gt;&lt;/div&gt;\n  &lt;div bgRed500--T40 square-84&gt;&lt;/div&gt;\n  &lt;div border borderRed300 square-84&gt;&lt;/div&gt;\n  &lt;div border borderRed300--T40 square-84&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p>使用 <code>--T{0-100}</code> 后缀来增加颜色的透明度：</p>\n<pre><code class=\"language-html\">&lt;div toEvenly&gt;\n  &lt;div red500&gt;normal&lt;/div&gt;\n  &lt;div red500--T40&gt;transparentize&lt;/div&gt;\n  &lt;div color=\"#000--T40\"&gt;transparentize&lt;/div&gt;\n  &lt;div bgRed500 square-84&gt;&lt;/div&gt;\n  &lt;div bgRed500--T40 square-84&gt;&lt;/div&gt;\n  &lt;div border borderRed300 square-84&gt;&lt;/div&gt;\n  &lt;div border borderRed300--T40 square-84&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p>使用 <code>--O{0-100}</code> 后缀来增加颜色的不透明度：</p>\n<pre><code class=\"language-html\">&lt;div toEvenly&gt;\n  &lt;div color=\"rgba(0,0,0,0.4)\"&gt;0.4&lt;/div&gt;\n  &lt;div color=\"rgba(0,0,0,0.4)--O40\"&gt;Opacify to 0.6&lt;/div&gt;\n  &lt;div bg=\"rgba(0,0,0,0.4)\" square-84&gt;&lt;/div&gt;\n  &lt;div bg=\"rgba(0,0,0,0.4)--O40\" square-84&gt;&lt;/div&gt;\n  &lt;div border borderColor=\"rgba(0,0,0,0.4)\" square-84&gt;&lt;/div&gt;\n  &lt;div border borderColor=\"rgba(0,0,0,0.4)--O40\" square-84&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p>更详细的使用方法请看文档：<a href=\"https://fower.vercel.app/zh-cn/docs/color-helper\" rel=\"nofollow\">Color helper</a>。</p>\n<h3>4. 可组合的后缀</h3>\n<p>Fower 提供一些后缀来快速处理样式, 如: <code>--hover</code>, <code>--focus</code>, <code>--sm</code>, <code>--dark</code>, <code>--T{amount}</code>...</p>\n<p>Flower 的另一个很酷的功能是可组合的后缀。 您可以组合一些后缀，并且顺序是<strong>任意</strong>的:</p>\n<pre><code class=\"language-html\">&lt;div square-84 bgOrange300 bgOrange400--D10--hover--sm&gt;&lt;/div&gt;\n</code></pre>\n<p>下面的代码和上面是等价的：</p>\n<pre><code class=\"language-html\">&lt;div square-84 bgOrange300 bgOrange400--hover--sm--D10&gt;&lt;/div&gt;\n</code></pre>\n<h2>最后</h2>\n<p>如果你想了解更多关于 Fower 的信息，你可以访问项目网站和官方文档。</p>\n<ul>\n<li>项目地址： ( <a href=\"https://github.com/forsigner/fower)%5Bhttps://github.com/forsigner/fower%5D\" rel=\"nofollow\">https://github.com/forsigner/fower)[https://github.com/forsigner/fower]</a></li>\n<li>项目文档：( <a href=\"https://fower.vercel.app)%5Bhttps://fower.vercel.app%5D\" rel=\"nofollow\">https://fower.vercel.app)[https://fower.vercel.app]</a></li>\n</ul>\n", "last_modified": 1619145637, "replies": 57, "id": 772656}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1618915518", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1618915518", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 44271, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1618915518", "stars": 7354, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"username": "karatsuba", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/avatar/f53d/1ea5/516315_mini.png?m=1605084682", "bio": null, "url": "https://www.v2ex.com/u/karatsuba", "tagline": null, "twitter": null, "created": 1604656296, "avatar_large": "https://cdn.v2ex.com/avatar/f53d/1ea5/516315_mini.png?m=1605084682", "avatar_mini": "https://cdn.v2ex.com/avatar/f53d/1ea5/516315_mini.png?m=1605084682", "location": null, "btc": null, "id": 516315}, "last_reply_by": "newmlp", "last_touched": 1619228198, "title": "怎么避免怯场，或者是说提高自己的沟通技巧", "url": "https://www.v2ex.com/t/772652", "created": 1619145405, "content": "自己属于不熟或者人多就容易怯场，从小到大就属于游戏宅，内心世界很丰富，但是人多就容易大脑宕机，也是很容易脸红\r\n平时业务需求沟通和迭代评审之类的场景也是\r\n\r\n\r\n或者是大哥大姐们有什么读书分享会或者讲故事群或者活动拉拉小弟", "content_rendered": "<p>自己属于不熟或者人多就容易怯场，从小到大就属于游戏宅，内心世界很丰富，但是人多就容易大脑宕机，也是很容易脸红\n平时业务需求沟通和迭代评审之类的场景也是</p>\n<p>或者是大哥大姐们有什么读书分享会或者讲故事群或者活动拉拉小弟</p>\n", "last_modified": 1619145405, "replies": 55, "id": 772652}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4607/2631/1075_large.png?m=1605337857", "name": "ps5", "avatar_normal": "https://cdn.v2ex.com/navatar/4607/2631/1075_normal.png?m=1605337857", "title": "PlayStation 5", "url": "https://www.v2ex.com/go/ps5", "topics": 19, "footer": "", "header": "", "title_alternative": "PlayStation 5", "avatar_mini": "https://cdn.v2ex.com/navatar/4607/2631/1075_mini.png?m=1605337857", "stars": 89, "aliases": [], "root": false, "id": 1075, "parent_node_name": "consoles"}, "member": {"username": "aspriny", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/b788/045b/304887_mini.png?m=1571735277", "bio": "", "url": "https://www.v2ex.com/u/aspriny", "tagline": "", "twitter": "", "created": 1522431617, "avatar_large": "https://cdn.v2ex.com/avatar/b788/045b/304887_mini.png?m=1571735277", "avatar_mini": "https://cdn.v2ex.com/avatar/b788/045b/304887_mini.png?m=1571735277", "location": "", "btc": "", "id": 304887}, "last_reply_by": "palxie", "last_touched": 1619184729, "title": "官宣，国行来了！", "url": "https://www.v2ex.com/t/772651", "created": 1619145282, "content": "![image.png]( https://i.loli.net/2021/04/23/sDgIPp8JMnbAYOj.png)", "content_rendered": "<p><img alt=\"image.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.loli.net/2021/04/23/sDgIPp8JMnbAYOj.png\"/></p>\n", "last_modified": 1619145282, "replies": 53, "id": 772651}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/069d/3bb0/580_large.png?m=1611468295", "name": "ios", "avatar_normal": "https://cdn.v2ex.com/navatar/069d/3bb0/580_normal.png?m=1611468295", "title": "iOS", "url": "https://www.v2ex.com/go/ios", "topics": 2626, "footer": "", "header": "运行于 Apple 移动设备上的操作系统。", "title_alternative": "iOS", "avatar_mini": "https://cdn.v2ex.com/navatar/069d/3bb0/580_mini.png?m=1611468295", "stars": 626, "aliases": [], "root": false, "id": 580, "parent_node_name": "apple"}, "member": {"username": "ZZSZZSZZS", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/4e64/4a98/323041_mini.png?m=1552751466", "bio": "wubba lubba dub dub！", "url": "https://www.v2ex.com/u/ZZSZZSZZS", "tagline": "", "twitter": "", "created": 1529078648, "avatar_large": "https://cdn.v2ex.com/avatar/4e64/4a98/323041_mini.png?m=1552751466", "avatar_mini": "https://cdn.v2ex.com/avatar/4e64/4a98/323041_mini.png?m=1552751466", "location": "", "btc": "", "id": 323041}, "last_reply_by": "Apple2023", "last_touched": 1619191746, "title": "知乎利用播放音频保活？", "url": "https://www.v2ex.com/t/772704", "created": 1619157092, "content": "这种情况是知乎利用后台播放音频保活了吗，后台 app 刷新是关了的，一早上手机就放在那没管它，电量就蹭蹭蹭的掉啊，2021 年了，这条保活方式还没被堵死吗\n\nhttps://i.loli.net/2021/04/23/GvBJnaDmpF9dQul.png\n\nhttps://i.loli.net/2021/04/23/QGxmZFIvE4U3S9d.png", "content_rendered": "<p>这种情况是知乎利用后台播放音频保活了吗，后台 app 刷新是关了的，一早上手机就放在那没管它，电量就蹭蹭蹭的掉啊，2021 年了，这条保活方式还没被堵死吗</p>\n<p><a href=\"https://i.loli.net/2021/04/23/GvBJnaDmpF9dQul.png\" rel=\"nofollow\">https://i.loli.net/2021/04/23/GvBJnaDmpF9dQul.png</a></p>\n<p><a href=\"https://i.loli.net/2021/04/23/QGxmZFIvE4U3S9d.png\" rel=\"nofollow\">https://i.loli.net/2021/04/23/QGxmZFIvE4U3S9d.png</a></p>\n", "last_modified": 1619157092, "replies": 39, "id": 772704}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 171765, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339", "stars": 3211, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"username": "wunonglin", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/de30/859d/190701_mini.png?m=1504757818", "bio": "", "url": "https://www.v2ex.com/u/wunonglin", "tagline": "", "twitter": "", "created": 1473184257, "avatar_large": "https://cdn.v2ex.com/avatar/de30/859d/190701_mini.png?m=1504757818", "avatar_mini": "https://cdn.v2ex.com/avatar/de30/859d/190701_mini.png?m=1504757818", "location": "", "btc": "", "id": 190701}, "last_reply_by": "yyyb", "last_touched": 1619228543, "title": "如何反广告拦截？", "url": "https://www.v2ex.com/t/772685", "created": 1619152253, "content": "例如:www.bilibili.com\r\n\r\n访问主站通过 GET www.bilibili.com 打开，\r\n\r\n然后 bilibili 所有接口（这里注意，是所有的接口）通过 POST www.bilibili.com 在 body 通过{cmd: \"XXX\"}的形式加载，\r\n\r\n这样是否可以达到屏蔽域名你也不能正常访问网站？", "content_rendered": "<p>例如:<a href=\"http://www.bilibili.com\" rel=\"nofollow\">www.bilibili.com</a></p>\n<p>访问主站通过 GET <a href=\"http://www.bilibili.com\" rel=\"nofollow\">www.bilibili.com</a> 打开，</p>\n<p>然后 bilibili 所有接口（这里注意，是所有的接口）通过 POST <a href=\"http://www.bilibili.com\" rel=\"nofollow\">www.bilibili.com</a> 在 body 通过{cmd: \"XXX\"}的形式加载，</p>\n<p>这样是否可以达到屏蔽域名你也不能正常访问网站？</p>\n", "last_modified": 1619153752, "replies": 36, "id": 772685}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_large.png?m=1607656854", "name": "macos", "avatar_normal": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_normal.png?m=1607656854", "title": "macOS", "url": "https://www.v2ex.com/go/macos", "topics": 16512, "footer": "<a href=\"/mbp\">MacBook Pro</a> 及 <a href=\"/go/imac\">iMac</a> 等 <a href=\"/go/apple\">Apple</a> 公司设计的计算机所运行的操作系统。<a href=\"/go/idev\">iOS</a> 的基础。", "header": "The world’s most advanced desktop operating system.", "title_alternative": "macOS", "avatar_mini": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_mini.png?m=1607656854", "stars": 4288, "aliases": [], "root": false, "id": 22, "parent_node_name": "os"}, "member": {"username": "Chenganghui", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/c98c/6ab2/273639_mini.png?m=1512919954", "bio": "", "url": "https://www.v2ex.com/u/Chenganghui", "tagline": "", "twitter": "", "created": 1512919778, "avatar_large": "https://cdn.v2ex.com/avatar/c98c/6ab2/273639_mini.png?m=1512919954", "avatar_mini": "https://cdn.v2ex.com/avatar/c98c/6ab2/273639_mini.png?m=1512919954", "location": "", "btc": "", "id": 273639}, "last_reply_by": "dzdh", "last_touched": 1619211407, "title": "Mac 邮件客户端 opt(s)?", "url": "https://www.v2ex.com/t/772700", "created": 1619156649, "content": "RT. 试过了如下这些客户端：\r\n- 自带邮箱（没有快捷建立提醒 ❎）\r\n- Spark (国内无服务器 ❎)\r\n- Outlook 365 (臃肿至极  新版界面本地化不完善 ❎)\r\n- Edison Mail (本地化不完善 界面无感 ❎)\r\n- Airmail (本地化不完善 界面无感 ❎)\r\n- 网易邮箱大师 (非会员邮件列表有广告 ❎❎❎)\r\n- Foxmail (没有 Windows 端功能齐全，再养养看❎)\r\n- Canary mail (不支持腾讯邮箱 ❎)\r\n\r\n目前个人在用：\r\n- Thunderbird (各项功能基本齐全，但是部分邮件的图片地址不支持 /无法加载✅)\r\n\r\n以上均为个人看法，大家可以分享一下自己的方式 or 软件，👏🏻", "content_rendered": "<p>RT. 试过了如下这些客户端：</p>\n<ul>\n<li>自带邮箱（没有快捷建立提醒 ❎）</li>\n<li>Spark (国内无服务器 ❎)</li>\n<li>Outlook 365 (臃肿至极  新版界面本地化不完善 ❎)</li>\n<li>Edison Mail (本地化不完善 界面无感 ❎)</li>\n<li>Airmail (本地化不完善 界面无感 ❎)</li>\n<li>网易邮箱大师 (非会员邮件列表有广告 ❎❎❎)</li>\n<li>Foxmail (没有 Windows 端功能齐全，再养养看❎)</li>\n<li>Canary mail (不支持腾讯邮箱 ❎)</li>\n</ul>\n<p>目前个人在用：</p>\n<ul>\n<li>Thunderbird (各项功能基本齐全，但是部分邮件的图片地址不支持 /无法加载✅)</li>\n</ul>\n<p>以上均为个人看法，大家可以分享一下自己的方式 or 软件，👏🏻</p>\n", "last_modified": 1619156661, "replies": 32, "id": 772700}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/fc22/1309/181_large.png?m=1608240651", "name": "travel", "avatar_normal": "https://cdn.v2ex.com/navatar/fc22/1309/181_normal.png?m=1608240651", "title": "旅行", "url": "https://www.v2ex.com/go/travel", "topics": 620, "footer": "", "header": "你会把上大学的学费用来环游世界么？", "title_alternative": "Travel", "avatar_mini": "https://cdn.v2ex.com/navatar/fc22/1309/181_mini.png?m=1608240651", "stars": 715, "aliases": [], "root": false, "id": 181, "parent_node_name": "life"}, "member": {"username": "cheny95", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/bbc5/02f2/20964_mini.png?m=1457051626", "bio": "", "url": "https://www.v2ex.com/u/cheny95", "tagline": "", "twitter": "", "created": 1337264823, "avatar_large": "https://cdn.v2ex.com/avatar/bbc5/02f2/20964_mini.png?m=1457051626", "avatar_mini": "https://cdn.v2ex.com/avatar/bbc5/02f2/20964_mini.png?m=1457051626", "location": "", "btc": "", "id": 20964}, "last_reply_by": "ShuoHui", "last_touched": 1619176729, "title": "坐标合肥，五一准备和爱人出去游玩一圈，请给我的规划一些建议，顺便问一下有没有什么轨迹记录的软件，导航只能单次驾驶记录。", "url": "https://www.v2ex.com/t/772638", "created": 1619143602, "content": "RT，五一准备和爱人出去游玩一圈，基本上是苏杭了，最后一站是去老家接娃再回出发城市。\r\n买了旅游险，车是 SUV 油车，买了充气床，准备在车里睡，计划是临到目的地最近的服务区休息，比较方便，也相对安全。需要洗澡之类的可以途径县城之类的远离景区的地方开钟点房。睡车里不是预算问题，就是想单纯体验一次这种感觉。\r\n\r\n充气床实测是可以放平的，也躺上去试了，图中只是示意。\r\n\r\n请各位大佬指点迷津。\r\n\r\n路线：\r\n地图：\r\nhttps://wx2.sinaimg.cn/large/005yrGU3ly1gptfv5emb8j30wa0jyq7t.jpg\r\n规划：\r\nhttps://wx4.sinaimg.cn/mw690/005yrGU3ly1gptg6jkgnhj30n01dsdj0.jpg\r\n准备的物料：\r\nhttps://wx4.sinaimg.cn/large/005yrGU3ly1gptg6nju2xj30n01dsdiw.jpg\r\n\r\n充气床：\r\nhttps://wx4.sinaimg.cn/large/005yrGU3ly1gptg9u55daj30tz140adb.jpg\r\nhttps://wx2.sinaimg.cn/large/005yrGU3ly1gptg6r7b1lj31400u0jvv.jpg", "content_rendered": "RT，五一准备和爱人出去游玩一圈，基本上是苏杭了，最后一站是去老家接娃再回出发城市。<br />买了旅游险，车是 SUV 油车，买了充气床，准备在车里睡，计划是临到目的地最近的服务区休息，比较方便，也相对安全。需要洗澡之类的可以途径县城之类的远离景区的地方开钟点房。睡车里不是预算问题，就是想单纯体验一次这种感觉。<br /><br />充气床实测是可以放平的，也躺上去试了，图中只是示意。<br /><br />请各位大佬指点迷津。<br /><br />路线：<br />地图：<br /><img src=\"https://wx2.sinaimg.cn/large/005yrGU3ly1gptfv5emb8j30wa0jyq7t.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br />规划：<br /><img src=\"https://wx4.sinaimg.cn/mw690/005yrGU3ly1gptg6jkgnhj30n01dsdj0.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br />准备的物料：<br /><img src=\"https://wx4.sinaimg.cn/large/005yrGU3ly1gptg6nju2xj30n01dsdiw.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><br />充气床：<br /><img src=\"https://wx4.sinaimg.cn/large/005yrGU3ly1gptg9u55daj30tz140adb.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><img src=\"https://wx2.sinaimg.cn/large/005yrGU3ly1gptg6r7b1lj31400u0jvv.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> ", "last_modified": 1619143602, "replies": 31, "id": 772638}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/0a09/c884/144_large.png?m=1328413476", "name": "dell", "avatar_normal": "https://cdn.v2ex.com/navatar/0a09/c884/144_normal.png?m=1328413476", "title": "Dell", "url": "https://www.v2ex.com/go/dell", "topics": 76, "footer": "", "header": "", "title_alternative": "Dell", "avatar_mini": "https://cdn.v2ex.com/navatar/0a09/c884/144_mini.png?m=1328413476", "stars": 26, "aliases": [], "root": false, "id": 144, "parent_node_name": ""}, "member": {"username": "zhangslob669", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/gravatar/14320c561666768f9c6e0da4bc881ef4?s=24&d=retro", "bio": null, "url": "https://www.v2ex.com/u/zhangslob669", "tagline": null, "twitter": null, "created": 1503990385, "avatar_large": "https://cdn.v2ex.com/gravatar/14320c561666768f9c6e0da4bc881ef4?s=24&d=retro", "avatar_mini": "https://cdn.v2ex.com/gravatar/14320c561666768f9c6e0da4bc881ef4?s=24&d=retro", "location": null, "btc": null, "id": 251388}, "last_reply_by": "del1214", "last_touched": 1619168593, "title": "为什么 dell 显示器涨价了", "url": "https://www.v2ex.com/t/772660", "created": 1619146095, "content": "看中了 dell 2720qm 这款，准备给 mbp 使用。日常价格是 3999，这两天竟然涨价到 4199 了\r\n\r\n[京东自营]( https://item.jd.com/65719859135.html)，[官方旗舰店]( https://item.jd.com/100011317048.html)\r\n\r\n然后通过比价软件看到去年双十一价格最低，卖 3499 。今年为什么显示器涨价了，还是说因为 618 而提前涨价，什么时候购买最合适呢\r\n\r\n[![cO69Et.png]( https://z3.ax1x.com/2021/04/23/cO69Et.png)]( https://imgtu.com/i/cO69Et)", "content_rendered": "<p>看中了 dell 2720qm 这款，准备给 mbp 使用。日常价格是 3999，这两天竟然涨价到 4199 了</p>\n<p><a href=\"https://item.jd.com/65719859135.html\" rel=\"nofollow\">京东自营</a>，<a href=\"https://item.jd.com/100011317048.html\" rel=\"nofollow\">官方旗舰店</a></p>\n<p>然后通过比价软件看到去年双十一价格最低，卖 3499 。今年为什么显示器涨价了，还是说因为 618 而提前涨价，什么时候购买最合适呢</p>\n<p><a href=\"https://imgtu.com/i/cO69Et\" rel=\"nofollow\"><img alt=\"cO69Et.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://z3.ax1x.com/2021/04/23/cO69Et.png\"/></a></p>\n", "last_modified": 1619146113, "replies": 30, "id": 772660}]