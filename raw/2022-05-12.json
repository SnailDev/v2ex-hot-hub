[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 3135, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 827, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 537271, "username": "muyangren", "url": "https://www.v2ex.com/u/muyangren", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/65b7/101e/537271_mini.png?m=1632740413", "avatar_normal": "https://cdn.v2ex.com/avatar/65b7/101e/537271_normal.png?m=1632740413", "avatar_large": "https://cdn.v2ex.com/avatar/65b7/101e/537271_large.png?m=1632740413", "created": 1615538106, "last_modified": 1632740413}, "last_reply_by": "belin520", "last_touched": 1652335604, "title": "这一次，我要勇敢的讲出来，这一辈子最大的损失", "url": "https://www.v2ex.com/t/852227", "created": 1652258871, "deleted": 0, "content": "这是我第一次说出来这件事，我觉得这是我这一辈子最大的损失。\r\n\r\n2014 年在北京刚参加工作，工资 6000 元，每月入不敷出，日子紧巴巴过。\r\n\r\n作为一个南方人，在北京的亲戚朋友少的可怜。\r\n\r\n巧的是，我有两个高中同学也在北京，他两是情侣。\r\n\r\n男生是我高中同校不同班的，交情仅限于躲操场一起抽过几次烟，女生是我初中同学+高中同学。\r\n\r\n他们来我出租屋找过我一次，我们一起去了网吧玩了英雄联盟。\r\n\r\n对于一个人来北京，孤独了好几年的我来说，当时就把他们当成了好朋友。\r\n\r\n后面我们没有再见过。\r\n\r\n过去了 3 个月，这个男生找我借钱，5000 元，说什么交房租，过多久还我（具体我忘了）。\r\n\r\n我没犹豫，就借了（现在可以查到转账记录）。\r\n\r\n但是我当时没有钱啊，我一个月才 6000 ，我还要吃饭交房租。\r\n\r\n我真是傻啊，我竟然从信用卡里套现了 5000 元给了他，然后想着自己还信用卡（我真是一个小可爱）。\r\n\r\n至此，埋下了我一生中最大的坑。\r\n\r\n下个月信用卡 5000 元我还不上了，就找 POS 机套现进行还， 给了一些手续费。\r\n\r\n没想到，至此走进了深渊。\r\n\r\n也许是尝到了信用卡套现甜头，也许是无力偿还最早那一笔 5000 元，我又办了办几张其他银行的信用卡，越滚越多。\r\n\r\n16 年底的时候，大概欠下了 2 万多。\r\n\r\n那个男生没有还我钱，各种借口。\r\n\r\n当时工资也水涨船高，想着自己肯定能填好这个坑，\r\n\r\n染上了超前消费的坏习惯，信用卡办了 4 张，额度 20 多万。\r\n\r\n喜欢的东西就会去买，大笔消费，觉得信用卡里的额度就是自己的实力。\r\n\r\n信用卡还不上的时候互相套，最后越滚越多，滚到最后还不上了。\r\n\r\n办分期，办万用金，办花呗、借呗、白条、金条...\r\n\r\n唯一的好消息是我一直努力在工作，职位越来越高，收入越来越多。\r\n\r\n可是我还是入不敷出啊，当你染上了这个坏习惯的时候靠自己就很难上来了。\r\n\r\n19 年底，一算，自己欠了平安、浦发、招商、中心、民生、招商贷、好期贷、花呗、借呗、白条、金条共 80 万。\r\n\r\n我实在想不明白，这几年我最少挣了几百万，没存下钱，反而还欠下这么多。\r\n\r\n回到欠钱这件事，有一段时间，我一直逼这个男生还钱，可是每次都是下月，下周。\r\n\r\n陆陆续续还了我 3000 元。\r\n\r\n后来，我找了女生（我们是初中同学，更熟一点），得知已经分手，这男生借了很多人钱，有好多人找过她。\r\n\r\n现在是 22 年，这男生还欠我 1000 元没有还。\r\n\r\n过去了快 10 年，回首不忘来时路：\r\n\r\n1 、我错了人生中最好的几年时光，本来我可以早一些回到老家，陪伴老去的父母，陪伴离去的亲人，但是过去了快 10 年，现在还在填着以前的坑，只有等填完才能重头积攒，苦果自己在承受。\r\n\r\n2 、我没有把全部原因推给这个男生，没有他，或许我还会因为别的原因趟这个坑，我是那种经不住诱惑、管不住的性格。\r\n\r\n3 、19 年 10 月谈的女朋友，20 年 6 月坦白欠钱的事，在女朋友的帮助下（帮我梳理、控制欲望、制定长期计划），每月有规划的还款，现在还欠 20 多万，好消息是今年 7 月我就可以有结余，每月有存款了。\r\n\r\n4 、期间买了房、车、装修这几笔大的消费，也算是一点点安慰吧。\r\n\r\n5 、现在男生还有 1000 元没还我，我没有他身份证号，只有名字和手机号码，有什么合法手段能要回来钱？也不是 1000 元的事，就是我很憋屈，这么多年了。\r\n\r\n\r\n6 、如果要我的经验给你一些建议。看过一个视频，大概是从 1 岁到 80 岁，给前一年的自己中肯的建议，我印象很深刻，17 和 18 岁的人给前一年自己的建议是“不要办信用卡、有什么自己处理不了的事情请告诉父母”。\r\n\r\n7 、第一次说出这件事，不想被身边的人知道，希望大家以我为鉴。人类从历史里学到的唯一教训就是人类学不到任何教训。", "content_rendered": "<p>这是我第一次说出来这件事，我觉得这是我这一辈子最大的损失。</p>\n<p>2014 年在北京刚参加工作，工资 6000 元，每月入不敷出，日子紧巴巴过。</p>\n<p>作为一个南方人，在北京的亲戚朋友少的可怜。</p>\n<p>巧的是，我有两个高中同学也在北京，他两是情侣。</p>\n<p>男生是我高中同校不同班的，交情仅限于躲操场一起抽过几次烟，女生是我初中同学+高中同学。</p>\n<p>他们来我出租屋找过我一次，我们一起去了网吧玩了英雄联盟。</p>\n<p>对于一个人来北京，孤独了好几年的我来说，当时就把他们当成了好朋友。</p>\n<p>后面我们没有再见过。</p>\n<p>过去了 3 个月，这个男生找我借钱，5000 元，说什么交房租，过多久还我（具体我忘了）。</p>\n<p>我没犹豫，就借了（现在可以查到转账记录）。</p>\n<p>但是我当时没有钱啊，我一个月才 6000 ，我还要吃饭交房租。</p>\n<p>我真是傻啊，我竟然从信用卡里套现了 5000 元给了他，然后想着自己还信用卡（我真是一个小可爱）。</p>\n<p>至此，埋下了我一生中最大的坑。</p>\n<p>下个月信用卡 5000 元我还不上了，就找 POS 机套现进行还， 给了一些手续费。</p>\n<p>没想到，至此走进了深渊。</p>\n<p>也许是尝到了信用卡套现甜头，也许是无力偿还最早那一笔 5000 元，我又办了办几张其他银行的信用卡，越滚越多。</p>\n<p>16 年底的时候，大概欠下了 2 万多。</p>\n<p>那个男生没有还我钱，各种借口。</p>\n<p>当时工资也水涨船高，想着自己肯定能填好这个坑，</p>\n<p>染上了超前消费的坏习惯，信用卡办了 4 张，额度 20 多万。</p>\n<p>喜欢的东西就会去买，大笔消费，觉得信用卡里的额度就是自己的实力。</p>\n<p>信用卡还不上的时候互相套，最后越滚越多，滚到最后还不上了。</p>\n<p>办分期，办万用金，办花呗、借呗、白条、金条...</p>\n<p>唯一的好消息是我一直努力在工作，职位越来越高，收入越来越多。</p>\n<p>可是我还是入不敷出啊，当你染上了这个坏习惯的时候靠自己就很难上来了。</p>\n<p>19 年底，一算，自己欠了平安、浦发、招商、中心、民生、招商贷、好期贷、花呗、借呗、白条、金条共 80 万。</p>\n<p>我实在想不明白，这几年我最少挣了几百万，没存下钱，反而还欠下这么多。</p>\n<p>回到欠钱这件事，有一段时间，我一直逼这个男生还钱，可是每次都是下月，下周。</p>\n<p>陆陆续续还了我 3000 元。</p>\n<p>后来，我找了女生（我们是初中同学，更熟一点），得知已经分手，这男生借了很多人钱，有好多人找过她。</p>\n<p>现在是 22 年，这男生还欠我 1000 元没有还。</p>\n<p>过去了快 10 年，回首不忘来时路：</p>\n<p>1 、我错了人生中最好的几年时光，本来我可以早一些回到老家，陪伴老去的父母，陪伴离去的亲人，但是过去了快 10 年，现在还在填着以前的坑，只有等填完才能重头积攒，苦果自己在承受。</p>\n<p>2 、我没有把全部原因推给这个男生，没有他，或许我还会因为别的原因趟这个坑，我是那种经不住诱惑、管不住的性格。</p>\n<p>3 、19 年 10 月谈的女朋友，20 年 6 月坦白欠钱的事，在女朋友的帮助下（帮我梳理、控制欲望、制定长期计划），每月有规划的还款，现在还欠 20 多万，好消息是今年 7 月我就可以有结余，每月有存款了。</p>\n<p>4 、期间买了房、车、装修这几笔大的消费，也算是一点点安慰吧。</p>\n<p>5 、现在男生还有 1000 元没还我，我没有他身份证号，只有名字和手机号码，有什么合法手段能要回来钱？也不是 1000 元的事，就是我很憋屈，这么多年了。</p>\n<p>6 、如果要我的经验给你一些建议。看过一个视频，大概是从 1 岁到 80 岁，给前一年的自己中肯的建议，我印象很深刻，17 和 18 岁的人给前一年自己的建议是“不要办信用卡、有什么自己处理不了的事情请告诉父母”。</p>\n<p>7 、第一次说出这件事，不想被身边的人知道，希望大家以我为鉴。人类从历史里学到的唯一教训就是人类学不到任何教训。</p>\n", "last_modified": 1652258871, "replies": 119, "id": 852227}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c9f0/f895/8_large.png?m=1630643991", "name": "iphone", "avatar_normal": "https://cdn.v2ex.com/navatar/c9f0/f895/8_normal.png?m=1630643991", "title": "iPhone", "url": "https://www.v2ex.com/go/iphone", "topics": 9346, "footer": "这里绝不讨论如何获得 iPhone 盗版软件、iTunes 黑卡之类。", "header": "Say hello to the future.", "title_alternative": "iPhone", "avatar_mini": "https://cdn.v2ex.com/navatar/c9f0/f895/8_mini.png?m=1630643991", "stars": 2879, "aliases": [], "root": false, "id": 8, "parent_node_name": "apple"}, "member": {"id": 545546, "username": "amirobotics", "url": "https://www.v2ex.com/u/amirobotics", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/2d9845788c3deb1bb10e698c619436b4?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/2d9845788c3deb1bb10e698c619436b4?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/2d9845788c3deb1bb10e698c619436b4?s=73&d=retro", "created": 1621221712, "last_modified": 1638843613}, "last_reply_by": "seaiaddca", "last_touched": 1652334832, "title": "IOS 的 RAM 4GB 是否足够使用？", "url": "https://www.v2ex.com/t/852189", "created": 1652250732, "deleted": 0, "content": "目前用安卓，RAM 6GB 罢了。因为会一直杀后台了，所以打算换台电话。\r\n\r\n很多人说 IOS 的内存管理与安卓不一样，使用打算入手 iphone13 。\r\n\r\n想请问大家，IOS 的 RAM 4GB 是否足够使用？是否杀后台？是否会卡顿？", "content_rendered": "<p>目前用安卓，RAM 6GB 罢了。因为会一直杀后台了，所以打算换台电话。</p>\n<p>很多人说 IOS 的内存管理与安卓不一样，使用打算入手 iphone13 。</p>\n<p>想请问大家，IOS 的 RAM 4GB 是否足够使用？是否杀后台？是否会卡顿？</p>\n", "last_modified": 1652250732, "replies": 91, "id": 852189}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/093f/65e0/59_large.png?m=1615956453", "name": "random", "avatar_normal": "https://cdn.v2ex.com/navatar/093f/65e0/59_normal.png?m=1615956453", "title": "随想", "url": "https://www.v2ex.com/go/random", "topics": 3191, "footer": "", "header": "有的时候，可以停下来找找灵感，然后再继续。", "title_alternative": "Random", "avatar_mini": "https://cdn.v2ex.com/navatar/093f/65e0/59_mini.png?m=1615956453", "stars": 1032, "aliases": [], "root": false, "id": 59, "parent_node_name": "v2ex"}, "member": {"id": 355191, "username": "fiypig", "url": "https://www.v2ex.com/u/fiypig", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/9578/84e6/355191_mini.png?m=1640779639", "avatar_normal": "https://cdn.v2ex.com/avatar/9578/84e6/355191_normal.png?m=1640779639", "avatar_large": "https://cdn.v2ex.com/avatar/9578/84e6/355191_large.png?m=1640779639", "created": 1539221334, "last_modified": 1640779639}, "last_reply_by": "fiypig", "last_touched": 1652334823, "title": "这人生是少奋斗很多了嘛", "url": "https://www.v2ex.com/t/852183", "created": 1652249557, "deleted": 0, "content": "快结婚了,然后老婆家快拆迁了, 接下来主要任务就是要宝宝了,多一个宝宝就多一份福利呢,打工有个屁用,就我那烂代码敲到死都买不起房子...", "content_rendered": "<p>快结婚了,然后老婆家快拆迁了, 接下来主要任务就是要宝宝了,多一个宝宝就多一份福利呢,打工有个屁用,就我那烂代码敲到死都买不起房子...</p>\n", "last_modified": 1652249557, "replies": 87, "id": 852183}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/7504/adad/881_large.png?m=1650095191", "name": "vue", "avatar_normal": "https://cdn.v2ex.com/navatar/7504/adad/881_normal.png?m=1650095191", "title": "Vue.js", "url": "https://www.v2ex.com/go/vue", "topics": 809, "footer": "", "header": "The Progressive JavaScript Framework", "title_alternative": "Vue.js", "avatar_mini": "https://cdn.v2ex.com/navatar/7504/adad/881_mini.png?m=1650095191", "stars": 1130, "aliases": [], "root": false, "id": 881, "parent_node_name": "fe"}, "member": {"id": 346445, "username": "pytth", "url": "https://www.v2ex.com/u/pytth", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/657f/7769/346445_mini.png?m=1652256620", "avatar_normal": "https://cdn.v2ex.com/avatar/657f/7769/346445_normal.png?m=1652256620", "avatar_large": "https://cdn.v2ex.com/avatar/657f/7769/346445_large.png?m=1652256620", "created": 1535859862, "last_modified": 1652256620}, "last_reply_by": "NoKey", "last_touched": 1652334927, "title": "初次上手 Vue.js 开发效率确实高！从此跟 Jquery 说拜拜！", "url": "https://www.v2ex.com/t/852221", "created": 1652257738, "deleted": 0, "content": "一些看法\r\n---\r\n在 V2 看了一些吐槽 Vue 的项目构建的一些文章，有说 node_module 目录太大，webpack 等工具的缺点等问题，但这就是构建 Vue 项目所需的一些操作，嫌麻烦，嫌笨重，可以用其他办法。也可以用官方脚手架等方式，还有新兴的 Vite ，还可以用传统的<script>标签引入 Vue.js 文件去写。\r\n\r\n当然这个都是看需求的，如果一个非常简单的页面，用不上太多的 API ，其实用传统的方法去写也是可以的。本人 html 也写了几年，Vue 还真没有认真去学过，偶尔搜一些相关文章看看，也没有认真去写过。\r\n\r\n趋势\r\n---\r\n但越来越多平台、网站已经向单页应用的趋势发展，浏览器无刷新，路由等方式，这种页面体验起来也是非常舒服的，Vue 、React 都是目前构建项目的主流。\r\n\r\n有些人觉得学习成本挺高的，还不如直接 jquery 操作 Dom 实在一些,至少不需要将时间和经历花在环境调试和构建。实际上这些都是有很多解决方案的，不想那么复杂就直接 Vite 也可以快速构建。\r\n\r\n初体验\r\n---\r\n顺着 Vue.js 官网的文档，我还是尝试先用传统的引入 Vue.js 文件的方式，花了 2 个上午（因为下午要忙工作），简单得撸了一个项目熟悉一下 Vue 的特性。与 jquery 不同的是，jquery 是操作 Dom ，而 Vue 是操作数据。\r\n\r\n<img src=\"https://ucc.alicdn.com/pic/developer-ecology/f55416cd206942efa8d8103a993ccf3e.png\" />\r\n\r\n<img src=\"https://ucc.alicdn.com/pic/developer-ecology/c1ccb844b5984b2eb40d9bd323140fb3.gif\" />\r\n\r\n后面还是需要认认真真学一下脚手架、Vite 等方式构建项目。。。", "content_rendered": "<h2>一些看法</h2>\n<p>在 V2 看了一些吐槽 Vue 的项目构建的一些文章，有说 node_module 目录太大，webpack 等工具的缺点等问题，但这就是构建 Vue 项目所需的一些操作，嫌麻烦，嫌笨重，可以用其他办法。也可以用官方脚手架等方式，还有新兴的 Vite ，还可以用传统的&lt;script&gt;标签引入 Vue.js 文件去写。</p>\n<p>当然这个都是看需求的，如果一个非常简单的页面，用不上太多的 API ，其实用传统的方法去写也是可以的。本人 html 也写了几年，Vue 还真没有认真去学过，偶尔搜一些相关文章看看，也没有认真去写过。</p>\n<h2>趋势</h2>\n<p>但越来越多平台、网站已经向单页应用的趋势发展，浏览器无刷新，路由等方式，这种页面体验起来也是非常舒服的，Vue 、React 都是目前构建项目的主流。</p>\n<p>有些人觉得学习成本挺高的，还不如直接 jquery 操作 Dom 实在一些,至少不需要将时间和经历花在环境调试和构建。实际上这些都是有很多解决方案的，不想那么复杂就直接 Vite 也可以快速构建。</p>\n<h2>初体验</h2>\n<p>顺着 Vue.js 官网的文档，我还是尝试先用传统的引入 Vue.js 文件的方式，花了 2 个上午（因为下午要忙工作），简单得撸了一个项目熟悉一下 Vue 的特性。与 jquery 不同的是，jquery 是操作 Dom ，而 Vue 是操作数据。</p>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://ucc.alicdn.com/pic/developer-ecology/f55416cd206942efa8d8103a993ccf3e.png\"/>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://ucc.alicdn.com/pic/developer-ecology/c1ccb844b5984b2eb40d9bd323140fb3.gif\"/>\n<p>后面还是需要认认真真学一下脚手架、Vite 等方式构建项目。。。</p>\n", "last_modified": 1652262512, "replies": 84, "id": 852221}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1651385949", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1651385949", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 48706, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1651385949", "stars": 7814, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 482153, "username": "Joker123456789", "url": "https://www.v2ex.com/u/Joker123456789", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/47d3/3395/482153_mini.png?m=1596374150", "avatar_normal": "https://cdn.v2ex.com/avatar/47d3/3395/482153_normal.png?m=1596374150", "avatar_large": "https://cdn.v2ex.com/avatar/47d3/3395/482153_large.png?m=1596374150", "created": 1586241649, "last_modified": 1596374150}, "last_reply_by": "lisongeee", "last_touched": 1652335669, "title": "关于 Java 很啰嗦的问题", "url": "https://www.v2ex.com/t/852381", "created": 1652329157, "deleted": 0, "content": "我先声明啊，我不是来吹捧 java 的，我只是想说一个事实，编程语言 没有谁绝对的碾压谁，真遇到了实际业务需求，写出来的代码量绝对是半斤八两。\r\n\r\n我希望大家 在 吐槽一门语言的时候，可以理性一点，不要瞎喷。这篇文章的用意就在于此。\r\n\r\n还有一点，我用 go 来比较，是因为 go 擅长的场景，跟 java 有一定的重叠，有很多公司都用 go 开发 web 。绝对没有对 go 不敬的意思。\r\n\r\n\r\n## 首先目录问题\r\n![image.png]( https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b75ecce167334d35a93f2262d21a98a7~tplv-k3u1fbpfcp-watermark.image?)\r\n\r\n总结下来，从工作量的角度来看，就是多了一个倒置的域名而已，而且只需要花建一层目录的时间，并且这个倒置的域名 是有他的意义在里面的，你们可以把他看做是这个\r\n\r\n```go\r\n// go 语言里的 import ，前面也有一个域名+项目名 来确定唯一性，包名里的倒置域名就是起这个作用的\r\nimport \"github.com/scan-util/xxx/xxx\"\r\n```\r\n\r\n还有很重要的一点，你们喷来喷去的那些多余的目录结构，在我们的观念里 根本就不存在，因为从来没有手工去创建过，要不是你们来吐槽，我们还真想不到这一点。\r\n\r\n不是因为 习惯了，而是真的从来没有为他们花过 5 秒钟以上的时间。有的连一毫秒都没花过。\r\n\r\n## 方法语法\r\ngo\r\n```go\r\nfunc BytesToString(val []byte) string\r\n```\r\n\r\njava\r\n```java\r\npublic String BytesToString(byte[] val)\r\n```\r\n我真没看出来多了什么东西\r\n\r\n## 定义变量\r\n\r\ngo\r\n\r\n```go\r\nname := \"张三\";\r\n\r\nvar map = make(map[string]interface{})\r\nvar array = make(string[], 10);\r\n```\r\n\r\njava\r\n\r\n```java\r\nString name = \"张三\";\r\n\r\nMap<String, Object> map = new HashMap<>();\r\nString[] array = new String[10];\r\n\r\n```\r\n好像多了点东西，又好像没多什么。\r\n\r\n## 循环\r\n\r\ngo\r\n\r\n```go\r\nfor(i:=0;i<100;i++){\r\n\r\n}\r\n\r\nfor(i<100){\r\n\r\n}\r\n```\r\n\r\njava\r\n\r\n```java\r\nfor(int i=0;i<100;i++){\r\n\r\n}\r\n\r\nwhile(i<100){\r\n\r\n}\r\n```\r\n\r\n确实多了几个字母。\r\n\r\n## 创建类\r\n\r\ngo\r\n\r\n我知道这叫结构体，跟类是两码事，但是 go 就是用它来兼容 oop 的，所以我只能用它来举例子，因为没有其他语法可以实现 oop 了\r\n```go\r\ntype DemoParam struct {\r\n    name string\r\n}\r\n\r\nfunc (demoParam *DemoParam) FormValues(key string) []string {\r\n}\r\n```\r\n\r\njava\r\n\r\n```java\r\nclass DemoParam {\r\n    public String name;\r\n    \r\n    public String[] FormValues(String key){\r\n        \r\n    }\r\n}\r\n```\r\n\r\n字数上相差多少，我是懒得数了，但是你们真的不觉得 java 的结构更清晰吗？ 其他的继承，多态 我就不拿出来说了，go 基本上是 用的 c 的编程思想，oop 只是个兼容， 所以用 java 来跟他比 oop 没什么可比性。因为是两个方向。\r\n\r\n## 异常处理\r\n\r\ngo\r\n\r\n```go\r\n\r\nfunc testFunction(paramStr string) (string, error) {\r\n    if xxx {\r\n        return Errors.New(\"xxxx\");\r\n    }\r\n}\r\n\r\nparamStr, err := testFunction(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n```\r\n\r\njava\r\n```java\r\npublic String testFunction(String paramStr){\r\n    if (xxx) {\r\n        throw new Execption(\"xxx\");\r\n    }\r\n}\r\n\r\ntry {\r\n    String paramStr = testFunction(\"ok\");\r\n} catch(Execption e){\r\n    log.Println(e.getMessage); \r\n}\r\n```\r\n\r\n这个看起来 go 好像 舒服一点，但是，实际场景下 go 经常是这种姿势\r\n```go\r\nparamStr, err := testFunction(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n\r\nparamStr, err := testFunction2(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n\r\nparamStr, err := testFunction3(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n```\r\n\r\n而 java 还是只需要这样\r\n```java\r\ntry {\r\n    String paramStr = testFunction(\"ok\");\r\n    String paramStr = testFunction2(\"ok\");\r\n    String paramStr = testFunction3(\"ok\");\r\n} catch(Execption e){\r\n    log.Println(e.getMessage); \r\n}\r\n```\r\n\r\n并且这是 经过人为判断后，返回的错误提示，如果是意外的异常呢？ go 里面叫 panic ，java 只要用 try catch 包住了 就可以捕获，但是 go 需要用 defer ，而且一旦抛出异常就意味着这个函数结束了，你如果想在出异常后，处理一下 然后继续往下走，go 会非常的麻烦。\r\n\r\n## 拆箱\r\n\r\ngo\r\n\r\n```go\r\n// 如果有一个 interface{} 类型的变量 a ，想转成 int\r\n// 你必须明确的知道，他装箱前就是 int ，不然根本没法拆，必须做一下类型判断。\r\n// 我之前在写框架的时候 就被折磨的够呛，一大堆不必要的 if\r\n```\r\n\r\njava\r\n```java\r\n// 不管装箱前是什么，只要他的值是一个整数\r\n// 无论是 1 ， 还是 \"1\", 都可以这么转\r\nInteger aInt = Integer.parseInteger(a.toString());\r\n\r\n// 也可以直接拆成 String\r\na.toString();\r\n```\r\n\r\n## 如果你们还不服，那很好办，\r\n\r\n你们出一个需求给我，我用 java ，你们用 go ，nodejs ，python ，php 随便什么语言，最后来比比 谁的代码少一些。 我敢说，绝对半斤八两，不可能有谁碾压谁的。\r\n\r\n而且还有一定的概率，java 在 丰富的生态+强大官方库的 加持下，可以更快完成。", "content_rendered": "<p>我先声明啊，我不是来吹捧 java 的，我只是想说一个事实，编程语言 没有谁绝对的碾压谁，真遇到了实际业务需求，写出来的代码量绝对是半斤八两。</p>\n<p>我希望大家 在 吐槽一门语言的时候，可以理性一点，不要瞎喷。这篇文章的用意就在于此。</p>\n<p>还有一点，我用 go 来比较，是因为 go 擅长的场景，跟 java 有一定的重叠，有很多公司都用 go 开发 web 。绝对没有对 go 不敬的意思。</p>\n<h2>首先目录问题</h2>\n<p><img alt=\"image.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b75ecce167334d35a93f2262d21a98a7%7Etplv-k3u1fbpfcp-watermark.image?\"/></p>\n<p>总结下来，从工作量的角度来看，就是多了一个倒置的域名而已，而且只需要花建一层目录的时间，并且这个倒置的域名 是有他的意义在里面的，你们可以把他看做是这个</p>\n<pre><code class=\"language-go\">// go 语言里的 import ，前面也有一个域名+项目名 来确定唯一性，包名里的倒置域名就是起这个作用的\nimport \"github.com/scan-util/xxx/xxx\"\n</code></pre>\n<p>还有很重要的一点，你们喷来喷去的那些多余的目录结构，在我们的观念里 根本就不存在，因为从来没有手工去创建过，要不是你们来吐槽，我们还真想不到这一点。</p>\n<p>不是因为 习惯了，而是真的从来没有为他们花过 5 秒钟以上的时间。有的连一毫秒都没花过。</p>\n<h2>方法语法</h2>\n<p>go</p>\n<pre><code class=\"language-go\">func BytesToString(val []byte) string\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">public String BytesToString(byte[] val)\n</code></pre>\n<p>我真没看出来多了什么东西</p>\n<h2>定义变量</h2>\n<p>go</p>\n<pre><code class=\"language-go\">name := \"张三\";\n\nvar map = make(map[string]interface{})\nvar array = make(string[], 10);\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">String name = \"张三\";\n\nMap&lt;String, Object&gt; map = new HashMap&lt;&gt;();\nString[] array = new String[10];\n\n</code></pre>\n<p>好像多了点东西，又好像没多什么。</p>\n<h2>循环</h2>\n<p>go</p>\n<pre><code class=\"language-go\">for(i:=0;i&lt;100;i++){\n\n}\n\nfor(i&lt;100){\n\n}\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">for(int i=0;i&lt;100;i++){\n\n}\n\nwhile(i&lt;100){\n\n}\n</code></pre>\n<p>确实多了几个字母。</p>\n<h2>创建类</h2>\n<p>go</p>\n<p>我知道这叫结构体，跟类是两码事，但是 go 就是用它来兼容 oop 的，所以我只能用它来举例子，因为没有其他语法可以实现 oop 了</p>\n<pre><code class=\"language-go\">type DemoParam struct {\n    name string\n}\n\nfunc (demoParam *DemoParam) FormValues(key string) []string {\n}\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">class DemoParam {\n    public String name;\n    \n    public String[] FormValues(String key){\n        \n    }\n}\n</code></pre>\n<p>字数上相差多少，我是懒得数了，但是你们真的不觉得 java 的结构更清晰吗？ 其他的继承，多态 我就不拿出来说了，go 基本上是 用的 c 的编程思想，oop 只是个兼容， 所以用 java 来跟他比 oop 没什么可比性。因为是两个方向。</p>\n<h2>异常处理</h2>\n<p>go</p>\n<pre><code class=\"language-go\">\nfunc testFunction(paramStr string) (string, error) {\n    if xxx {\n        return Errors.New(\"xxxx\");\n    }\n}\n\nparamStr, err := testFunction(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">public String testFunction(String paramStr){\n    if (xxx) {\n        throw new Execption(\"xxx\");\n    }\n}\n\ntry {\n    String paramStr = testFunction(\"ok\");\n} catch(Execption e){\n    log.Println(e.getMessage); \n}\n</code></pre>\n<p>这个看起来 go 好像 舒服一点，但是，实际场景下 go 经常是这种姿势</p>\n<pre><code class=\"language-go\">paramStr, err := testFunction(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n\nparamStr, err := testFunction2(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n\nparamStr, err := testFunction3(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n</code></pre>\n<p>而 java 还是只需要这样</p>\n<pre><code class=\"language-java\">try {\n    String paramStr = testFunction(\"ok\");\n    String paramStr = testFunction2(\"ok\");\n    String paramStr = testFunction3(\"ok\");\n} catch(Execption e){\n    log.Println(e.getMessage); \n}\n</code></pre>\n<p>并且这是 经过人为判断后，返回的错误提示，如果是意外的异常呢？ go 里面叫 panic ，java 只要用 try catch 包住了 就可以捕获，但是 go 需要用 defer ，而且一旦抛出异常就意味着这个函数结束了，你如果想在出异常后，处理一下 然后继续往下走，go 会非常的麻烦。</p>\n<h2>拆箱</h2>\n<p>go</p>\n<pre><code class=\"language-go\">// 如果有一个 interface{} 类型的变量 a ，想转成 int\n// 你必须明确的知道，他装箱前就是 int ，不然根本没法拆，必须做一下类型判断。\n// 我之前在写框架的时候 就被折磨的够呛，一大堆不必要的 if\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">// 不管装箱前是什么，只要他的值是一个整数\n// 无论是 1 ， 还是 \"1\", 都可以这么转\nInteger aInt = Integer.parseInteger(a.toString());\n\n// 也可以直接拆成 String\na.toString();\n</code></pre>\n<h2>如果你们还不服，那很好办，</h2>\n<p>你们出一个需求给我，我用 java ，你们用 go ，nodejs ，python ，php 随便什么语言，最后来比比 谁的代码少一些。 我敢说，绝对半斤八两，不可能有谁碾压谁的。</p>\n<p>而且还有一定的概率，java 在 丰富的生态+强大官方库的 加持下，可以更快完成。</p>\n", "last_modified": 1652329157, "replies": 73, "id": 852381}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 3135, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 827, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 383636, "username": "HOU", "url": "https://www.v2ex.com/u/HOU", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/706dd50cfe5b19a125eebb7d98810140?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/706dd50cfe5b19a125eebb7d98810140?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/706dd50cfe5b19a125eebb7d98810140?s=73&d=retro", "created": 1550066114, "last_modified": 1644456678}, "last_reply_by": "sacuba", "last_touched": 1652335588, "title": "关于 e 招贷，请教一下大家", "url": "https://www.v2ex.com/t/852356", "created": 1652324618, "deleted": 0, "content": "招行的老打电话，以前不爱接，今天接了下有点心动：\r\n\r\n最高有 20W 额度，可以自定义额度，分 36 ，24 或 18 期还\r\n\r\n假设贷款 10W, 分 36 期，则每期还款（本金加 2 折手续费）：2777+135=2912\r\n\r\n算了下年化只有 3%，很低啊，大家有谁办过这个，有什么坑没 ?", "content_rendered": "<p>招行的老打电话，以前不爱接，今天接了下有点心动：</p>\n<p>最高有 20W 额度，可以自定义额度，分 36 ，24 或 18 期还</p>\n<p>假设贷款 10W, 分 36 期，则每期还款（本金加 2 折手续费）：2777+135=2912</p>\n<p>算了下年化只有 3%，很低啊，大家有谁办过这个，有什么坑没 ?</p>\n", "last_modified": 1652324618, "replies": 59, "id": 852356}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4e73/2ced/26_large.png?m=1584288945", "name": "hangzhou", "avatar_normal": "https://cdn.v2ex.com/navatar/4e73/2ced/26_normal.png?m=1584288945", "title": "杭州", "url": "https://www.v2ex.com/go/hangzhou", "topics": 1743, "footer": "", "header": "", "title_alternative": "Hangzhou", "avatar_mini": "https://cdn.v2ex.com/navatar/4e73/2ced/26_mini.png?m=1584288945", "stars": 1462, "aliases": [], "root": false, "id": 26, "parent_node_name": "cn"}, "member": {"id": 341739, "username": "blurh11E27", "url": "https://www.v2ex.com/u/blurh11E27", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/9626/727a/341739_mini.png?m=1649906254", "avatar_normal": "https://cdn.v2ex.com/avatar/9626/727a/341739_normal.png?m=1649906254", "avatar_large": "https://cdn.v2ex.com/avatar/9626/727a/341739_large.png?m=1649906254", "created": 1534402034, "last_modified": 1649906254}, "last_reply_by": "cnkuner", "last_touched": 1652334877, "title": "不知道我还能不能顶的住。", "url": "https://www.v2ex.com/t/852343", "created": 1652322796, "deleted": 0, "content": "如题，资金链断裂 ，杭州 6 点有哪些兼职，搬砖都行大家有没有兼职群 ，给我推一下。谢谢", "content_rendered": "<p>如题，资金链断裂 ，杭州 6 点有哪些兼职，搬砖都行大家有没有兼职群 ，给我推一下。谢谢</p>\n", "last_modified": 1652322796, "replies": 57, "id": 852343}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1650636020", "name": "career", "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1650636020", "title": "职场话题", "url": "https://www.v2ex.com/go/career", "topics": 13055, "footer": "", "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。", "title_alternative": "Career", "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1650636020", "stars": 2346, "aliases": [], "root": false, "id": 770, "parent_node_name": "work"}, "member": {"id": 559126, "username": "javaisthebest", "url": "https://www.v2ex.com/u/javaisthebest", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/2271535d90c3c18c52c61750ec013327?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/2271535d90c3c18c52c61750ec013327?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/2271535d90c3c18c52c61750ec013327?s=73&d=retro", "created": 1634719573, "last_modified": 1634719573}, "last_reply_by": "Immortan", "last_touched": 1652335137, "title": "发个帖，关于去 Shopee 新加坡的问题", "url": "https://www.v2ex.com/t/852240", "created": 1652262231, "deleted": 0, "content": "和 hrbp 沟通，走了内部流程。\r\n\r\n告知可以让我 trans 到坡县\r\n\r\n现在自己有点犹豫了。\r\n\r\n大概就是爱情和事业有了冲突。\r\n\r\n各位老哥们能给点意见吗？", "content_rendered": "<p>和 hrbp 沟通，走了内部流程。</p>\n<p>告知可以让我 trans 到坡县</p>\n<p>现在自己有点犹豫了。</p>\n<p>大概就是爱情和事业有了冲突。</p>\n<p>各位老哥们能给点意见吗？</p>\n", "last_modified": 1652263404, "replies": 56, "id": 852240}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 184620, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340", "stars": 3473, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 278648, "username": "jimmyczm", "url": "https://www.v2ex.com/u/jimmyczm", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/14bdab69067fb84aea64934382bc1ad8?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/14bdab69067fb84aea64934382bc1ad8?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/14bdab69067fb84aea64934382bc1ad8?s=73&d=retro", "created": 1514879441, "last_modified": 1652253386}, "last_reply_by": "v2kt", "last_touched": 1652333102, "title": "有没有什么清热解毒的良方啊，一吃油炸的就热气", "url": "https://www.v2ex.com/t/852197", "created": 1652253690, "deleted": 0, "content": "一吃油炸煎炒的吃多了就热气，比较明显的是晚上没那么容易入睡，要么就是脸上容易长痘痘。\r\n平时吃众生丸，但感觉见效比较慢也比较差\r\n有没有其他良方推荐呢，或者有医院医生推荐也行\r\n坐标深圳，广州深圳有好的医院都行。\r\n睡不着真的很烦，发际线越来越靠后了，但是吃不了好吃的也很苦恼", "content_rendered": "一吃油炸煎炒的吃多了就热气，比较明显的是晚上没那么容易入睡，要么就是脸上容易长痘痘。<br />平时吃众生丸，但感觉见效比较慢也比较差<br />有没有其他良方推荐呢，或者有医院医生推荐也行<br />坐标深圳，广州深圳有好的医院都行。<br />睡不着真的很烦，发际线越来越靠后了，但是吃不了好吃的也很苦恼", "last_modified": 1652253690, "replies": 56, "id": 852197}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1651385949", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1651385949", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 48706, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1651385949", "stars": 7814, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 322243, "username": "nnegier", "url": "https://www.v2ex.com/u/nnegier", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/00b9dc80a372050eec8fbfa5200a6186?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/00b9dc80a372050eec8fbfa5200a6186?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/00b9dc80a372050eec8fbfa5200a6186?s=73&d=retro", "created": 1528799475, "last_modified": 1649477449}, "last_reply_by": "0x2CA", "last_touched": 1652309464, "title": "最近有一个疑问，跨平台不是一直都有吗，就是 H5 这个呀，为什么还要弄出 Flutter 这些呢", "url": "https://www.v2ex.com/t/852191", "created": 1652250876, "deleted": 0, "content": "我并没有用过 Flutter 等跨平台方案，也许正因如此才有此问吧。我们暂时不讨论性能这一块儿吧，我也不知道那些跨平台方案的底层实现。感觉也有可能是因为要和原生系统的 API 进行交互，但这个我觉得也不是太大问题，写一些通用接口就好了。", "content_rendered": "我并没有用过 Flutter 等跨平台方案，也许正因如此才有此问吧。我们暂时不讨论性能这一块儿吧，我也不知道那些跨平台方案的底层实现。感觉也有可能是因为要和原生系统的 API 进行交互，但这个我觉得也不是太大问题，写一些通用接口就好了。", "last_modified": 1652251067, "replies": 55, "id": 852191}]