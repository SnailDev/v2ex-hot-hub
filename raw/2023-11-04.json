[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/dc56/8979/804_large.png?m=1643850384", "name": "mmm", "avatar_normal": "https://cdn.v2ex.com/navatar/dc56/8979/804_normal.png?m=1643850384", "title": "买买买", "url": "https://www.v2ex.com/go/mmm", "topics": 557, "footer": "", "header": "如果你最近买了某个有点点奢侈，但是又非常酷的东西，那就发到这个节点来交（xia）流（du）一下吧", "title_alternative": "Buy Buy Buy", "avatar_mini": "https://cdn.v2ex.com/navatar/dc56/8979/804_mini.png?m=1643850384", "stars": 348, "aliases": [], "root": false, "id": 804, "parent_node_name": "internet"}, "member": {"id": 28162, "username": "dvbs2000", "url": "https://www.v2ex.com/u/dvbs2000", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/89fb/52e6/28162_mini.png?m=1612246402", "avatar_normal": "https://cdn.v2ex.com/avatar/89fb/52e6/28162_normal.png?m=1612246402", "avatar_large": "https://cdn.v2ex.com/avatar/89fb/52e6/28162_large.png?m=1612246402", "created": 1350261667, "last_modified": 1612246402}, "last_reply_by": "Pig930", "last_touched": 1699048150, "title": "请问各位有什么反复购买过的东西，觉得还不错的?", "url": "https://www.v2ex.com/t/988143", "created": 1698977925, "deleted": 0, "content": "比如我买了 100 多块钱国产防 airpods 觉得不错\r\n给家人每人买了一个\r\n大家都很满意\r\n\r\n复购这个行为能说明对该产品最大的认可。", "content_rendered": "<p>比如我买了 100 多块钱国产防 airpods 觉得不错\n给家人每人买了一个\n大家都很满意</p>\n<p>复购这个行为能说明对该产品最大的认可。</p>\n", "last_modified": 1699007470, "replies": 257, "id": 988143}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/d2dd/ea18/73_large.png?m=1643850465", "name": "typography", "avatar_normal": "https://cdn.v2ex.com/navatar/d2dd/ea18/73_normal.png?m=1643850465", "title": "字体排印", "url": "https://www.v2ex.com/go/typography", "topics": 239, "footer": "", "header": "", "title_alternative": "Typography", "avatar_mini": "https://cdn.v2ex.com/navatar/d2dd/ea18/73_mini.png?m=1643850465", "stars": 419, "aliases": [], "root": false, "id": 73, "parent_node_name": "design"}, "member": {"id": 338899, "username": "coderMonkey", "url": "https://www.v2ex.com/u/coderMonkey", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/8fb7bccdc9559120f4df9bda6c74b33b?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/8fb7bccdc9559120f4df9bda6c74b33b?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/8fb7bccdc9559120f4df9bda6c74b33b?s=73&d=retro", "created": 1533538648, "last_modified": 1691552128}, "last_reply_by": "iomect", "last_touched": 1699041590, "title": "好奇大家写代码都用的什么字体", "url": "https://www.v2ex.com/t/988286", "created": 1698993627, "deleted": 0, "content": "Jetbrains Mono 已经快看腻了,主题用的 one-dark ，也有点审美疲劳了。。\r\n https://i.imgur.com/JPgegsK.png", "content_rendered": "Jetbrains Mono 已经快看腻了,主题用的 one-dark ，也有点审美疲劳了。。<br /> <a target=\"_blank\" href=\"https://i.imgur.com/JPgegsK.png\" rel=\"nofollow noopener\" target=\"_blank\"><img src=\"https://i.imgur.com/JPgegsK.png\" class=\"embedded_image\" rel=\"noreferrer\"></a>", "last_modified": 1699007629, "replies": 110, "id": 988286}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/f61d/6947/375_large.png?m=1658910399", "name": "go", "avatar_normal": "https://cdn.v2ex.com/navatar/f61d/6947/375_normal.png?m=1658910399", "title": "Go 编程语言", "url": "https://www.v2ex.com/go/go", "topics": 2836, "footer": "", "header": "Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。", "title_alternative": "The Go Programming Language", "avatar_mini": "https://cdn.v2ex.com/navatar/f61d/6947/375_mini.png?m=1658910399", "stars": 3735, "aliases": [], "root": false, "id": 375, "parent_node_name": "programming"}, "member": {"id": 452617, "username": "limpo", "url": "https://www.v2ex.com/u/limpo", "website": "https://github.com/limpo1989", "twitter": "", "psn": "", "github": "limpo1989", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/4364/f739/452617_mini.png?m=1698505494", "avatar_normal": "https://cdn.v2ex.com/avatar/4364/f739/452617_normal.png?m=1698505494", "avatar_large": "https://cdn.v2ex.com/avatar/4364/f739/452617_large.png?m=1698505494", "avatar_xlarge": "https://cdn.v2ex.com/avatar/4364/f739/452617_xlarge.png?m=1698505494", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/4364/f739/452617_xlarge.png?m=1698505494", "created": 1573616902, "last_modified": 1698505494}, "last_reply_by": "sgwk", "last_touched": 1699014376, "title": "Go-Spring 轻装上阵，重新出发 v1.0.0 !", "url": "https://www.v2ex.com/t/988146", "created": 1698978313, "deleted": 0, "content": "## 前言\r\n\r\n多年前曾经梦想着能有一天能在 Go 语言中使用上 Spring 那样强大的框架，幸运的是我找到了[go-spring]( https://github.com/go-spring/go-spring)，一款类似 Spring 的库，我很喜欢它，并且在我的项目中深度使用它，它给我带来了非常酷的编程体验。  \r\n\r\n然而很不幸的是最近 go-spring 停止更新了(最近的一次提交停留在九个月之前)，一些问题无法得到有效的解决，因此我决定创建一个基于 go-spring 的开源库，我为它修复了一系列 bug ，并添加了一些新得特性，并对代码结构进行了简化，将外部生态从核心库中移除，仅保留核心功能，外部生态预计将来将作为独立的仓库存在，我将持续继续将它维护下去，也希望有感兴趣的人可以一起参与进来一起持续开发它。\r\n\r\n\r\n仓库地址: https://github.com/go-spring-projects/go-spring\r\n\r\n## 特性\r\n\r\n* **IoC 容器**: 实现了基于反射的控制反转(IoC)容器，支持结构体、函数和常量的注入。这意味着你可以使用' autowired '标签来自动注入依赖，而不必手动管理它们。\r\n* **配置管理**: 受 Spring 的 @Value 注释的启发，Go-Spring 允许您从多个源(如环境变量、文件、命令行参数等)获取配置项。这为配置管理带来了前所未有的灵活性。\r\n* **配置验证器**: 通过支持自定义验证器扩展扩展了其健壮的配置管理功能。这使您能够对属性执行有效性检查，确保仅将有效的配置应用于您的应用程序。\r\n* **结构化日志**: 使用标准库 slog 提供内置日志记录器支持，以实现有效和简化的日志记录。这种增强提供了清晰、简洁和结构良好的日志信息，有助于系统调试和性能监视。\r\n* **动态属性**: 提供动态属性刷新功能，让您无需重新启动应用程序即可动态更新应用程序属性。它满足了需要高可用性和实时响应的应用程序的需求。\r\n* **依赖序事件**: 按照 bean 依赖关系的顺序，确保根据对象的生命周期正确通知初始化和销毁事件。这增强了系统在其生命周期运行中的鲁棒性和可靠性。\r\n\r\n\r\n## 动态属性例子\r\n\r\n允许在运行时动态刷新属性，不仅支持基本数据类型，还支持结构、切片和 Map 类型。\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log/slog\"\r\n\t\"net/http\"\r\n\r\n\t\"github.com/go-spring-projects/go-spring/dync\"\r\n\t\"github.com/go-spring-projects/go-spring/gs\"\r\n)\r\n\r\ntype Handler struct {\r\n\tOpen dync.Bool `value:\"${server.open:=true}\"`\r\n}\r\n\r\nfunc (h *Handler) OnInit(ctx gs.Context) error {\r\n\r\n\thttp.HandleFunc(\"/server/status\", func(writer http.ResponseWriter, request *http.Request) {\r\n\t\tif !h.Open.Value() {\r\n\t\t\thttp.Error(writer, \"server closed\", http.StatusNotAcceptable)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tfmt.Fprint(writer, \"server running\")\r\n\t})\r\n\treturn nil\r\n}\r\n\r\ntype Server struct {\r\n\tLogger *slog.Logger `logger:\"\"`\r\n}\r\n\r\nfunc (s *Server) OnInit(ctx gs.Context) error {\r\n\r\n\tprops := ctx.(gs.Container).Properties()\r\n\r\n\thttp.HandleFunc(\"/server/status/open\", func(writer http.ResponseWriter, request *http.Request) {\r\n\t\tprops.Set(\"server.open\", \"true\")\r\n\t\ts.Logger.Info(\"server opened\")\r\n\t})\r\n\r\n\thttp.HandleFunc(\"/server/status/close\", func(writer http.ResponseWriter, request *http.Request) {\r\n\t\tprops.Set(\"server.open\", \"false\")\r\n\t\ts.Logger.Info(\"server closed\")\r\n\t})\r\n\r\n\tgo func() {\r\n\t\thttp.ListenAndServe(\":7878\", nil)\r\n\t}()\r\n\r\n\treturn nil\r\n}\r\n\r\nfunc main() {\r\n\r\n\tgs.Object(new(Handler))\r\n\tgs.Object(new(Server))\r\n\r\n\tif err := gs.Run(); nil != err {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n\r\n\r\n// Output:\r\n// \r\n// $ curl http://127.0.0.1:7878/server/status\r\n// server running\r\n//\r\n// $ curl http://127.0.0.1:7878/server/status/close\r\n//\r\n// $ curl http://127.0.0.1:7878/server/status\r\n// server closed\r\n//\r\n// $ curl http://127.0.0.1:7878/server/status/open\r\n//\r\n// $ curl http://127.0.0.1:7878/server/status\r\n// server running\r\n```\r\n\r\n## 参数校验器例子\r\n\r\n`Go-Spring`允许您注册自定义值验证器。如果值验证失败，则`Go-Spring`将在启动阶段报告一个错误。\r\n\r\n在这例子中, 我们将使用 [go-validator/validator]( https://github.com/go-validator/validator), 您可以参考这个示例来注册您的自定义验证器。\r\n\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"log/slog\"\r\n\r\n\t\"github.com/go-spring-projects/go-spring/conf\"\r\n\t\"github.com/go-spring-projects/go-spring/gs\"\r\n\t\"gopkg.in/validator.v2\"\r\n)\r\n\r\nconst validatorTagName = \"validate\"\r\n\r\ntype validatorWrapper struct {\r\n\tvalidator *validator.Validator\r\n}\r\n\r\nfunc (v *validatorWrapper) Field(tag string, i interface{}) error {\r\n\tif 0 == len(tag) {\r\n\t\treturn nil\r\n\t}\r\n\treturn v.validator.Valid(i, tag)\r\n}\r\n\r\nfunc init() {\r\n\tconf.Register(validatorTagName, &validatorWrapper{validator: validator.NewValidator().WithTag(validatorTagName)})\r\n}\r\n\r\n//--------------------------------------------------------------------------\r\n\r\ntype DBOptions struct {\r\n\tUserName string `value:\"${username}\"`\r\n\tPassword string `value:\"${password}\"`\r\n\tIP       string `value:\"${ip}\"`\r\n\tPort     int32  `value:\"${port}\" validate:\"min=1024,max=65535\"`\r\n\tDB       string `value:\"${db}\" validate:\"nonzero\"`\r\n}\r\n\r\ntype MysqlDatabase struct {\r\n\tLogger  *slog.Logger `logger:\"\"`\r\n\tOptions DBOptions    `value:\"${db}\"`\r\n}\r\n\r\nfunc (md *MysqlDatabase) OnInit(ctx gs.Context) error {\r\n\tmd.Logger.Info(\"mysql connection summary\",\r\n\t\t\"url\", fmt.Sprintf(\"mysql://%s:%s@%s:%d/%s\", md.Options.UserName, md.Options.Password, md.Options.IP, md.Options.Port, md.Options.DB))\r\n\treturn nil\r\n}\r\n\r\nfunc main() {\r\n\r\n\tgs.Property(\"db.username\", \"admin\")\r\n\tgs.Property(\"db.password\", \"123456\")\r\n\tgs.Property(\"db.ip\", \"127.0.0.1\")\r\n\tgs.Property(\"db.port\", \"0\") // set db.port=0\r\n\tgs.Property(\"db.db\", \"test\")\r\n\r\n\tgs.Object(new(MysqlDatabase))\r\n\r\n\tif err := gs.Run(); nil != err {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n\r\n//\r\n// Output:\r\n// panic: container refresh failed\r\n// ↳object bean \"main/main.MysqlDatabase:MysqlDatabase\" /projects/go-project/gocase/validator/main.go:58\r\n// ↳bind MysqlDatabase.Options error: validate MysqlDatabase.Options.Port error: less than min\r\n```\r\n\r\n更多特性请参考说明: [go-spring-projects/go-spring]( https://github.com/go-spring-projects/go-spring)\r\n\r\n最后还要感谢原作者[lvan100]( https://github.com/lvan100)的辛勤付出。", "content_rendered": "<h2>前言</h2>\n<p>多年前曾经梦想着能有一天能在 Go 语言中使用上 Spring 那样强大的框架，幸运的是我找到了<a href=\"https://github.com/go-spring/go-spring\" rel=\"nofollow\">go-spring</a>，一款类似 Spring 的库，我很喜欢它，并且在我的项目中深度使用它，它给我带来了非常酷的编程体验。  </p>\n<p>然而很不幸的是最近 go-spring 停止更新了(最近的一次提交停留在九个月之前)，一些问题无法得到有效的解决，因此我决定创建一个基于 go-spring 的开源库，我为它修复了一系列 bug ，并添加了一些新得特性，并对代码结构进行了简化，将外部生态从核心库中移除，仅保留核心功能，外部生态预计将来将作为独立的仓库存在，我将持续继续将它维护下去，也希望有感兴趣的人可以一起参与进来一起持续开发它。</p>\n<p>仓库地址: <a href=\"https://github.com/go-spring-projects/go-spring\" rel=\"nofollow\">https://github.com/go-spring-projects/go-spring</a></p>\n<h2>特性</h2>\n<ul>\n<li><strong>IoC 容器</strong>: 实现了基于反射的控制反转(IoC)容器，支持结构体、函数和常量的注入。这意味着你可以使用' autowired '标签来自动注入依赖，而不必手动管理它们。</li>\n<li><strong>配置管理</strong>: 受 Spring 的 @Value 注释的启发，Go-Spring 允许您从多个源(如环境变量、文件、命令行参数等)获取配置项。这为配置管理带来了前所未有的灵活性。</li>\n<li><strong>配置验证器</strong>: 通过支持自定义验证器扩展扩展了其健壮的配置管理功能。这使您能够对属性执行有效性检查，确保仅将有效的配置应用于您的应用程序。</li>\n<li><strong>结构化日志</strong>: 使用标准库 slog 提供内置日志记录器支持，以实现有效和简化的日志记录。这种增强提供了清晰、简洁和结构良好的日志信息，有助于系统调试和性能监视。</li>\n<li><strong>动态属性</strong>: 提供动态属性刷新功能，让您无需重新启动应用程序即可动态更新应用程序属性。它满足了需要高可用性和实时响应的应用程序的需求。</li>\n<li><strong>依赖序事件</strong>: 按照 bean 依赖关系的顺序，确保根据对象的生命周期正确通知初始化和销毁事件。这增强了系统在其生命周期运行中的鲁棒性和可靠性。</li>\n</ul>\n<h2>动态属性例子</h2>\n<p>允许在运行时动态刷新属性，不仅支持基本数据类型，还支持结构、切片和 Map 类型。</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\n\t\"github.com/go-spring-projects/go-spring/dync\"\n\t\"github.com/go-spring-projects/go-spring/gs\"\n)\n\ntype Handler struct {\n\tOpen dync.Bool `value:\"${server.open:=true}\"`\n}\n\nfunc (h *Handler) OnInit(ctx gs.Context) error {\n\n\thttp.HandleFunc(\"/server/status\", func(writer http.ResponseWriter, request *http.Request) {\n\t\tif !h.Open.Value() {\n\t\t\thttp.Error(writer, \"server closed\", http.StatusNotAcceptable)\n\t\t\treturn\n\t\t}\n\n\t\tfmt.Fprint(writer, \"server running\")\n\t})\n\treturn nil\n}\n\ntype Server struct {\n\tLogger *slog.Logger `logger:\"\"`\n}\n\nfunc (s *Server) OnInit(ctx gs.Context) error {\n\n\tprops := ctx.(gs.Container).Properties()\n\n\thttp.HandleFunc(\"/server/status/open\", func(writer http.ResponseWriter, request *http.Request) {\n\t\tprops.Set(\"server.open\", \"true\")\n\t\ts.Logger.Info(\"server opened\")\n\t})\n\n\thttp.HandleFunc(\"/server/status/close\", func(writer http.ResponseWriter, request *http.Request) {\n\t\tprops.Set(\"server.open\", \"false\")\n\t\ts.Logger.Info(\"server closed\")\n\t})\n\n\tgo func() {\n\t\thttp.ListenAndServe(\":7878\", nil)\n\t}()\n\n\treturn nil\n}\n\nfunc main() {\n\n\tgs.Object(new(Handler))\n\tgs.Object(new(Server))\n\n\tif err := gs.Run(); nil != err {\n\t\tpanic(err)\n\t}\n}\n\n\n// Output:\n// \n// $ curl http://127.0.0.1:7878/server/status\n// server running\n//\n// $ curl http://127.0.0.1:7878/server/status/close\n//\n// $ curl http://127.0.0.1:7878/server/status\n// server closed\n//\n// $ curl http://127.0.0.1:7878/server/status/open\n//\n// $ curl http://127.0.0.1:7878/server/status\n// server running\n</code></pre>\n<h2>参数校验器例子</h2>\n<p><code>Go-Spring</code>允许您注册自定义值验证器。如果值验证失败，则<code>Go-Spring</code>将在启动阶段报告一个错误。</p>\n<p>在这例子中, 我们将使用 <a href=\"https://github.com/go-validator/validator\" rel=\"nofollow\">go-validator/validator</a>, 您可以参考这个示例来注册您的自定义验证器。</p>\n<pre><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\n\t\"github.com/go-spring-projects/go-spring/conf\"\n\t\"github.com/go-spring-projects/go-spring/gs\"\n\t\"gopkg.in/validator.v2\"\n)\n\nconst validatorTagName = \"validate\"\n\ntype validatorWrapper struct {\n\tvalidator *validator.Validator\n}\n\nfunc (v *validatorWrapper) Field(tag string, i interface{}) error {\n\tif 0 == len(tag) {\n\t\treturn nil\n\t}\n\treturn v.validator.Valid(i, tag)\n}\n\nfunc init() {\n\tconf.Register(validatorTagName, &amp;validatorWrapper{validator: validator.NewValidator().WithTag(validatorTagName)})\n}\n\n//--------------------------------------------------------------------------\n\ntype DBOptions struct {\n\tUserName string `value:\"${username}\"`\n\tPassword string `value:\"${password}\"`\n\tIP       string `value:\"${ip}\"`\n\tPort     int32  `value:\"${port}\" validate:\"min=1024,max=65535\"`\n\tDB       string `value:\"${db}\" validate:\"nonzero\"`\n}\n\ntype MysqlDatabase struct {\n\tLogger  *slog.Logger `logger:\"\"`\n\tOptions DBOptions    `value:\"${db}\"`\n}\n\nfunc (md *MysqlDatabase) OnInit(ctx gs.Context) error {\n\tmd.Logger.Info(\"mysql connection summary\",\n\t\t\"url\", fmt.Sprintf(\"mysql://%s:%s@%s:%d/%s\", md.Options.UserName, md.Options.Password, md.Options.IP, md.Options.Port, md.Options.DB))\n\treturn nil\n}\n\nfunc main() {\n\n\tgs.Property(\"db.username\", \"admin\")\n\tgs.Property(\"db.password\", \"123456\")\n\tgs.Property(\"db.ip\", \"127.0.0.1\")\n\tgs.Property(\"db.port\", \"0\") // set db.port=0\n\tgs.Property(\"db.db\", \"test\")\n\n\tgs.Object(new(MysqlDatabase))\n\n\tif err := gs.Run(); nil != err {\n\t\tpanic(err)\n\t}\n}\n\n//\n// Output:\n// panic: container refresh failed\n// ↳object bean \"main/main.MysqlDatabase:MysqlDatabase\" /projects/go-project/gocase/validator/main.go:58\n// ↳bind MysqlDatabase.Options error: validate MysqlDatabase.Options.Port error: less than min\n</code></pre>\n<p>更多特性请参考说明: <a href=\"https://github.com/go-spring-projects/go-spring\" rel=\"nofollow\">go-spring-projects/go-spring</a></p>\n<p>最后还要感谢原作者<a href=\"https://github.com/lvan100\" rel=\"nofollow\">lvan100</a>的辛勤付出。</p>\n", "last_modified": 1698978313, "replies": 110, "id": 988146}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1692078075", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1692078075", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 59753, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1692078075", "stars": 8709, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 646640, "username": "zzz6519003", "url": "https://www.v2ex.com/u/zzz6519003", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "大号（https://v2ex.com/member/zhengzhongzhao）每天发个帖子还发多个回复，不知道自己被降级了，结果琴家荡产了。。。只好开小号才有钱发帖了", "avatar_mini": "https://cdn.v2ex.com/gravatar/336857b41be0ab8ac347351b1d8e83d0?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/336857b41be0ab8ac347351b1d8e83d0?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/336857b41be0ab8ac347351b1d8e83d0?s=73&d=retro", "created": 1693615352, "last_modified": 1693615352}, "last_reply_by": "crackidz", "last_touched": 1699063745, "title": "我想对很多自由软件作者说：正义在你这边，没啥好怕的", "url": "https://www.v2ex.com/t/988404", "created": 1699009569, "deleted": 0, "content": "", "content_rendered": "", "last_modified": 1699009569, "replies": 73, "id": 988404}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1692078075", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1692078075", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 59753, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1692078075", "stars": 8709, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 530867, "username": "getzhujie123", "url": "https://www.v2ex.com/u/getzhujie123", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/67b783cef1d773f767fc8935088de692?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/67b783cef1d773f767fc8935088de692?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/67b783cef1d773f767fc8935088de692?s=73&d=retro", "created": 1611816551, "last_modified": 1698978116}, "last_reply_by": "hanxiansheng", "last_touched": 1699041377, "title": "培训班也开始裁员了，程序员就业真的这么难吗", "url": "https://www.v2ex.com/t/988147", "created": 1698978418, "deleted": 0, "content": "https://imgur.com/eDpxujq\r\n\r\nB 站上看到的一个视频，因为 JAVA 就业率低，黑马已经关停部分校区，程序员已经走下坡路了吗", "content_rendered": "<p><a href=\"https://imgur.com/eDpxujq\" rel=\"nofollow\">https://imgur.com/eDpxujq</a></p>\n<p>B 站上看到的一个视频，因为 JAVA 就业率低，黑马已经关停部分校区，程序员已经走下坡路了吗</p>\n", "last_modified": 1698987460, "replies": 68, "id": 988147}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1692078075", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1692078075", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 59753, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1692078075", "stars": 8709, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 590886, "username": "ThinkStu", "url": "https://www.v2ex.com/u/ThinkStu", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/c6d4/ef39/590886_mini.png?m=1690697490", "avatar_normal": "https://cdn.v2ex.com/avatar/c6d4/ef39/590886_normal.png?m=1690697490", "avatar_large": "https://cdn.v2ex.com/avatar/c6d4/ef39/590886_large.png?m=1690697490", "avatar_xlarge": "https://cdn.v2ex.com/avatar/c6d4/ef39/590886_xlarge.png?m=1690697490", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/c6d4/ef39/590886_xlarge.png?m=1690697490", "created": 1660137026, "last_modified": 1690697490}, "last_reply_by": "chesha1", "last_touched": 1699038281, "title": "转语言真的这么容易吗？", "url": "https://www.v2ex.com/t/988250", "created": 1698990021, "deleted": 0, "content": "在 v2 里面泡的久了，经常能在许多帖子下面看到有人说“转语言非常容易”，Go 语言能半天入门 、Java 太简单了之类的回复。\r\n\r\n![]( https://i.v2ex.co/9wULxKZVb.png)\r\n\r\n但是在我看来事情却没那么容易，换一门语言就意味着框架、最佳实践、对接第三方开发等都要重来一遍。自从 4 个月之前从 Java 转到 go ，过程中经历了许多“痛苦”，慢慢的我发现转一门语言没有那么容易，学了四个月都不敢说自己已经掌握 go 开发，越学到后面发现自己不会的也越多，同时 Java 的语法也忘了一些。\r\n\r\n\r\n## 作为一名对编程有着较大兴趣的爱好者，想知道大家对此事的看法。\r\n### 1. 转语言是否是一件容易的事？\r\n### 2. 真的有人同时擅长多门语言，并且写的都不赖？", "content_rendered": "<p>在 v2 里面泡的久了，经常能在许多帖子下面看到有人说“转语言非常容易”，Go 语言能半天入门 、Java 太简单了之类的回复。</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.v2ex.co/9wULxKZVb.png\"/></p>\n<p>但是在我看来事情却没那么容易，换一门语言就意味着框架、最佳实践、对接第三方开发等都要重来一遍。自从 4 个月之前从 Java 转到 go ，过程中经历了许多“痛苦”，慢慢的我发现转一门语言没有那么容易，学了四个月都不敢说自己已经掌握 go 开发，越学到后面发现自己不会的也越多，同时 Java 的语法也忘了一些。</p>\n<h2>作为一名对编程有着较大兴趣的爱好者，想知道大家对此事的看法。</h2>\n<h3>1. 转语言是否是一件容易的事？</h3>\n<h3>2. 真的有人同时擅长多门语言，并且写的都不赖？</h3>\n", "last_modified": 1698992661, "replies": 66, "id": 988250}, {"node": {"avatar_large": "/static/img/node_default_large.png", "name": "fit", "avatar_normal": "/static/img/node_default_normal.png", "title": "健康", "url": "https://www.v2ex.com/go/fit", "topics": 976, "footer": "", "header": "这个节点的设立，是为了让大家可以分享关于健身和健康生活方式的经验。如果你有什么正在困扰自己的身体症状，请立刻寻求正规医院的帮助。", "title_alternative": "Fit", "avatar_mini": "/static/img/node_default_mini.png", "stars": 304, "aliases": [], "root": false, "id": 700, "parent_node_name": "life"}, "member": {"id": 596880, "username": "JiangNanLong", "url": "https://www.v2ex.com/u/JiangNanLong", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/b1cbdc4191e6d2b04c148941d9842ab3?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/b1cbdc4191e6d2b04c148941d9842ab3?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/b1cbdc4191e6d2b04c148941d9842ab3?s=73&d=retro", "created": 1665366432, "last_modified": 1677723127}, "last_reply_by": "thinkm", "last_touched": 1699063727, "title": "想找个老中医给号号脉", "url": "https://www.v2ex.com/t/988420", "created": 1699013919, "deleted": 0, "content": "大哥们，山东省内有比较好的老中医吗？总感觉最近脑子总是晕晕的，不太能集中精力，也没大有精神，遂想找个老中医给号号脉，调养调养。", "content_rendered": "大哥们，山东省内有比较好的老中医吗？总感觉最近脑子总是晕晕的，不太能集中精力，也没大有精神，遂想找个老中医给号号脉，调养调养。", "last_modified": 1699018854, "replies": 64, "id": 988420}]