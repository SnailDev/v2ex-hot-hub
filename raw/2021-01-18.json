[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1610122510", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1610122510", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 42788, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1610122510", "stars": 7200, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"username": "zty7723271", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/gravatar/b95464a78e8b74df655552678d116d08?s=24&d=retro", "bio": null, "url": "https://www.v2ex.com/u/zty7723271", "tagline": null, "twitter": null, "created": 1520342243, "avatar_large": "https://cdn.v2ex.com/gravatar/b95464a78e8b74df655552678d116d08?s=24&d=retro", "avatar_mini": "https://cdn.v2ex.com/gravatar/b95464a78e8b74df655552678d116d08?s=24&d=retro", "location": null, "btc": null, "id": 297329}, "last_reply_by": "slogon", "last_touched": 1610953473, "title": "当一个陌生人问起你的职业时，你不想认真答复，你会怎么回答？", "url": "https://www.v2ex.com/t/745712", "created": 1610885144, "content": "如题。\r\n大家有什么有趣的思路吗？", "content_rendered": "<p>如题。\n大家有什么有趣的思路吗？</p>\n", "last_modified": 1610885144, "replies": 117, "id": 745712}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1610122510", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1610122510", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 42788, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1610122510", "stars": 7200, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"username": "polyang", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/avatar/8bcb/c1d0/510643_mini.png?m=1601433658", "bio": null, "url": "https://www.v2ex.com/u/polyang", "tagline": null, "twitter": null, "created": 1601393887, "avatar_large": "https://cdn.v2ex.com/avatar/8bcb/c1d0/510643_mini.png?m=1601433658", "avatar_mini": "https://cdn.v2ex.com/avatar/8bcb/c1d0/510643_mini.png?m=1601433658", "location": null, "btc": null, "id": 510643}, "last_reply_by": "whxme", "last_touched": 1610954002, "title": "在外包呆久了真的很可怕，感觉我快要废了", "url": "https://www.v2ex.com/t/745772", "created": 1610932337, "content": "为什么我会有这种想法呢？因为我发现在外包待久了之后没有什么上进心了，整天就是得过且过的感觉，有想过努力钻研技术，但因为经常加班，导致我回到家之后啥也不相干，只想休息休息、看看电视什么的。\r\n\r\n以前不觉得外包有多可怕，现在发现真的很可怕，他会一点点麻木你，因为外包本身用到的技术比较单一，也不会有所谓的 code review，只要功能实现就完了，你得不到进步……", "content_rendered": "为什么我会有这种想法呢？因为我发现在外包待久了之后没有什么上进心了，整天就是得过且过的感觉，有想过努力钻研技术，但因为经常加班，导致我回到家之后啥也不相干，只想休息休息、看看电视什么的。<br /><br />以前不觉得外包有多可怕，现在发现真的很可怕，他会一点点麻木你，因为外包本身用到的技术比较单一，也不会有所谓的 code review，只要功能实现就完了，你得不到进步……", "last_modified": 1610932337, "replies": 104, "id": 745772}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1596015931", "name": "create", "avatar_normal": "https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1596015931", "title": "分享创造", "url": "https://www.v2ex.com/go/create", "topics": 15561, "footer": "", "header": "欢迎你在这里发布自己的最新作品！", "title_alternative": "Create", "avatar_mini": "https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1596015931", "stars": 3797, "aliases": [], "root": false, "id": 17, "parent_node_name": "geek"}, "member": {"username": "yuhuan66666", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/gravatar/6840671dff0dd2c7676f1d1e4b2cb046?s=24&d=retro", "bio": "", "url": "https://www.v2ex.com/u/yuhuan66666", "tagline": "", "twitter": "", "created": 1434904292, "avatar_large": "https://cdn.v2ex.com/gravatar/6840671dff0dd2c7676f1d1e4b2cb046?s=24&d=retro", "avatar_mini": "https://cdn.v2ex.com/gravatar/6840671dff0dd2c7676f1d1e4b2cb046?s=24&d=retro", "location": "", "btc": "", "id": 123399}, "last_reply_by": "TypeError", "last_touched": 1610955129, "title": "亲戚问薪资问存款，该怎么不伤面子的情况下不说", "url": "https://www.v2ex.com/t/745835", "created": 1610939733, "content": "过年会见到叔辈亲戚，实在不想说。\r\n\r\n一个个特别能嘲讽人那种，嘴特损那种。完全不想理。碍于我父亲面子。表面应付一下。该咋说。\r\n\r\n过年几天我尽量跑出去玩，尽量不碰面。免不了大年夜碰面", "content_rendered": "<p>过年会见到叔辈亲戚，实在不想说。</p>\n<p>一个个特别能嘲讽人那种，嘴特损那种。完全不想理。碍于我父亲面子。表面应付一下。该咋说。</p>\n<p>过年几天我尽量跑出去玩，尽量不碰面。免不了大年夜碰面</p>\n", "last_modified": 1610939733, "replies": 95, "id": 745835}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1608830203", "name": "share", "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1608830203", "title": "分享发现", "url": "https://www.v2ex.com/go/share", "topics": 33478, "footer": "", "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。", "title_alternative": "Share", "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1608830203", "stars": 4372, "aliases": [], "root": false, "id": 16, "parent_node_name": "v2ex"}, "member": {"username": "runcelim", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/gravatar/406c92daeb845608894b65e2f6899c21?s=24&d=retro", "bio": "", "url": "https://www.v2ex.com/u/runcelim", "tagline": "", "twitter": "", "created": 1349294447, "avatar_large": "https://cdn.v2ex.com/gravatar/406c92daeb845608894b65e2f6899c21?s=24&d=retro", "avatar_mini": "https://cdn.v2ex.com/gravatar/406c92daeb845608894b65e2f6899c21?s=24&d=retro", "location": "深圳", "btc": "", "id": 27584}, "last_reply_by": "runcelim", "last_touched": 1610955008, "title": "谨慎购买小米产品", "url": "https://www.v2ex.com/t/745792", "created": 1610935318, "content": "几年前装机时为了测试功率，购买了口碑甚好的小米智能插座 ，还记得双烤 cpu 和 gpu 时功率不是很高，现在重新使用时却发现功率统计功能没了，这也太搞笑了，问了客服，说是没有这个功能\r\n\r\n https://www.mi.com/socket\r\n\r\n\r\n挖矿事业未半，小米绊脚退出", "content_rendered": "几年前装机时为了测试功率，购买了口碑甚好的小米智能插座 ，还记得双烤 cpu 和 gpu 时功率不是很高，现在重新使用时却发现功率统计功能没了，这也太搞笑了，问了客服，说是没有这个功能<br /><br /> <a target=\"_blank\" href=\"https://www.mi.com/socket\" rel=\"nofollow noopener\">https://www.mi.com/socket</a><br /><br /><br />挖矿事业未半，小米绊脚退出", "last_modified": 1610935318, "replies": 91, "id": 745792}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1608830203", "name": "share", "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1608830203", "title": "分享发现", "url": "https://www.v2ex.com/go/share", "topics": 33478, "footer": "", "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。", "title_alternative": "Share", "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1608830203", "stars": 4372, "aliases": [], "root": false, "id": 16, "parent_node_name": "v2ex"}, "member": {"username": "ElegantOfKing", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/avatar/00e0/7f67/134208_mini.png?m=1535456744", "bio": null, "url": "https://www.v2ex.com/u/ElegantOfKing", "tagline": null, "twitter": null, "created": 1440139393, "avatar_large": "https://cdn.v2ex.com/avatar/00e0/7f67/134208_mini.png?m=1535456744", "avatar_mini": "https://cdn.v2ex.com/avatar/00e0/7f67/134208_mini.png?m=1535456744", "location": null, "btc": null, "id": 134208}, "last_reply_by": "Tyuans", "last_touched": 1610954382, "title": "分享自己的无脑挖矿之路，一天大概赚个奶茶钱", "url": "https://www.v2ex.com/t/745685", "created": 1610879602, "content": "最近看好多人分享挖矿的历程，自己也忍不住分享一波自己的经历了。\r\n\r\n和大部分人不同，我是直接买矿场的矿机并全权委托他们代为挖矿。\r\n\r\n好处是只要交电费，其他的什么都不用管，电费也比较便宜。缺点是矿机只能挖矿，不像显卡，还可以玩游戏。\r\n\r\n目前每天签到送点算力，加上之前买的矿机，每天的纯收益，减去电费，按照现在的市场价，大概在 80 元。\r\n\r\n最后附上自己目前的收益\r\n![BTC 收益]( https://normalupdate.oss-cn-hangzhou.aliyuncs.com/BTC.png)", "content_rendered": "<p>最近看好多人分享挖矿的历程，自己也忍不住分享一波自己的经历了。</p>\n<p>和大部分人不同，我是直接买矿场的矿机并全权委托他们代为挖矿。</p>\n<p>好处是只要交电费，其他的什么都不用管，电费也比较便宜。缺点是矿机只能挖矿，不像显卡，还可以玩游戏。</p>\n<p>目前每天签到送点算力，加上之前买的矿机，每天的纯收益，减去电费，按照现在的市场价，大概在 80 元。</p>\n<p>最后附上自己目前的收益\n<img alt=\"BTC 收益\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://normalupdate.oss-cn-hangzhou.aliyuncs.com/BTC.png\"/></p>\n", "last_modified": 1610879602, "replies": 78, "id": 745685}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1594743680", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1594743680", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 167311, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1594743680", "stars": 3141, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"username": "pubby", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/3741/a74f/39620_mini.png?m=1469896299", "bio": "", "url": "https://www.v2ex.com/u/pubby", "tagline": "", "twitter": "", "created": 1369378004, "avatar_large": "https://cdn.v2ex.com/avatar/3741/a74f/39620_mini.png?m=1469896299", "avatar_mini": "https://cdn.v2ex.com/avatar/3741/a74f/39620_mini.png?m=1469896299", "location": "", "btc": "", "id": 39620}, "last_reply_by": "z761031", "last_touched": 1610954748, "title": "一次在 PDD 上购买百亿补贴 MacBook Air M1 后的维权经历", "url": "https://www.v2ex.com/t/745758", "created": 1610906708, "content": "先说结果，历时 31 天后退货退款，pdd 赔偿退货运费。\r\n\r\n选择在 pdd 上购买完全是冲着百亿补贴去的，而且是第一次安装使用 pdd<br>\r\n之前在 v2 也看过不少翻车的帖子，抱着侥幸心理试一下，结果迅速打脸。\r\n\r\n过程比较折腾，以下用流水账形式简单记录。\r\n\r\n2020.12.18 下单<br>\r\n2020.12.20 到货，这天周日，公司前台签收的<br>\r\n2020.12.21 周一上班后开箱，没有录制视频，心想买个东西还要弄得跟司法取证似的。这一点确实给后面长时间扯皮埋下了隐患。<br>\r\n\r\n外包装封条撕掉，取出机器盒子，撕掉薄膜打开盒子，取出机器检查。<br>\r\n发现底部有 2 颗螺丝顶部的梅花孔有毛刺，怀疑被螺丝刀拧过。对比其他几颗以及其他 macbook 机器上的螺丝后，确定不太正常。\r\n\r\n打开盒盖，没有开机过程，直接亮屏，画面停留在语言选择界面。\r\n\r\n官网查了一下包装盒上的序列号，没有激活过。\r\n\r\n不敢再继续，拍照，拍视频，保留证据。\r\n\r\n联系卖家，说明情况，要求换货或者退货。<br>\r\n卖家拒绝，理由是拆了外包装，影响二次销售。<br>\r\n我又看了商品页面，好像是这么说的，外包装上也有拆封影响售后的说明。\r\n\r\n我肯定要拆包装才能用啊，但是发现机器有瑕疵，可能后续影响售后。<br>\r\n卖家说那你可以就近去苹果检测。<br>\r\n我说这不是我买家的义务，要求退货。<br>\r\n卖家不肯。\r\n\r\n此路不通，想了几个方案:<br>\r\n先找平台，再找 12315，最后找律师起诉。\r\n\r\n所以当天下午，申请 pdd 介入，因为仅凭瑕疵我也说不出质量有没有问题，申请理由是 7 天无理由退货。\r\n\r\n2020.12.22 - 2020.12.26 pdd 介入协调。<br>\r\n期间，pdd 先后不同客服多次来电询问，我把情况说了好几遍。<br>\r\n卖家咬死影响二次销售为由拒不接受。\r\n\r\n2020.12.24 在 12315 上投诉 pdd，理由是商家不履行三包政策以及 pdd 处理问题不积极。\r\n\r\n2020.12.26 pdd 客服来电说因为影响二次销售为由，不能退货。<br>\r\n给出的方案是：要么 pdd 给我 200 元券，不退货；要么赔偿商家 2000 元折旧费后，退货。<br>\r\n我拒绝这 2 个方案，问客服：如果你是我，碰到这种事情，你觉得这样合理吗？<br>\r\n他说他也觉得不合理，但是因为影响二次销售，无法退货。\r\n\r\n第一阶段看来是失败了。\r\n\r\n12315 效率也不高，还是待受理状态。<br>\r\n下一步是继续退款还是直接找律师？想了一下继续申请退款，先让钱留在平台。\r\n\r\n当天下午就继续申请退款，这次换了个理由：<br>\r\n商家销售有瑕疵的产品，损害消费者利益，伤害百亿补贴招牌，损害 pdd 利益。要求退货退款，并且立即停止对商家的百亿补贴政策。\r\n\r\n同时：联系 pdd 线上人工客服，投诉之前的客服不专业，不敬业，不维护消费者权益，有损 pdd 的长远发展，要求更换专员处理。\r\n\r\n2020.12.27 - 2020.12.31 pdd 再次介入处理。<br>\r\n这次 pdd 换了人来处理，说一定会站在消费者的立场处理问题，至少让我感受到更真诚一些。<br>\r\n卖家继续以影响二次销售为由扯皮。<br>\r\n\r\n2020.12.31 pdd 同意退款<br>\r\n2020.12.31 卖家提供退货地址<br>\r\n2020.12.31 我录制装箱视频，顺丰保价寄出。<br>\r\n2020.12.31 12315 上投诉状态终于变成已受理。但是需要 45 个工作日办结。<br>\r\n2020.12.31 苹果官网下单 MacBook Air M1，预计 1.16 开始发货\r\n\r\n元旦放假，货也寄出了，但是商家可能会拒收退货吧？<br>\r\n难道这个事情也要跨年？\r\n\r\n2021.1.2 果然，卖家拒收退货<br>\r\n2021.1.3 - 2021.1.9 pdd 要求商家举证，卖家以各种理由开始扯皮<br>\r\n先是拍了照片，说螺丝被动过，不知道他们怎么拍的，反正看上去比我拍的磨损更大，简直是拿螺丝刀重新捅了一遍的样子。<br>\r\n过几天说所有螺丝都被动过，怀疑我开过机器后盖换部件。我说 m1 的机器没法换内存和硬盘，我不是富士康也不是华强北。<br>\r\n后面几天直接怀疑我偷换机器里面配件，声称他们碰到过几次这样的事情。\r\n\r\n因为顺丰拒收件无法长时间留在收货地，一边和商家扯，一边要求 pdd 尽快处理。\r\n\r\n2021.1.9 pdd 说因为商品价格比价高，必须卖家签收退货后才可以退款。<br>\r\n我让顺丰再次派送，商家再次拒收。派送滞留时间到期，我只好让顺丰先原路退回来。\r\n\r\n2021.1.12 pdd 询问退货情况，我说对方拒收。他让我再退，如果还是拒收，提供拒收截图给他，pdd 也给退款。\r\n\r\n对此我比较满意，但是也有顾虑：如果卖家一直拒收，那么最终钱和货都在我手里，但是机器其实不属于我，我得供着它还要确保它的安全，那就比较被动，万一商家各种理由找我麻烦。\r\n\r\npdd 让我尽量多拍些发货装箱照片和视频证据。\r\n\r\n2021.1.13 第二次顺丰保价寄出。前一天的原路退回件都没拆开，顺丰小哥自己开箱确定东西后再次装箱的。<br>\r\n2021.1.15 卖家还是拒收。我截图反馈给 pdd 。<br>\r\n2021.1.15 pdd 发起退款。<br>\r\n2021.1.16 退款 7199 元到账<br>\r\n2021.1.16 顺丰再次配送，卖家签收。<br>\r\n2021.1.17 pdd 赔偿 2 次退货运费共计 200 元到账（运费和保价 86x2+一次拒收退回到付 28 ）<br>\r\n2021.1.17 好奇，查看了一下卖家店铺，发现 pro m1 和 air m1 都没有百亿补贴了，但是老款 air 还有百亿补贴。\r\n\r\n2021.1.17 官网的机器到货。直接开箱，机器背面每颗螺丝都正常，没有丝毫磨损痕迹，翻盖后有开机声音和 logo 进度画面。\r\n\r\n\r\n————————<br>\r\n12315 有没有帮助，不知道，没收到反馈，没接到电话。<br>\r\n目前依然是决定受理，45 个工作日办结的状态。<br>\r\n\r\n————————\r\n\r\n这段时间刚好也是 pdd 负面新闻频发的一段时间。说一下感受：\r\n\r\n整个过程消费者很被动，没法主动联系售后专员，只能反馈，等待。\r\n\r\n前期的专员属于应付工作，没有用心处理。对话呆板机械，甚至好几次我还在说话就听到传来“祝您生活愉快，再见”的结束音。 然后我又得反馈再等下一次的电话。<br>\r\n工作混乱，不同的客服反复问同一件事情。<br>\r\n和机器人差不多，甚至不如，机器人好歹问一遍就记录了。\r\n\r\n\r\n第二次售后开始，可能是要求换人的缘故。服务开始好转。<br>\r\n最近几天基本反馈后第二天必有回电。<br>\r\n虽然还是很被动，但是起码感觉到是在跟一个帮我处理问题的人交流了。\r\n\r\n\r\n————————\r\n\r\n目前还没卸载 pdd 。", "content_rendered": "<p>先说结果，历时 31 天后退货退款，pdd 赔偿退货运费。</p>\n<p>选择在 pdd 上购买完全是冲着百亿补贴去的，而且是第一次安装使用 pdd<br/>\n之前在 v2 也看过不少翻车的帖子，抱着侥幸心理试一下，结果迅速打脸。</p>\n<p>过程比较折腾，以下用流水账形式简单记录。</p>\n<p>2020.12.18 下单<br/>\n2020.12.20 到货，这天周日，公司前台签收的<br/>\n2020.12.21 周一上班后开箱，没有录制视频，心想买个东西还要弄得跟司法取证似的。这一点确实给后面长时间扯皮埋下了隐患。<br/></p>\n<p>外包装封条撕掉，取出机器盒子，撕掉薄膜打开盒子，取出机器检查。<br/>\n发现底部有 2 颗螺丝顶部的梅花孔有毛刺，怀疑被螺丝刀拧过。对比其他几颗以及其他 macbook 机器上的螺丝后，确定不太正常。</p>\n<p>打开盒盖，没有开机过程，直接亮屏，画面停留在语言选择界面。</p>\n<p>官网查了一下包装盒上的序列号，没有激活过。</p>\n<p>不敢再继续，拍照，拍视频，保留证据。</p>\n<p>联系卖家，说明情况，要求换货或者退货。<br/>\n卖家拒绝，理由是拆了外包装，影响二次销售。<br/>\n我又看了商品页面，好像是这么说的，外包装上也有拆封影响售后的说明。</p>\n<p>我肯定要拆包装才能用啊，但是发现机器有瑕疵，可能后续影响售后。<br/>\n卖家说那你可以就近去苹果检测。<br/>\n我说这不是我买家的义务，要求退货。<br/>\n卖家不肯。</p>\n<p>此路不通，想了几个方案:<br/>\n先找平台，再找 12315，最后找律师起诉。</p>\n<p>所以当天下午，申请 pdd 介入，因为仅凭瑕疵我也说不出质量有没有问题，申请理由是 7 天无理由退货。</p>\n<p>2020.12.22 - 2020.12.26 pdd 介入协调。<br/>\n期间，pdd 先后不同客服多次来电询问，我把情况说了好几遍。<br/>\n卖家咬死影响二次销售为由拒不接受。</p>\n<p>2020.12.24 在 12315 上投诉 pdd，理由是商家不履行三包政策以及 pdd 处理问题不积极。</p>\n<p>2020.12.26 pdd 客服来电说因为影响二次销售为由，不能退货。<br/>\n给出的方案是：要么 pdd 给我 200 元券，不退货；要么赔偿商家 2000 元折旧费后，退货。<br/>\n我拒绝这 2 个方案，问客服：如果你是我，碰到这种事情，你觉得这样合理吗？<br/>\n他说他也觉得不合理，但是因为影响二次销售，无法退货。</p>\n<p>第一阶段看来是失败了。</p>\n<p>12315 效率也不高，还是待受理状态。<br/>\n下一步是继续退款还是直接找律师？想了一下继续申请退款，先让钱留在平台。</p>\n<p>当天下午就继续申请退款，这次换了个理由：<br/>\n商家销售有瑕疵的产品，损害消费者利益，伤害百亿补贴招牌，损害 pdd 利益。要求退货退款，并且立即停止对商家的百亿补贴政策。</p>\n<p>同时：联系 pdd 线上人工客服，投诉之前的客服不专业，不敬业，不维护消费者权益，有损 pdd 的长远发展，要求更换专员处理。</p>\n<p>2020.12.27 - 2020.12.31 pdd 再次介入处理。<br/>\n这次 pdd 换了人来处理，说一定会站在消费者的立场处理问题，至少让我感受到更真诚一些。<br/>\n卖家继续以影响二次销售为由扯皮。<br/></p>\n<p>2020.12.31 pdd 同意退款<br/>\n2020.12.31 卖家提供退货地址<br/>\n2020.12.31 我录制装箱视频，顺丰保价寄出。<br/>\n2020.12.31 12315 上投诉状态终于变成已受理。但是需要 45 个工作日办结。<br/>\n2020.12.31 苹果官网下单 MacBook Air M1，预计 1.16 开始发货</p>\n<p>元旦放假，货也寄出了，但是商家可能会拒收退货吧？<br/>\n难道这个事情也要跨年？</p>\n<p>2021.1.2 果然，卖家拒收退货<br/>\n2021.1.3 - 2021.1.9 pdd 要求商家举证，卖家以各种理由开始扯皮<br/>\n先是拍了照片，说螺丝被动过，不知道他们怎么拍的，反正看上去比我拍的磨损更大，简直是拿螺丝刀重新捅了一遍的样子。<br/>\n过几天说所有螺丝都被动过，怀疑我开过机器后盖换部件。我说 m1 的机器没法换内存和硬盘，我不是富士康也不是华强北。<br/>\n后面几天直接怀疑我偷换机器里面配件，声称他们碰到过几次这样的事情。</p>\n<p>因为顺丰拒收件无法长时间留在收货地，一边和商家扯，一边要求 pdd 尽快处理。</p>\n<p>2021.1.9 pdd 说因为商品价格比价高，必须卖家签收退货后才可以退款。<br/>\n我让顺丰再次派送，商家再次拒收。派送滞留时间到期，我只好让顺丰先原路退回来。</p>\n<p>2021.1.12 pdd 询问退货情况，我说对方拒收。他让我再退，如果还是拒收，提供拒收截图给他，pdd 也给退款。</p>\n<p>对此我比较满意，但是也有顾虑：如果卖家一直拒收，那么最终钱和货都在我手里，但是机器其实不属于我，我得供着它还要确保它的安全，那就比较被动，万一商家各种理由找我麻烦。</p>\n<p>pdd 让我尽量多拍些发货装箱照片和视频证据。</p>\n<p>2021.1.13 第二次顺丰保价寄出。前一天的原路退回件都没拆开，顺丰小哥自己开箱确定东西后再次装箱的。<br/>\n2021.1.15 卖家还是拒收。我截图反馈给 pdd 。<br/>\n2021.1.15 pdd 发起退款。<br/>\n2021.1.16 退款 7199 元到账<br/>\n2021.1.16 顺丰再次配送，卖家签收。<br/>\n2021.1.17 pdd 赔偿 2 次退货运费共计 200 元到账（运费和保价 86x2+一次拒收退回到付 28 ）<br/>\n2021.1.17 好奇，查看了一下卖家店铺，发现 pro m1 和 air m1 都没有百亿补贴了，但是老款 air 还有百亿补贴。</p>\n<p>2021.1.17 官网的机器到货。直接开箱，机器背面每颗螺丝都正常，没有丝毫磨损痕迹，翻盖后有开机声音和 logo 进度画面。</p>\n<p>————————<br/>\n12315 有没有帮助，不知道，没收到反馈，没接到电话。<br/>\n目前依然是决定受理，45 个工作日办结的状态。<br/></p>\n<p>————————</p>\n<p>这段时间刚好也是 pdd 负面新闻频发的一段时间。说一下感受：</p>\n<p>整个过程消费者很被动，没法主动联系售后专员，只能反馈，等待。</p>\n<p>前期的专员属于应付工作，没有用心处理。对话呆板机械，甚至好几次我还在说话就听到传来“祝您生活愉快，再见”的结束音。 然后我又得反馈再等下一次的电话。<br/>\n工作混乱，不同的客服反复问同一件事情。<br/>\n和机器人差不多，甚至不如，机器人好歹问一遍就记录了。</p>\n<p>第二次售后开始，可能是要求换人的缘故。服务开始好转。<br/>\n最近几天基本反馈后第二天必有回电。<br/>\n虽然还是很被动，但是起码感觉到是在跟一个帮我处理问题的人交流了。</p>\n<p>————————</p>\n<p>目前还没卸载 pdd 。</p>\n", "last_modified": 1610906708, "replies": 69, "id": 745758}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1608686051", "name": "apple", "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1608686051", "title": "Apple", "url": "https://www.v2ex.com/go/apple", "topics": 13704, "footer": "", "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。", "title_alternative": "Apple", "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1608686051", "stars": 1678, "aliases": [], "root": false, "id": 184, "parent_node_name": "hardware"}, "member": {"username": "lzy4223", "website": "l", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/d11f/1b8c/56273_mini.png?m=1464217873", "bio": "", "url": "https://www.v2ex.com/u/lzy4223", "tagline": "", "twitter": "le", "created": 1392787035, "avatar_large": "https://cdn.v2ex.com/avatar/d11f/1b8c/56273_mini.png?m=1464217873", "avatar_mini": "https://cdn.v2ex.com/avatar/d11f/1b8c/56273_mini.png?m=1464217873", "location": "guangzhou", "btc": "", "id": 56273}, "last_reply_by": "Y29tL2gwd2Fy", "last_touched": 1610954512, "title": "苹果是不是已经决定了不解决 iphone12 屏幕发黄的问题了？", "url": "https://www.v2ex.com/t/745763", "created": 1610928726, "content": "iphone12 屏幕发黄的问题很严重，退货了。\r\n\r\n打算等苹果从硬件层面解决这个问题再买。\r\n\r\n但问题是，苹果是不是完全没有打算解决这个问题？", "content_rendered": "<p>iphone12 屏幕发黄的问题很严重，退货了。</p>\n<p>打算等苹果从硬件层面解决这个问题再买。</p>\n<p>但问题是，苹果是不是完全没有打算解决这个问题？</p>\n", "last_modified": 1610928726, "replies": 57, "id": 745763}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1610122510", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1610122510", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 42788, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1610122510", "stars": 7200, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"username": "zzzzzzggggggg", "website": "", "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/avatar/2a7f/7d54/365070_mini.png?m=1604026276", "bio": "认真做技术，不仅做技术。", "url": "https://www.v2ex.com/u/zzzzzzggggggg", "tagline": "", "twitter": null, "created": 1542883176, "avatar_large": "https://cdn.v2ex.com/avatar/2a7f/7d54/365070_mini.png?m=1604026276", "avatar_mini": "https://cdn.v2ex.com/avatar/2a7f/7d54/365070_mini.png?m=1604026276", "location": "", "btc": null, "id": 365070}, "last_reply_by": "zzzzzzggggggg", "last_touched": 1610952148, "title": "2021 前端会有什么新变化？", "url": "https://www.v2ex.com/t/745716", "created": 1610885775, "content": "2021 前端会有什么新变化，首先需要搞清楚我们关注这些新技术的目的是什么？\r\n\r\n相信对于关注这个问题的人包括我来说，除了了解技术发展风向作为饭后谈资以外，最重要的是看能不能在公司内部落地、做出一番成绩来，当然升职加薪那都是后话了。\r\n# 回望过去\r\n首先定义一下我说的“过去”是 2019 年及以前。\r\n\r\n以史为镜，可以知兴替。回望一下过去，有利于我们对未来做出更好的判断。我们先细数一下过去的几年间大厂的前端都在做什么。\r\n\r\n## 前端工程化\r\n\r\n这个应该是前几年社区讨论的最多、面试问到最多的一个名词，那么什么是前端工程化呢？我觉得需要从以下几个概念开始讲起。\r\n\r\n### 模块化\r\n\r\n先说 JavaScript 的模块化。\r\n\r\n从 ES6 开始，JavaScript 语言有了自己原生支持的模块化方案——ES6 Module，这样有个好处，前端们不用去使用社区定制的模块加载方案，直接使用统一的就好。统一模块方案之后，既可以不用额外引入模块化解决方案的代码，又可以为后面的自动化统一处理做好准备。\r\n\r\n再说 CSS 的模块化。\r\n\r\nCSS 模块化主要是解决的 CSS 类名冲突的问题，比如常见的 BEM 约定以及社区丰富的 CSS module 解决方案，有了这些东西，前端工程多人开发就可以优雅的解决类名冲突的问题。\r\n\r\n### 组件化\r\n\r\n随着 React 生态和 Vue 生态在国内各大前端团队的落地，组件化开发已经是标配了，并且开源社区也沉淀出了以 Element 、Ant Design 为代表的优秀组件库。\r\n\r\n大厂的程序员们在组件的概念上又做了一层抽象和封装，比如以业务组件和业务区块为抽象的中后台前端解决方案 Ant Design Pro，并且它还在前端工具库、前端 UI 设计语言等等方案做了统一。\r\n\r\n### 自动化\r\n\r\n首先是开发的自动化。\r\n\r\nwebpack 和 nodejs 在开发的自动化上起了很大的作用。前端项目本地化开发的 server 由 nodejs （常用，也不一定非得是 nodejs ）提供，开发过程中的各种辅助性 plugin 和 loader 都由 webpack 生态提供，上线前的代码打包、代码分割、资源处理也由 webpack 操作，可以说过去几年间很多前端在职业晋升上都吃了引入 webpack 和 nodejs 的红利。\r\n\r\n再说 babel，有了 babel 的配合，前端可以写高版本的 JavaScript 方法，配合 webpack loader，自动编译成低版本 JavaScript，前端能力再次得到提升。\r\n\r\n其次是部署发布的自动化。\r\n\r\n这个应该是很多大厂前端基建团队做的事情，比如持续发布、版本控制、内部 cdn 建设等等。\r\n\r\n## 大前端\r\n\r\n这也是个在过去几年炒的很热的词，不过这个词不仅仅是炒作，它也实实在在的扩展了前端的能力以及现有的公司组织架构，比如据我所知有的公司移动端和前端就会划分到同一个团队管理，统称大前端团队。\r\n\r\n### nodejs\r\n\r\n这个在前端工程化部分已经说过一些，这里再次提起是因为在工程化中 nodejs 扮演的角色是提供 nodejs 环境以及部分后端能力，而在大前端团队里是实实在在的存在 nodejs 工程师角色和 nodejs 项目的。比如说在前后端分离的过程中，部分公司（比如阿里淘宝）会发展出一个中间层的东西，这可以理解为是一个大前端团队维护的业务接口聚合层，前端写接口肯定是使用 nodejs 最顺手，而且 nodejs 生态也在蓬勃发展，比如早些年的 TJ 大神一人之力扛起半个 nodejs 生态圈，涌现了 koa 、express 这样的基于中间件的开发库，再到后来阿里巴巴的 egg，再到 Nest.js ，现在基本已经没有裸写 nodejs api 的了。\r\n\r\n### 跨端\r\n\r\n先说说手机端\r\n\r\n首先，最直接的跨端就是在 APP 壳子里面套 HTML 页面来开发，这种方案也催生了很多 hybrid 解决方案，前端也需要去了解客户端的知识以及 JavaScript Bridge 的设计，同时也减少了 APP 客户端工程师的岗位😂\r\n\r\n然后，随着 React 生态蓬勃发展，Facebook 开源了一个跨平台移动应用开发框架——ReactNative，它可以让你以 React 的前端语法来开发移动应用，本质就是虚拟 DOM 映射原生 UI 元素、通过 bridge 调用原生 API，这种思路让前端的触手伸到了移动开发，也促成了大前端团队的建设。Vue 生态也有阿里发起的 Weex 移动开发框架，原理类似。\r\n\r\n再后来，Flutter 出现了，它也是一个跨端的开发框架，准确来说它和 JavaScript 生态关系不大，使用 Dart 语言开发 APP，并且有自己的跨平台自绘引擎来保证多端 UI 表现一致，但因为也是一种跨端的解决方案，所以也受到了大量前端工程师的关注和学习。\r\n\r\n最后，还是要提一嘴小程序，这个技术方案其实是商业的产物，各个公司都想把内容和生态留在自家的 APP 里，所以从微信小程序开始（微信不是最早，但是发展的最好），阿里、百度、字节跳动等等这些公司都有了自家的小程序。\r\n\r\n再说说桌面端\r\n\r\n桌面端据我了解使用的比较多的是 Electron，它可以让前端以 JavaScript 来开发出桌面应用，比如字节跳动的飞书桌面端就是使用 Electron 来做的。\r\n\r\n## 总结过去\r\n\r\n从过去这些发展的技术可以看出来，前端主要是在做统一化、工程化、生态化的事情，从早些年间的刀耕火种跨越到比较完善的工程化开发，前端的能力范围也得到了扩展，以前不能做的事情现在可以做了。\r\n\r\n很多互联网公司的前端高 p 也是在这一波浪潮中晋升，得到了更好的职业发展。\r\n\r\n# 分析现在\r\n\r\n首先定义一下我说的“现在”是 2020 年左右。\r\n\r\n现在基本上各大公司的前端工程化改造大体完成，各种改造方案、组件库都层出不穷，所以前端又有新玩法了。\r\n\r\n## Serverless\r\n\r\n准确来说，Serverless 并不是前端的技术领域，因为它解决的是让开发者不用关心服务器底层架构和运维工作，形成一种“无服务器”的假象。\r\n\r\n那为什么这个技术在前端领域会受到追捧呢？\r\n\r\n因为这个技术刚好解决了整个开发链条中前端缺失的能力，即服务端底层和运维能力。各个大公司的前端团队也都在尝试把 Serverless 落地，比如在知乎上就可以看到很多关于 Serverless 的布道。\r\n\r\n## NoCode 和 LowCode\r\n\r\n在我看来，低代码（ LowCode ）和零代码（ NoCode ）产品，是前端对现有能力整合之后，对其他领域的一种扩张和赋能。其实各大公司在某些特定业务场景中早已经有相关的产品落地了，比如广告业务、电商运营的繁多的落地页需求可以使用零代码产品来解决，全程不需要代码参与。\r\n\r\n那既然之前有，现在为什么又提起低代码和零代码呢？我觉得原因有两个：\r\n1. 之前解决的只是某些特定业务场景的问题，现在想把这种能力逐渐扩展到更多的业务场景，比如扩展到公司外部，来做 toC 的使用。\r\n2. 之前解决的只是页面级的问题，现在想解决应用级的问题。\r\n\r\n## 总结现在\r\n\r\n当然了，现在的讨论的比较多的、正在进行中的技术和解决方案肯定不止我说到的这两种，欢迎大家补充。\r\n\r\n目前大公司的前端们也在结合业务在做这方面的事情，如果你所在的团队在做相关的事情，不如加入进去，不管是技术或职业发展，都会有比较好的收获。\r\n\r\n# 展望未来\r\n\r\n## React Server Component\r\n这个目前还在提案中，未来成熟之后极有可能改变前端的开发方式，前端 React 生态的范围又向服务度端扩展了，一波新的基础建设、技术方案可以考虑了。\r\n\r\n## Serverless 大规模落地\r\n按照现在社区以及各大公司内部的发展，Serverless 应该会在 2021 有大规模的落地，运维岗位会进一步减少😸\r\n\r\n## NoCode 和 LowCode 持续发展\r\n低代码这个概念在 2021 年初因为钉钉发布会被再次带火，因为钉钉的使用量以及 toB 端市场有很多内部应用的搭建需求，所以它强调这个概念也不奇怪。\r\n\r\n相信有像阿里钉钉这样的企业的推动，低代码和零代码会发展的更好。\r\n\r\n# 不用焦虑\r\n说了这么多，是不是更焦虑了？其实不用。\r\n\r\nReact 核心成员 Dan Abramov 都大方承认了他并不了解 Flex 、Webpack 等等技术，没试过 Serverless 等等“时髦”技术，很多你会的技术他不会，照很多招聘标准来看他还评不上阿里 P7，但是这并不影响他能成为 React 核心成员，以及他在他自己擅长的领域的造诣。\r\n\r\n所以，不用都会，选定一个自己喜欢的、能做出成绩的技术，深入下去吧！", "content_rendered": "<p>2021 前端会有什么新变化，首先需要搞清楚我们关注这些新技术的目的是什么？</p>\n<p>相信对于关注这个问题的人包括我来说，除了了解技术发展风向作为饭后谈资以外，最重要的是看能不能在公司内部落地、做出一番成绩来，当然升职加薪那都是后话了。</p>\n<h1>回望过去</h1>\n<p>首先定义一下我说的“过去”是 2019 年及以前。</p>\n<p>以史为镜，可以知兴替。回望一下过去，有利于我们对未来做出更好的判断。我们先细数一下过去的几年间大厂的前端都在做什么。</p>\n<h2>前端工程化</h2>\n<p>这个应该是前几年社区讨论的最多、面试问到最多的一个名词，那么什么是前端工程化呢？我觉得需要从以下几个概念开始讲起。</p>\n<h3>模块化</h3>\n<p>先说 JavaScript 的模块化。</p>\n<p>从 ES6 开始，JavaScript 语言有了自己原生支持的模块化方案——ES6 Module，这样有个好处，前端们不用去使用社区定制的模块加载方案，直接使用统一的就好。统一模块方案之后，既可以不用额外引入模块化解决方案的代码，又可以为后面的自动化统一处理做好准备。</p>\n<p>再说 CSS 的模块化。</p>\n<p>CSS 模块化主要是解决的 CSS 类名冲突的问题，比如常见的 BEM 约定以及社区丰富的 CSS module 解决方案，有了这些东西，前端工程多人开发就可以优雅的解决类名冲突的问题。</p>\n<h3>组件化</h3>\n<p>随着 React 生态和 Vue 生态在国内各大前端团队的落地，组件化开发已经是标配了，并且开源社区也沉淀出了以 Element 、Ant Design 为代表的优秀组件库。</p>\n<p>大厂的程序员们在组件的概念上又做了一层抽象和封装，比如以业务组件和业务区块为抽象的中后台前端解决方案 Ant Design Pro，并且它还在前端工具库、前端 UI 设计语言等等方案做了统一。</p>\n<h3>自动化</h3>\n<p>首先是开发的自动化。</p>\n<p>webpack 和 nodejs 在开发的自动化上起了很大的作用。前端项目本地化开发的 server 由 nodejs （常用，也不一定非得是 nodejs ）提供，开发过程中的各种辅助性 plugin 和 loader 都由 webpack 生态提供，上线前的代码打包、代码分割、资源处理也由 webpack 操作，可以说过去几年间很多前端在职业晋升上都吃了引入 webpack 和 nodejs 的红利。</p>\n<p>再说 babel，有了 babel 的配合，前端可以写高版本的 JavaScript 方法，配合 webpack loader，自动编译成低版本 JavaScript，前端能力再次得到提升。</p>\n<p>其次是部署发布的自动化。</p>\n<p>这个应该是很多大厂前端基建团队做的事情，比如持续发布、版本控制、内部 cdn 建设等等。</p>\n<h2>大前端</h2>\n<p>这也是个在过去几年炒的很热的词，不过这个词不仅仅是炒作，它也实实在在的扩展了前端的能力以及现有的公司组织架构，比如据我所知有的公司移动端和前端就会划分到同一个团队管理，统称大前端团队。</p>\n<h3>nodejs</h3>\n<p>这个在前端工程化部分已经说过一些，这里再次提起是因为在工程化中 nodejs 扮演的角色是提供 nodejs 环境以及部分后端能力，而在大前端团队里是实实在在的存在 nodejs 工程师角色和 nodejs 项目的。比如说在前后端分离的过程中，部分公司（比如阿里淘宝）会发展出一个中间层的东西，这可以理解为是一个大前端团队维护的业务接口聚合层，前端写接口肯定是使用 nodejs 最顺手，而且 nodejs 生态也在蓬勃发展，比如早些年的 TJ 大神一人之力扛起半个 nodejs 生态圈，涌现了 koa 、express 这样的基于中间件的开发库，再到后来阿里巴巴的 egg，再到 Nest.js ，现在基本已经没有裸写 nodejs api 的了。</p>\n<h3>跨端</h3>\n<p>先说说手机端</p>\n<p>首先，最直接的跨端就是在 APP 壳子里面套 HTML 页面来开发，这种方案也催生了很多 hybrid 解决方案，前端也需要去了解客户端的知识以及 JavaScript Bridge 的设计，同时也减少了 APP 客户端工程师的岗位😂</p>\n<p>然后，随着 React 生态蓬勃发展，Facebook 开源了一个跨平台移动应用开发框架——ReactNative，它可以让你以 React 的前端语法来开发移动应用，本质就是虚拟 DOM 映射原生 UI 元素、通过 bridge 调用原生 API，这种思路让前端的触手伸到了移动开发，也促成了大前端团队的建设。Vue 生态也有阿里发起的 Weex 移动开发框架，原理类似。</p>\n<p>再后来，Flutter 出现了，它也是一个跨端的开发框架，准确来说它和 JavaScript 生态关系不大，使用 Dart 语言开发 APP，并且有自己的跨平台自绘引擎来保证多端 UI 表现一致，但因为也是一种跨端的解决方案，所以也受到了大量前端工程师的关注和学习。</p>\n<p>最后，还是要提一嘴小程序，这个技术方案其实是商业的产物，各个公司都想把内容和生态留在自家的 APP 里，所以从微信小程序开始（微信不是最早，但是发展的最好），阿里、百度、字节跳动等等这些公司都有了自家的小程序。</p>\n<p>再说说桌面端</p>\n<p>桌面端据我了解使用的比较多的是 Electron，它可以让前端以 JavaScript 来开发出桌面应用，比如字节跳动的飞书桌面端就是使用 Electron 来做的。</p>\n<h2>总结过去</h2>\n<p>从过去这些发展的技术可以看出来，前端主要是在做统一化、工程化、生态化的事情，从早些年间的刀耕火种跨越到比较完善的工程化开发，前端的能力范围也得到了扩展，以前不能做的事情现在可以做了。</p>\n<p>很多互联网公司的前端高 p 也是在这一波浪潮中晋升，得到了更好的职业发展。</p>\n<h1>分析现在</h1>\n<p>首先定义一下我说的“现在”是 2020 年左右。</p>\n<p>现在基本上各大公司的前端工程化改造大体完成，各种改造方案、组件库都层出不穷，所以前端又有新玩法了。</p>\n<h2>Serverless</h2>\n<p>准确来说，Serverless 并不是前端的技术领域，因为它解决的是让开发者不用关心服务器底层架构和运维工作，形成一种“无服务器”的假象。</p>\n<p>那为什么这个技术在前端领域会受到追捧呢？</p>\n<p>因为这个技术刚好解决了整个开发链条中前端缺失的能力，即服务端底层和运维能力。各个大公司的前端团队也都在尝试把 Serverless 落地，比如在知乎上就可以看到很多关于 Serverless 的布道。</p>\n<h2>NoCode 和 LowCode</h2>\n<p>在我看来，低代码（ LowCode ）和零代码（ NoCode ）产品，是前端对现有能力整合之后，对其他领域的一种扩张和赋能。其实各大公司在某些特定业务场景中早已经有相关的产品落地了，比如广告业务、电商运营的繁多的落地页需求可以使用零代码产品来解决，全程不需要代码参与。</p>\n<p>那既然之前有，现在为什么又提起低代码和零代码呢？我觉得原因有两个：</p>\n<ol>\n<li>之前解决的只是某些特定业务场景的问题，现在想把这种能力逐渐扩展到更多的业务场景，比如扩展到公司外部，来做 toC 的使用。</li>\n<li>之前解决的只是页面级的问题，现在想解决应用级的问题。</li>\n</ol>\n<h2>总结现在</h2>\n<p>当然了，现在的讨论的比较多的、正在进行中的技术和解决方案肯定不止我说到的这两种，欢迎大家补充。</p>\n<p>目前大公司的前端们也在结合业务在做这方面的事情，如果你所在的团队在做相关的事情，不如加入进去，不管是技术或职业发展，都会有比较好的收获。</p>\n<h1>展望未来</h1>\n<h2>React Server Component</h2>\n<p>这个目前还在提案中，未来成熟之后极有可能改变前端的开发方式，前端 React 生态的范围又向服务度端扩展了，一波新的基础建设、技术方案可以考虑了。</p>\n<h2>Serverless 大规模落地</h2>\n<p>按照现在社区以及各大公司内部的发展，Serverless 应该会在 2021 有大规模的落地，运维岗位会进一步减少😸</p>\n<h2>NoCode 和 LowCode 持续发展</h2>\n<p>低代码这个概念在 2021 年初因为钉钉发布会被再次带火，因为钉钉的使用量以及 toB 端市场有很多内部应用的搭建需求，所以它强调这个概念也不奇怪。</p>\n<p>相信有像阿里钉钉这样的企业的推动，低代码和零代码会发展的更好。</p>\n<h1>不用焦虑</h1>\n<p>说了这么多，是不是更焦虑了？其实不用。</p>\n<p>React 核心成员 Dan Abramov 都大方承认了他并不了解 Flex 、Webpack 等等技术，没试过 Serverless 等等“时髦”技术，很多你会的技术他不会，照很多招聘标准来看他还评不上阿里 P7，但是这并不影响他能成为 React 核心成员，以及他在他自己擅长的领域的造诣。</p>\n<p>所以，不用都会，选定一个自己喜欢的、能做出成绩的技术，深入下去吧！</p>\n", "last_modified": 1610885775, "replies": 48, "id": 745716}]