[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/03af/dbd6/63_large.png?m=1644490200", "name": "java", "avatar_normal": "https://cdn.v2ex.com/navatar/03af/dbd6/63_normal.png?m=1644490200", "title": "Java", "url": "https://www.v2ex.com/go/java", "topics": 5546, "footer": "", "header": "Sun 公司发明，被广泛使用的一门编程语言。", "title_alternative": "Java", "avatar_mini": "https://cdn.v2ex.com/navatar/03af/dbd6/63_mini.png?m=1644490200", "stars": 5345, "aliases": [], "root": false, "id": 63, "parent_node_name": "programming"}, "member": {"id": 602839, "username": "kachu673", "url": "https://www.v2ex.com/u/kachu673", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/3f5b31b2a220e0eff1484ee0d4895003?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/3f5b31b2a220e0eff1484ee0d4895003?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/3f5b31b2a220e0eff1484ee0d4895003?s=73&d=retro", "created": 1669002607, "last_modified": 1688229400}, "last_reply_by": "iintothewind", "last_touched": 1690653712, "title": "Spring 开发，流程冗余", "url": "https://www.v2ex.com/t/960762", "created": 1690607164, "deleted": 0, "content": "使用 SpringBoot 开发项目，少不了要写 Controller 、Service 、Mapper ，虽然 MP 可以一定程度上简化后两者的开发，但必要时候仍要将三个过程全部走完。所以我想请教各位网友：\r\n1. 其他框架有没有简化这个步骤的？（我不在意代码的耦合，以及各种代码入侵）\r\n2. 能推荐一些快速开发的框架吗？\r\n3. 如果可以，我喜欢用 php 来开发（我觉得个人开发者掌握 php 是非常有必要的）\r\n4. 当然，使用 js 、python 、go 、cpp 的框架我也都可以接受。", "content_rendered": "<p>使用 SpringBoot 开发项目，少不了要写 Controller 、Service 、Mapper ，虽然 MP 可以一定程度上简化后两者的开发，但必要时候仍要将三个过程全部走完。所以我想请教各位网友：</p>\n<ol>\n<li>其他框架有没有简化这个步骤的？（我不在意代码的耦合，以及各种代码入侵）</li>\n<li>能推荐一些快速开发的框架吗？</li>\n<li>如果可以，我喜欢用 php 来开发（我觉得个人开发者掌握 php 是非常有必要的）</li>\n<li>当然，使用 js 、python 、go 、cpp 的框架我也都可以接受。</li>\n</ol>\n", "last_modified": 1690607164, "replies": 54, "id": 960762}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6b18/0037/1013_large.png?m=1528158910", "name": "jd", "avatar_normal": "https://cdn.v2ex.com/navatar/6b18/0037/1013_normal.png?m=1528158910", "title": "京东", "url": "https://www.v2ex.com/go/jd", "topics": 1714, "footer": "", "header": "关于使用 jd.com 过程中遇到的问题的讨论", "title_alternative": "京东", "avatar_mini": "https://cdn.v2ex.com/navatar/6b18/0037/1013_mini.png?m=1528158910", "stars": 200, "aliases": [], "root": false, "id": 1013, "parent_node_name": "internet"}, "member": {"id": 398384, "username": "bloodkey", "url": "https://www.v2ex.com/u/bloodkey", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=73&d=retro", "created": 1554312054, "last_modified": 1554312054}, "last_reply_by": "bloodkey", "last_touched": 1690652023, "title": "垃圾京东商家售假，在有完整证明卖家售假证据的情况下，不处理售假商家", "url": "https://www.v2ex.com/t/960778", "created": 1690612291, "deleted": 0, "content": "有完整证据证明商家售假的情况下，刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。京东不处理售假商家！\r\n\r\n事情详细经过如下：\r\n\r\n==============\r\n\r\n23 年 4 月份的订单，卖家特别狡猾，物流订单没有上传到京东，在京东平台显示还在出库\r\n\r\n \r\n\r\n但是物流包裹已经收到了，商品防伪验证通过不了，气味也不对，以前买过很多正品，可以 100%确认是假货。\r\n\r\n \r\n\r\n电话京东客服投诉，说不能证明包裹是卖家发的，所以没法处理卖家。我说，以卖家长时间不发货处理卖家，京东客服也说是内部信息，没法告诉我处理结果，大半个月不发货，客服说对买家也没有任何赔偿！！！！！\r\n\r\n \r\n\r\n收到的包裹产品名称和数量，发货地址和店铺营业执照地点一样。快递单上面发货人的电话是空号！虽然我没法证明这个包裹是卖家发的，但明眼人都知道这个包裹是谁发送的\r\n\r\n投诉不发货后，商家 5 月中旬上传了新的快递单号，但是快递物流三个月没有动静。虚假发货，投诉，说是快递丢件。\r\n\r\n \r\n一直在各个地方投诉，3 个月投诉没有结果。\r\n\r\n最近拿到了新的证据，韵达客服电话证明了，两个包裹都是同一个商家发货的。（两个包裹都是韵达的）\r\n\r\n那么就是说证明了卖家售假。给京东提供了电话录音。\r\n\r\n刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。\r\n\r\n也就是说，有完整证据证明商家售假的情况下，京东不处理售假商家！\r\n\r\n\r\n所有过程都有电话录音，已经投诉到北京 12315 了\r\n\r\n\r\n韵达也是垃圾，不对收件人提供寄件人信息，投诉了几个月也一直不提供。后面也只说两个包裹是同一个商家发出来的。韵达客服说 5 月份丢件的那个包裹有补发，问补发的快递单号又没有，满嘴谎言，一直踢皮球\r\n\r\n保证上述真实可靠，有兴趣的可以提供完整截图，录音\r\n\r\n有人可以提一下处理意见没？ 京东，北京 12315 电话，韵达，国家邮政总局网页，支付宝 12315 投诉，都试了，到现在还没结果", "content_rendered": "<p>有完整证据证明商家售假的情况下，刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。京东不处理售假商家！</p>\n<p>事情详细经过如下：</p>\n<p>==============</p>\n<p>23 年 4 月份的订单，卖家特别狡猾，物流订单没有上传到京东，在京东平台显示还在出库</p>\n<p>但是物流包裹已经收到了，商品防伪验证通过不了，气味也不对，以前买过很多正品，可以 100%确认是假货。</p>\n<p>电话京东客服投诉，说不能证明包裹是卖家发的，所以没法处理卖家。我说，以卖家长时间不发货处理卖家，京东客服也说是内部信息，没法告诉我处理结果，大半个月不发货，客服说对买家也没有任何赔偿！！！！！</p>\n<p>收到的包裹产品名称和数量，发货地址和店铺营业执照地点一样。快递单上面发货人的电话是空号！虽然我没法证明这个包裹是卖家发的，但明眼人都知道这个包裹是谁发送的</p>\n<p>投诉不发货后，商家 5 月中旬上传了新的快递单号，但是快递物流三个月没有动静。虚假发货，投诉，说是快递丢件。</p>\n<p>一直在各个地方投诉，3 个月投诉没有结果。</p>\n<p>最近拿到了新的证据，韵达客服电话证明了，两个包裹都是同一个商家发货的。（两个包裹都是韵达的）</p>\n<p>那么就是说证明了卖家售假。给京东提供了电话录音。</p>\n<p>刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。</p>\n<p>也就是说，有完整证据证明商家售假的情况下，京东不处理售假商家！</p>\n<p>所有过程都有电话录音，已经投诉到北京 12315 了</p>\n<p>韵达也是垃圾，不对收件人提供寄件人信息，投诉了几个月也一直不提供。后面也只说两个包裹是同一个商家发出来的。韵达客服说 5 月份丢件的那个包裹有补发，问补发的快递单号又没有，满嘴谎言，一直踢皮球</p>\n<p>保证上述真实可靠，有兴趣的可以提供完整截图，录音</p>\n<p>有人可以提一下处理意见没？ 京东，北京 12315 电话，韵达，国家邮政总局网页，支付宝 12315 投诉，都试了，到现在还没结果</p>\n", "last_modified": 1690612832, "replies": 48, "id": 960778}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1689070442", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1689070442", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 57653, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1689070442", "stars": 8506, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 254353, "username": "FaiChou", "url": "https://www.v2ex.com/u/FaiChou", "website": "https://faichou.com", "twitter": "FaiChou_zh", "psn": "", "github": "FaiChou", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_mini.png?m=1684739460", "avatar_normal": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_normal.png?m=1684739460", "avatar_large": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_large.png?m=1684739460", "avatar_xlarge": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_xlarge.png?m=1684739460", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_xlarge.png?m=1684739460", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_xlarge.png?m=1684739460", "created": 1505371596, "last_modified": 1684739460}, "last_reply_by": "fox0001", "last_touched": 1690640280, "title": "使用这个公钥是否能解密此加密信息？", "url": "https://www.v2ex.com/t/960808", "created": 1690623316, "deleted": 0, "content": "使用私钥 rsa 加密内容：\r\n\r\n```\r\ngl9E9ye5acVdn5MusJj0pay6y+i6qDna8DTSNHkkPjBsEE9DJ34cKhrCiNuRWIxY4+DQmrrQPMzibgCvP+3unWelxwmzMRzmSQQDTm9Z+oBiHGCcqWXtz47H/b1uoC4T6ZXkTrtuYAOVlRDn+2xKPcO9qpq5gS+cU6SPSRcRP/cAthqnLQ0FJJjY2vOqsoKda5IStxLjRSJPXs5zmJFVH/ii7J/u1vp8R6sUUNLhJmahFlODgOoEPDTW50k6O5LS8MYniZLvI/Czj9bt1z850rXGl3wHvfwmhIWH8umR5NqaPJ8/kDJXGk5ejHoljRN2GJ4iL48hvJawsoCNHpktrlqRtE6geQF74gB5hLzSvY2ZUcRo1fx7DxpPnRqfx7ctf6m7nC0vohax4NvdYJ7TWnK+oDGCJFFJRNg+L/DJlcckjWmL3nGoFYgHSfVwZXfTLOcKOtx8Pvd2Udjx+9t2/T4DqJNmhVzBvX/tEqBlv+deAbk8DaGx4FcBWm1b5j2qMUqA33OVIYLOzgFFzdMF8OqEvAPwqyg1pHjt9iPzWXWVjzFA2Z1yVou2TwZ6Z9QqrjaGyK6KfpT+h241FgCVrZgbg8g/JWU7wFHQjiEjJTSTZu6FeweQpRUuUy/A8LS0Wabh0eZQ0hcPcRBwf2gGOlmbfCojrfZNHbjRkh0Rz6YAq3T5q5VdfsKXBUMJcTilfUGRzIivVAFmM5Lx5WzgV7LsPSIuEq5sNFEypk5rrKplTirq3qE6maI3+KKbUccAs2ak6zGLtfFnJasXivwYPrivUnTDz9cV1dVFYKe72/aGnNby2TxWvNpbDu60T8BlX1CFwFj+JQyDqFu+EvgBTQ==\r\n```\r\n\r\n对应的公钥：\r\n\r\n```\r\n-----BEGIN PUBLIC KEY-----\r\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCGhpgMD1okxLnUMCDNLCJwP/P0\r\nUHVlKQWLHPiPCbhgITZHcZim4mgxSWWb0SLDNZL9ta1HlErR6k02xrFyqtYzjDu2\r\nrGInUC0BCZOsln0a7wDwyOA43i5NO8LsNory6fEKbx7aT3Ji8TZCDAfDMbhxvxOf\r\ndPMBDjxP5X3zr7cWgwIDAQAB\r\n-----END PUBLIC KEY-----\r\n```\r\n\r\n\r\n如果解密出的结果像是下面这样，应该是对的：\r\n\r\n```\r\n{\"2658844581501957149\":{\"file_name\":\"wwdc2023-10117_hd.mp4\",\"file_size\":\"100597894\",\"pick_code\":\"b12x4iiejvkkq83a\",\"url\":{\"url\":\"http:\\/\\/xxx.xxx.com\\/xxx\\/wwdc2023-10117_hd.mp4?t=1690607362&u=101248331&s=1048576&d=658578066-b12x4iiejvkkq83a-0&c=2&f=1&k=ddb3d920081771b2f40ee75164c5bb1b&us=52428800&uc=10&v=1\",\"client\":2,\"desc\":null,\"isp\":null,\"oss_id\":\"fhnfile\\/xxx\",\"ooid\":\"\"}}}\r\n```\r\n\r\n注意由于加密内容数据比较大，需要分段解密。\r\n\r\n不管用什么方法，python/go/java 还是网上的在线解密工具，只要能解密出来即可。\r\n\r\n我用 swift 写了分段解密，结果解密失败，用网上在线的解密工具也是失败，不知道网上的工具是不是由于不支持分段解密才失败的。\r\n\r\n下面是我用 Swift 写的方法：\r\n\r\n```swift\r\nimport Security\r\nfunc convertPublicKey(pemString: String) -> SecKey? {\r\n    // 1. Remove headers, newlines and spaces\r\n    let keyString = pemString\r\n        .replacingOccurrences(of: \"-----BEGIN PUBLIC KEY-----\", with: \"\")\r\n        .replacingOccurrences(of: \"-----END PUBLIC KEY-----\", with: \"\")\r\n        .replacingOccurrences(of: \"\\n\", with: \"\")\r\n        .replacingOccurrences(of: \" \", with: \"\")\r\n\r\n    // 2. Convert base64 string to Data\r\n    guard let keyData = Data(base64Encoded: keyString) else {\r\n        return nil\r\n    }\r\n\r\n    // 3. Create key dictionary\r\n    let keyDict: [CFString: Any] = [\r\n        kSecAttrKeyType: kSecAttrKeyTypeRSA,\r\n        kSecAttrKeyClass: kSecAttrKeyClassPublic,\r\n        kSecAttrKeySizeInBits: NSNumber(value: 2048),\r\n        kSecReturnPersistentRef: true\r\n    ]\r\n\r\n    // 4. Create SecKey from Data\r\n    var error: Unmanaged<CFError>?\r\n    guard let key = SecKeyCreateWithData(keyData as CFData, keyDict as CFDictionary, &error) else {\r\n        // Handle the error here\r\n        return nil\r\n    }\r\n\r\n    return key\r\n}\r\nlet rsaKeyInSwift = convertPublicKey(pemString: rsaPublicKey)\r\nfunc rsaDecrypt(data: Data) -> Data? {\r\n    let blockSize = SecKeyGetBlockSize(rsaKeyInSwift!)\r\n    var decryptedData = Data()\r\n    for i in stride(from: 0, to: data.count, by: blockSize) {\r\n        let endIndex = min(i + blockSize, data.count)\r\n        let chunk = data[i..<endIndex]\r\n        print(chunk)\r\n        var error: Unmanaged<CFError>?\r\n        guard let decryptedChunk = SecKeyCreateDecryptedData(\r\n            rsaKeyInSwift!,\r\n            .rsaEncryptionPKCS1,\r\n            chunk as CFData,\r\n            &error\r\n        ) else {\r\n            print(\"Decryption error:\", error.debugDescription)\r\n            return nil\r\n        }\r\n        decryptedData.append(decryptedChunk as Data)\r\n    }\r\n\r\n    return decryptedData\r\n}\r\n```\r\n\r\n报错：\r\n\r\n```\r\nDecryption error: Optional(Swift.Unmanaged<__C.CFErrorRef>(_value: Error Domain=NSOSStatusErrorDomain Code=-50 \"RSAdecrypt wrong input (err -27)\" UserInfo={numberOfErrorsDeep=0, NSDescription=RSAdecrypt wrong input (err -27)}))\r\n\r\n```\r\n\r\n在网上找到了一个开源的项目，它用 go 语言自己实现了 rsa 解密算法，不清楚为什么它不用标准库来解密。我用标准库实现的（ Swift 版本）无法解密。所以不清楚是不是我的代码问题还是其他问题。\r\n\r\n下面是 go 语言开源版本：\r\n\r\n```go\r\nfunc rsaDecrypt(input []byte) []byte {\r\n\toutput := make([]byte, 0)\r\n\tcipherSize, blockSize := len(input), rsaServerKey.Size()\r\n\tfor offset := 0; offset < cipherSize; offset += blockSize {\r\n\t\tsliceSize := blockSize\r\n\t\tif offset+sliceSize > cipherSize {\r\n\t\t\tsliceSize = cipherSize - offset\r\n\t\t}\r\n\r\n\t\tn := big.NewInt(0).SetBytes(input[offset : offset+sliceSize])\r\n\t\tm := big.NewInt(0).Exp(n, big.NewInt(int64(rsaServerKey.E)), rsaServerKey.N)\r\n\t\tb := m.Bytes()\r\n\t\tindex := bytes.IndexByte(b, '\\x00')\r\n\t\tif index < 0 {\r\n\t\t\treturn nil\r\n\t\t}\r\n\t\toutput = append(output, b[index+1:]...)\r\n\t}\r\n\treturn output\r\n}\r\n```\r\n\r\n由于不熟悉 go 语言，大概看了下算法，也是计算 `(n^e) mod N`。\r\n\r\n所以请大家用这个公钥解密上面的内容，能否解密出来？", "content_rendered": "<p>使用私钥 rsa 加密内容：</p>\n<pre><code>gl9E9ye5acVdn5MusJj0pay6y+i6qDna8DTSNHkkPjBsEE9DJ34cKhrCiNuRWIxY4+DQmrrQPMzibgCvP+3unWelxwmzMRzmSQQDTm9Z+oBiHGCcqWXtz47H/b1uoC4T6ZXkTrtuYAOVlRDn+2xKPcO9qpq5gS+cU6SPSRcRP/cAthqnLQ0FJJjY2vOqsoKda5IStxLjRSJPXs5zmJFVH/ii7J/u1vp8R6sUUNLhJmahFlODgOoEPDTW50k6O5LS8MYniZLvI/Czj9bt1z850rXGl3wHvfwmhIWH8umR5NqaPJ8/kDJXGk5ejHoljRN2GJ4iL48hvJawsoCNHpktrlqRtE6geQF74gB5hLzSvY2ZUcRo1fx7DxpPnRqfx7ctf6m7nC0vohax4NvdYJ7TWnK+oDGCJFFJRNg+L/DJlcckjWmL3nGoFYgHSfVwZXfTLOcKOtx8Pvd2Udjx+9t2/T4DqJNmhVzBvX/tEqBlv+deAbk8DaGx4FcBWm1b5j2qMUqA33OVIYLOzgFFzdMF8OqEvAPwqyg1pHjt9iPzWXWVjzFA2Z1yVou2TwZ6Z9QqrjaGyK6KfpT+h241FgCVrZgbg8g/JWU7wFHQjiEjJTSTZu6FeweQpRUuUy/A8LS0Wabh0eZQ0hcPcRBwf2gGOlmbfCojrfZNHbjRkh0Rz6YAq3T5q5VdfsKXBUMJcTilfUGRzIivVAFmM5Lx5WzgV7LsPSIuEq5sNFEypk5rrKplTirq3qE6maI3+KKbUccAs2ak6zGLtfFnJasXivwYPrivUnTDz9cV1dVFYKe72/aGnNby2TxWvNpbDu60T8BlX1CFwFj+JQyDqFu+EvgBTQ==\n</code></pre>\n<p>对应的公钥：</p>\n<pre><code>-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCGhpgMD1okxLnUMCDNLCJwP/P0\nUHVlKQWLHPiPCbhgITZHcZim4mgxSWWb0SLDNZL9ta1HlErR6k02xrFyqtYzjDu2\nrGInUC0BCZOsln0a7wDwyOA43i5NO8LsNory6fEKbx7aT3Ji8TZCDAfDMbhxvxOf\ndPMBDjxP5X3zr7cWgwIDAQAB\n-----END PUBLIC KEY-----\n</code></pre>\n<p>如果解密出的结果像是下面这样，应该是对的：</p>\n<pre><code>{\"2658844581501957149\":{\"file_name\":\"wwdc2023-10117_hd.mp4\",\"file_size\":\"100597894\",\"pick_code\":\"b12x4iiejvkkq83a\",\"url\":{\"url\":\"http:\\/\\/xxx.xxx.com\\/xxx\\/wwdc2023-10117_hd.mp4?t=1690607362&amp;u=101248331&amp;s=1048576&amp;d=658578066-b12x4iiejvkkq83a-0&amp;c=2&amp;f=1&amp;k=ddb3d920081771b2f40ee75164c5bb1b&amp;us=52428800&amp;uc=10&amp;v=1\",\"client\":2,\"desc\":null,\"isp\":null,\"oss_id\":\"fhnfile\\/xxx\",\"ooid\":\"\"}}}\n</code></pre>\n<p>注意由于加密内容数据比较大，需要分段解密。</p>\n<p>不管用什么方法，python/go/java 还是网上的在线解密工具，只要能解密出来即可。</p>\n<p>我用 swift 写了分段解密，结果解密失败，用网上在线的解密工具也是失败，不知道网上的工具是不是由于不支持分段解密才失败的。</p>\n<p>下面是我用 Swift 写的方法：</p>\n<pre><code class=\"language-swift\">import Security\nfunc convertPublicKey(pemString: String) -&gt; SecKey? {\n    // 1. Remove headers, newlines and spaces\n    let keyString = pemString\n        .replacingOccurrences(of: \"-----BEGIN PUBLIC KEY-----\", with: \"\")\n        .replacingOccurrences(of: \"-----END PUBLIC KEY-----\", with: \"\")\n        .replacingOccurrences(of: \"\\n\", with: \"\")\n        .replacingOccurrences(of: \" \", with: \"\")\n\n    // 2. Convert base64 string to Data\n    guard let keyData = Data(base64Encoded: keyString) else {\n        return nil\n    }\n\n    // 3. Create key dictionary\n    let keyDict: [CFString: Any] = [\n        kSecAttrKeyType: kSecAttrKeyTypeRSA,\n        kSecAttrKeyClass: kSecAttrKeyClassPublic,\n        kSecAttrKeySizeInBits: NSNumber(value: 2048),\n        kSecReturnPersistentRef: true\n    ]\n\n    // 4. Create SecKey from Data\n    var error: Unmanaged&lt;CFError&gt;?\n    guard let key = SecKeyCreateWithData(keyData as CFData, keyDict as CFDictionary, &amp;error) else {\n        // Handle the error here\n        return nil\n    }\n\n    return key\n}\nlet rsaKeyInSwift = convertPublicKey(pemString: rsaPublicKey)\nfunc rsaDecrypt(data: Data) -&gt; Data? {\n    let blockSize = SecKeyGetBlockSize(rsaKeyInSwift!)\n    var decryptedData = Data()\n    for i in stride(from: 0, to: data.count, by: blockSize) {\n        let endIndex = min(i + blockSize, data.count)\n        let chunk = data[i..&lt;endIndex]\n        print(chunk)\n        var error: Unmanaged&lt;CFError&gt;?\n        guard let decryptedChunk = SecKeyCreateDecryptedData(\n            rsaKeyInSwift!,\n            .rsaEncryptionPKCS1,\n            chunk as CFData,\n            &amp;error\n        ) else {\n            print(\"Decryption error:\", error.debugDescription)\n            return nil\n        }\n        decryptedData.append(decryptedChunk as Data)\n    }\n\n    return decryptedData\n}\n</code></pre>\n<p>报错：</p>\n<pre><code>Decryption error: Optional(Swift.Unmanaged&lt;__C.CFErrorRef&gt;(_value: Error Domain=NSOSStatusErrorDomain Code=-50 \"RSAdecrypt wrong input (err -27)\" UserInfo={numberOfErrorsDeep=0, NSDescription=RSAdecrypt wrong input (err -27)}))\n\n</code></pre>\n<p>在网上找到了一个开源的项目，它用 go 语言自己实现了 rsa 解密算法，不清楚为什么它不用标准库来解密。我用标准库实现的（ Swift 版本）无法解密。所以不清楚是不是我的代码问题还是其他问题。</p>\n<p>下面是 go 语言开源版本：</p>\n<pre><code class=\"language-go\">func rsaDecrypt(input []byte) []byte {\n\toutput := make([]byte, 0)\n\tcipherSize, blockSize := len(input), rsaServerKey.Size()\n\tfor offset := 0; offset &lt; cipherSize; offset += blockSize {\n\t\tsliceSize := blockSize\n\t\tif offset+sliceSize &gt; cipherSize {\n\t\t\tsliceSize = cipherSize - offset\n\t\t}\n\n\t\tn := big.NewInt(0).SetBytes(input[offset : offset+sliceSize])\n\t\tm := big.NewInt(0).Exp(n, big.NewInt(int64(rsaServerKey.E)), rsaServerKey.N)\n\t\tb := m.Bytes()\n\t\tindex := bytes.IndexByte(b, '\\x00')\n\t\tif index &lt; 0 {\n\t\t\treturn nil\n\t\t}\n\t\toutput = append(output, b[index+1:]...)\n\t}\n\treturn output\n}\n</code></pre>\n<p>由于不熟悉 go 语言，大概看了下算法，也是计算 <code>(n^e) mod N</code>。</p>\n<p>所以请大家用这个公钥解密上面的内容，能否解密出来？</p>\n", "last_modified": 1690623316, "replies": 38, "id": 960808}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1660301119", "name": "create", "avatar_normal": "https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1660301119", "title": "分享创造", "url": "https://www.v2ex.com/go/create", "topics": 20842, "footer": "", "header": "欢迎你在这里发布自己的最新作品！", "title_alternative": "Create", "avatar_mini": "https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1660301119", "stars": 4956, "aliases": [], "root": false, "id": 17, "parent_node_name": "geek"}, "member": {"id": 474551, "username": "lcandy", "url": "https://www.v2ex.com/u/lcandy", "website": "", "twitter": "serilcandy", "psn": "", "github": "lcandy2", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/3dddbd2962a28dc880ff23f9ef50e87a?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/3dddbd2962a28dc880ff23f9ef50e87a?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/3dddbd2962a28dc880ff23f9ef50e87a?s=73&d=retro", "created": 1583468828, "last_modified": 1690044722}, "last_reply_by": "lcandy", "last_touched": 1690648661, "title": "学生党福利🌏校园内网 WebVPN 转换：从此告别校园网访问限制！", "url": "https://www.v2ex.com/t/960716", "created": 1690593392, "deleted": 0, "content": "最近写了一个新项目：校园内网 Web VPN 网址转换工具\r\n\r\n这个工具的主要目标是简化学生和教师访问校园网络资源的过程。\r\n\r\n只需粘贴常规网址，这个工具就能即刻将其转化为学校的 Web VPN 网址。\r\n\r\n## **欢迎来用捏！ [https://wrdvpn.vercel.app/]( https://wrdvpn.vercel.app/)**\r\n\r\n![]( https://raw.githubusercontent.com/lcandy2/webvpn-converter/main/assests/main.png)\r\n\r\n---\r\n\r\n优势：\r\n- 简易操作：只需一次粘贴，无需繁琐的步骤和设置\r\n- 多学校支持：已预设近百所学校的 Web VPN 参数，可直接使用\r\n\r\n**目前支持的学校：**中国科学技术大学, 皖南医学院, 合肥工业大学, 铜陵学院, 皖西学院, 阜阳师范大学, 安徽医科大学, 北京农学院, 清华大学, 北京外国语大学, 中国人民大学, 北京邮电大学, 北京石油化工学院, 北京师范大学, 北京理工大学, 北京大学, 北京航空航天大学, 北京化工大学, 北京建筑大学, 中国青年政治学院, 中国传媒大学, 厦门大学, 福建中医药大学, 甘肃政法大学, 甘肃农业大学, 西北师范大学, 兰州工业学院, 广州医科大学, 肇庆学院, 广州大学, 韩山师范学院, 广东海洋大学, 桂林航天工业学院, 河池学院, 海南大学, 河北环境工程学院, 河北医科大学, 中国人民警察大学, 河北地质大学, 东北大学秦皇岛分校, 河北大学, 河北农业大学, 河北对外经贸职业学院, 洛阳师范学院, 郑州轻工业大学, 郑州航空工业管理学院, 黄冈师范学院, 汉江师范学院, 湖北警官学院, 武汉理工大学, 华中师范大学, 湖北大学, 邵阳学院, 湖南科技大学, 湖南农业大学, 吉首大学, 树达学院, 湖南大学, 南京工程学院, 江苏大学, 河海大学, 无锡学院, 常熟理工学院, 苏州城市学院, 扬州大学, 江苏海洋大学, 天平学院, 苏州科技大学, 吉林大学, 长春人文学院, 渤海大学, 大连理工大学, 沈阳工程学院, 大连工业大学, 沈阳农业大学, 沈阳建筑大学, 辽宁工程技术大学, 宁夏大学, 山东外国语职业技术大学, 枣庄学院, 济南大学, 山东青年政治学院, 山东科技大学, 济宁学院, 山东石油化工学院, 山东财经大学, 青岛大学, 烟台大学, 山东大学, 上海海事大学, 复旦大学, 东华大学, 上海工程技术大学, 上海交通大学医学院, 西安航空学院, 西安科技大学, 西安交通大学, 西安财经大学, 西安理工大学, 西安建筑科技大学, 西安欧亚学院, 西北大学, 安康学院, 西华师范大学, 四川师范大学, 四川传媒学院, 南开大学, 天津城建大学, 天津城建大学（教师）, 云南大学, 云南中医药大学, 玉溪师范学院, 保山学院, 温州医科大学, 嘉兴学院, 嘉兴南湖学院, 中国美术学院, 浙江学院\r\n\r\n同时，还有 加密 和 解密 的 API ，在 [lcandy2/webvpn-converter]( https://github.com/lcandy2/webvpn-converter) 可以看到！\r\n\r\n---\r\n\r\n### 想要改进和建议！谢谢大家！", "content_rendered": "<p>最近写了一个新项目：校园内网 Web VPN 网址转换工具</p>\n<p>这个工具的主要目标是简化学生和教师访问校园网络资源的过程。</p>\n<p>只需粘贴常规网址，这个工具就能即刻将其转化为学校的 Web VPN 网址。</p>\n<h2><strong>欢迎来用捏！ <a href=\"https://wrdvpn.vercel.app/\" rel=\"nofollow\">https://wrdvpn.vercel.app/</a></strong></h2>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://raw.githubusercontent.com/lcandy2/webvpn-converter/main/assests/main.png\"/></p>\n<hr/>\n<p>优势：</p>\n<ul>\n<li>简易操作：只需一次粘贴，无需繁琐的步骤和设置</li>\n<li>多学校支持：已预设近百所学校的 Web VPN 参数，可直接使用</li>\n</ul>\n<p><strong>目前支持的学校：</strong>中国科学技术大学, 皖南医学院, 合肥工业大学, 铜陵学院, 皖西学院, 阜阳师范大学, 安徽医科大学, 北京农学院, 清华大学, 北京外国语大学, 中国人民大学, 北京邮电大学, 北京石油化工学院, 北京师范大学, 北京理工大学, 北京大学, 北京航空航天大学, 北京化工大学, 北京建筑大学, 中国青年政治学院, 中国传媒大学, 厦门大学, 福建中医药大学, 甘肃政法大学, 甘肃农业大学, 西北师范大学, 兰州工业学院, 广州医科大学, 肇庆学院, 广州大学, 韩山师范学院, 广东海洋大学, 桂林航天工业学院, 河池学院, 海南大学, 河北环境工程学院, 河北医科大学, 中国人民警察大学, 河北地质大学, 东北大学秦皇岛分校, 河北大学, 河北农业大学, 河北对外经贸职业学院, 洛阳师范学院, 郑州轻工业大学, 郑州航空工业管理学院, 黄冈师范学院, 汉江师范学院, 湖北警官学院, 武汉理工大学, 华中师范大学, 湖北大学, 邵阳学院, 湖南科技大学, 湖南农业大学, 吉首大学, 树达学院, 湖南大学, 南京工程学院, 江苏大学, 河海大学, 无锡学院, 常熟理工学院, 苏州城市学院, 扬州大学, 江苏海洋大学, 天平学院, 苏州科技大学, 吉林大学, 长春人文学院, 渤海大学, 大连理工大学, 沈阳工程学院, 大连工业大学, 沈阳农业大学, 沈阳建筑大学, 辽宁工程技术大学, 宁夏大学, 山东外国语职业技术大学, 枣庄学院, 济南大学, 山东青年政治学院, 山东科技大学, 济宁学院, 山东石油化工学院, 山东财经大学, 青岛大学, 烟台大学, 山东大学, 上海海事大学, 复旦大学, 东华大学, 上海工程技术大学, 上海交通大学医学院, 西安航空学院, 西安科技大学, 西安交通大学, 西安财经大学, 西安理工大学, 西安建筑科技大学, 西安欧亚学院, 西北大学, 安康学院, 西华师范大学, 四川师范大学, 四川传媒学院, 南开大学, 天津城建大学, 天津城建大学（教师）, 云南大学, 云南中医药大学, 玉溪师范学院, 保山学院, 温州医科大学, 嘉兴学院, 嘉兴南湖学院, 中国美术学院, 浙江学院</p>\n<p>同时，还有 加密 和 解密 的 API ，在 <a href=\"https://github.com/lcandy2/webvpn-converter\" rel=\"nofollow\">lcandy2/webvpn-converter</a> 可以看到！</p>\n<hr/>\n<h3>想要改进和建议！谢谢大家！</h3>\n", "last_modified": 1690593596, "replies": 38, "id": 960716}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/677e/0972/824_large.png?m=1588961795", "name": "router", "avatar_normal": "https://cdn.v2ex.com/navatar/677e/0972/824_normal.png?m=1588961795", "title": "路由器", "url": "https://www.v2ex.com/go/router", "topics": 1548, "footer": "", "header": "数据包流动的乐趣", "title_alternative": "Router", "avatar_mini": "https://cdn.v2ex.com/navatar/677e/0972/824_mini.png?m=1588961795", "stars": 1929, "aliases": [], "root": false, "id": 824, "parent_node_name": "geek"}, "member": {"id": 206459, "username": "xiaopanzi", "url": "https://www.v2ex.com/u/xiaopanzi", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/a2a3/d5b8/206459_mini.png?m=1683524953", "avatar_normal": "https://cdn.v2ex.com/avatar/a2a3/d5b8/206459_normal.png?m=1683524953", "avatar_large": "https://cdn.v2ex.com/avatar/a2a3/d5b8/206459_large.png?m=1683524953", "created": 1481970782, "last_modified": 1683524953}, "last_reply_by": "huguotai", "last_touched": 1690625549, "title": "路由器不在弱电箱，如何实现全屋互联？", "url": "https://www.v2ex.com/t/960711", "created": 1690591851, "deleted": 0, "content": "最近在折腾装修，对网络知识了解很少，查阅了网上很多关于组网的信息，还是有很多疑问。\r\n\r\n为了实现 Wi-Fi 信号可用性更好，我计划把路由器放在客厅的电视柜，而不放在弱电箱。一个简单的方案如下：\r\n\r\n![img]( https://i.imgur.com/Lv8vN6l.png)\r\n\r\n但是这样的话，房间 1/2 通过有线连接的网络和路由器的 Wi-Fi 网络是不是就不在一个网段，从而无法实现互联？\r\n\r\n另外一个疑问是，这样的 Apple TV 要通过有线接入网络的话，是不是可以直接插到路由器的 Lan 口？\r\n\r\n针对全屋互联的问题，我看网上的方式是加两个交换机，一个在弱电箱，一个在路由器。它的原理是什么，如何布线？是否有更好的方案？\r\n\r\n----\r\n再查了一下网上的科普文章，发现  PoE AC 一体化路由器，这是不是比较好的方案？因为有线设备没有那么多，交换机感觉有点大材小用。", "content_rendered": "<p>最近在折腾装修，对网络知识了解很少，查阅了网上很多关于组网的信息，还是有很多疑问。</p>\n<p>为了实现 Wi-Fi 信号可用性更好，我计划把路由器放在客厅的电视柜，而不放在弱电箱。一个简单的方案如下：</p>\n<p><img alt=\"img\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.imgur.com/Lv8vN6l.png\"/></p>\n<p>但是这样的话，房间 1/2 通过有线连接的网络和路由器的 Wi-Fi 网络是不是就不在一个网段，从而无法实现互联？</p>\n<p>另外一个疑问是，这样的 Apple TV 要通过有线接入网络的话，是不是可以直接插到路由器的 Lan 口？</p>\n<p>针对全屋互联的问题，我看网上的方式是加两个交换机，一个在弱电箱，一个在路由器。它的原理是什么，如何布线？是否有更好的方案？</p>\n<hr/>\n<p>再查了一下网上的科普文章，发现  PoE AC 一体化路由器，这是不是比较好的方案？因为有线设备没有那么多，交换机感觉有点大材小用。</p>\n", "last_modified": 1690592256, "replies": 32, "id": 960711}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1689070442", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1689070442", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 57653, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1689070442", "stars": 8506, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 397242, "username": "pipinstallpy", "url": "https://www.v2ex.com/u/pipinstallpy", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/d81d/edeb/397242_mini.png?m=1690210452", "avatar_normal": "https://cdn.v2ex.com/avatar/d81d/edeb/397242_normal.png?m=1690210452", "avatar_large": "https://cdn.v2ex.com/avatar/d81d/edeb/397242_large.png?m=1690210452", "avatar_xlarge": "https://cdn.v2ex.com/avatar/d81d/edeb/397242_xlarge.png?m=1690210452", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/d81d/edeb/397242_xlarge.png?m=1690210452", "created": 1554082898, "last_modified": 1690210452}, "last_reply_by": "tin3w5", "last_touched": 1690632027, "title": "我以为这种金融机构网站都是强制使用 HTTPS 的，没想到平安银行 web 端竟然没有强制使用", "url": "https://www.v2ex.com/t/960735", "created": 1690599433, "deleted": 0, "content": "![Snip20230729_1.png]( https://s2.loli.net/2023/07/29/thOT9cnXJmoPVQ1.png)", "content_rendered": "<p><img alt=\"Snip20230729_1.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://s2.loli.net/2023/07/29/thOT9cnXJmoPVQ1.png\"/></p>\n", "last_modified": 1690599433, "replies": 30, "id": 960735}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/74bb/a227/938_large.png?m=1591791660", "name": "gts", "avatar_normal": "https://cdn.v2ex.com/navatar/74bb/a227/938_normal.png?m=1591791660", "title": "全球工单系统", "url": "https://www.v2ex.com/go/gts", "topics": 9437, "footer": "", "header": "希望这里能够为你遇到的问题找到解决方案", "title_alternative": "Global Ticket System", "avatar_mini": "https://cdn.v2ex.com/navatar/74bb/a227/938_mini.png?m=1591791660", "stars": 1751, "aliases": [], "root": false, "id": 938, "parent_node_name": "geek"}, "member": {"id": 512820, "username": "youngteam99", "url": "https://www.v2ex.com/u/youngteam99", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/4a4f3931bc9c22340a182fceea90bf92?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/4a4f3931bc9c22340a182fceea90bf92?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/4a4f3931bc9c22340a182fceea90bf92?s=73&d=retro", "created": 1602674782, "last_modified": 1643518492}, "last_reply_by": "Bingchunmoli", "last_touched": 1690649592, "title": "无畏契约反作弊项目组嘴一张一合就封十年？", "url": "https://www.v2ex.com/t/960755", "created": 1690605008, "deleted": 0, "content": "从终测开始玩国服，大号前几天无缘无故被封了十年，理由是第三方软件加载，后面玩了小号几天正常没有问题，外服没有问题\r\n\r\n1.没有开挂\r\n2.没有被封机器码\r\n3.没有被盗，历史战绩记录没有其他对局\r\n\r\n给腾讯客服打电话说复核，复核结果就是第三方软件加载，问客服是什么第三方软件也不说，嘴一张一合说你第三方软件加载就是第三方软件加载了。客服让我玩小号，我敢玩？你们也不说是什么软件导致的，我继续玩你们嘴一张一合又给我封了，你们给退钱吗？\r\n我敢说开挂死 quanjia ，你敢不敢说误封死 quanjia ？\r\n\r\nhttps://imgur.com/a/ufhnwNK", "content_rendered": "从终测开始玩国服，大号前几天无缘无故被封了十年，理由是第三方软件加载，后面玩了小号几天正常没有问题，外服没有问题<br /><br />1.没有开挂<br />2.没有被封机器码<br />3.没有被盗，历史战绩记录没有其他对局<br /><br />给腾讯客服打电话说复核，复核结果就是第三方软件加载，问客服是什么第三方软件也不说，嘴一张一合说你第三方软件加载就是第三方软件加载了。客服让我玩小号，我敢玩？你们也不说是什么软件导致的，我继续玩你们嘴一张一合又给我封了，你们给退钱吗？<br />我敢说开挂死 quanjia ，你敢不敢说误封死 quanjia ？<br /><br /><a target=\"_blank\" href=\"https://imgur.com/a/ufhnwNK\" rel=\"nofollow noopener\">https://imgur.com/a/ufhnwNK</a>", "last_modified": 1690605008, "replies": 30, "id": 960755}]