[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/03af/dbd6/63_large.png?m=1644490200", "name": "java", "avatar_normal": "https://cdn.v2ex.com/navatar/03af/dbd6/63_normal.png?m=1644490200", "title": "Java", "url": "https://www.v2ex.com/go/java", "topics": 5546, "footer": "", "header": "Sun 公司发明，被广泛使用的一门编程语言。", "title_alternative": "Java", "avatar_mini": "https://cdn.v2ex.com/navatar/03af/dbd6/63_mini.png?m=1644490200", "stars": 5345, "aliases": [], "root": false, "id": 63, "parent_node_name": "programming"}, "member": {"id": 602839, "username": "kachu673", "url": "https://www.v2ex.com/u/kachu673", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/3f5b31b2a220e0eff1484ee0d4895003?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/3f5b31b2a220e0eff1484ee0d4895003?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/3f5b31b2a220e0eff1484ee0d4895003?s=73&d=retro", "created": 1669002607, "last_modified": 1688229400}, "last_reply_by": "zed1018", "last_touched": 1690668112, "title": "Spring 开发，流程冗余", "url": "https://www.v2ex.com/t/960762", "created": 1690607164, "deleted": 0, "content": "使用 SpringBoot 开发项目，少不了要写 Controller 、Service 、Mapper ，虽然 MP 可以一定程度上简化后两者的开发，但必要时候仍要将三个过程全部走完。所以我想请教各位网友：\r\n1. 其他框架有没有简化这个步骤的？（我不在意代码的耦合，以及各种代码入侵）\r\n2. 能推荐一些快速开发的框架吗？\r\n3. 如果可以，我喜欢用 php 来开发（我觉得个人开发者掌握 php 是非常有必要的）\r\n4. 当然，使用 js 、python 、go 、cpp 的框架我也都可以接受。", "content_rendered": "<p>使用 SpringBoot 开发项目，少不了要写 Controller 、Service 、Mapper ，虽然 MP 可以一定程度上简化后两者的开发，但必要时候仍要将三个过程全部走完。所以我想请教各位网友：</p>\n<ol>\n<li>其他框架有没有简化这个步骤的？（我不在意代码的耦合，以及各种代码入侵）</li>\n<li>能推荐一些快速开发的框架吗？</li>\n<li>如果可以，我喜欢用 php 来开发（我觉得个人开发者掌握 php 是非常有必要的）</li>\n<li>当然，使用 js 、python 、go 、cpp 的框架我也都可以接受。</li>\n</ol>\n", "last_modified": 1690607164, "replies": 59, "id": 960762}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1685063629", "name": "career", "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1685063629", "title": "职场话题", "url": "https://www.v2ex.com/go/career", "topics": 14617, "footer": "", "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。", "title_alternative": "Career", "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1685063629", "stars": 2749, "aliases": [], "root": false, "id": 770, "parent_node_name": "work"}, "member": {"id": 79543, "username": "sunjws", "url": "https://www.v2ex.com/u/sunjws", "website": "", "twitter": "", "psn": "", "github": "sungys", "btc": "", "location": "大连", "tagline": "我思故我在", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/95c2/5637/79543_mini.png?m=1600467846", "avatar_normal": "https://cdn.v2ex.com/avatar/95c2/5637/79543_normal.png?m=1600467846", "avatar_large": "https://cdn.v2ex.com/avatar/95c2/5637/79543_large.png?m=1600467846", "created": 1414746970, "last_modified": 1600467846}, "last_reply_by": "akay2351", "last_touched": 1690685815, "title": "润了，压力依旧", "url": "https://www.v2ex.com/t/960891", "created": 1690655316, "deleted": 0, "content": "润出来以后也没有让自己变得更开心更轻松！还是会觉得很有压力。本来就一普通打工仔，有孩子有家庭，为了润几乎花光了本就不多的积蓄！出来后一切都要从头开始，没了房子没了车，全新的环境里没朋友没圈子，而要处理的要学习的计划安排的满满登登！至少未来一年没有任何自己的时间…", "content_rendered": "润出来以后也没有让自己变得更开心更轻松！还是会觉得很有压力。本来就一普通打工仔，有孩子有家庭，为了润几乎花光了本就不多的积蓄！出来后一切都要从头开始，没了房子没了车，全新的环境里没朋友没圈子，而要处理的要学习的计划安排的满满登登！至少未来一年没有任何自己的时间…", "last_modified": 1690655316, "replies": 56, "id": 960891}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6b18/0037/1013_large.png?m=1528158910", "name": "jd", "avatar_normal": "https://cdn.v2ex.com/navatar/6b18/0037/1013_normal.png?m=1528158910", "title": "京东", "url": "https://www.v2ex.com/go/jd", "topics": 1714, "footer": "", "header": "关于使用 jd.com 过程中遇到的问题的讨论", "title_alternative": "京东", "avatar_mini": "https://cdn.v2ex.com/navatar/6b18/0037/1013_mini.png?m=1528158910", "stars": 200, "aliases": [], "root": false, "id": 1013, "parent_node_name": "internet"}, "member": {"id": 398384, "username": "bloodkey", "url": "https://www.v2ex.com/u/bloodkey", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=73&d=retro", "created": 1554312054, "last_modified": 1554312054}, "last_reply_by": "bloodkey", "last_touched": 1690680823, "title": "垃圾京东商家售假，在有完整证明卖家售假证据的情况下，不处理售假商家", "url": "https://www.v2ex.com/t/960778", "created": 1690612291, "deleted": 0, "content": "有完整证据证明商家售假的情况下，刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。京东不处理售假商家！\r\n\r\n事情详细经过如下：\r\n\r\n==============\r\n\r\n23 年 4 月份的订单，卖家特别狡猾，物流订单没有上传到京东，在京东平台显示还在出库\r\n\r\n \r\n\r\n但是物流包裹已经收到了，商品防伪验证通过不了，气味也不对，以前买过很多正品，可以 100%确认是假货。\r\n\r\n \r\n\r\n电话京东客服投诉，说不能证明包裹是卖家发的，所以没法处理卖家。我说，以卖家长时间不发货处理卖家，京东客服也说是内部信息，没法告诉我处理结果，大半个月不发货，客服说对买家也没有任何赔偿！！！！！\r\n\r\n \r\n\r\n收到的包裹产品名称和数量，发货地址和店铺营业执照地点一样。快递单上面发货人的电话是空号！虽然我没法证明这个包裹是卖家发的，但明眼人都知道这个包裹是谁发送的\r\n\r\n投诉不发货后，商家 5 月中旬上传了新的快递单号，但是快递物流三个月没有动静。虚假发货，投诉，说是快递丢件。\r\n\r\n \r\n一直在各个地方投诉，3 个月投诉没有结果。\r\n\r\n最近拿到了新的证据，韵达客服电话证明了，两个包裹都是同一个商家发货的。（两个包裹都是韵达的）\r\n\r\n那么就是说证明了卖家售假。给京东提供了电话录音。\r\n\r\n刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。\r\n\r\n也就是说，有完整证据证明商家售假的情况下，京东不处理售假商家！\r\n\r\n\r\n所有过程都有电话录音，已经投诉到北京 12315 了\r\n\r\n\r\n韵达也是垃圾，不对收件人提供寄件人信息，投诉了几个月也一直不提供。后面也只说两个包裹是同一个商家发出来的。韵达客服说 5 月份丢件的那个包裹有补发，问补发的快递单号又没有，满嘴谎言，一直踢皮球\r\n\r\n保证上述真实可靠，有兴趣的可以提供完整截图，录音\r\n\r\n有人可以提一下处理意见没？ 京东，北京 12315 电话，韵达，国家邮政总局网页，支付宝 12315 投诉，都试了，到现在还没结果", "content_rendered": "<p>有完整证据证明商家售假的情况下，刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。京东不处理售假商家！</p>\n<p>事情详细经过如下：</p>\n<p>==============</p>\n<p>23 年 4 月份的订单，卖家特别狡猾，物流订单没有上传到京东，在京东平台显示还在出库</p>\n<p>但是物流包裹已经收到了，商品防伪验证通过不了，气味也不对，以前买过很多正品，可以 100%确认是假货。</p>\n<p>电话京东客服投诉，说不能证明包裹是卖家发的，所以没法处理卖家。我说，以卖家长时间不发货处理卖家，京东客服也说是内部信息，没法告诉我处理结果，大半个月不发货，客服说对买家也没有任何赔偿！！！！！</p>\n<p>收到的包裹产品名称和数量，发货地址和店铺营业执照地点一样。快递单上面发货人的电话是空号！虽然我没法证明这个包裹是卖家发的，但明眼人都知道这个包裹是谁发送的</p>\n<p>投诉不发货后，商家 5 月中旬上传了新的快递单号，但是快递物流三个月没有动静。虚假发货，投诉，说是快递丢件。</p>\n<p>一直在各个地方投诉，3 个月投诉没有结果。</p>\n<p>最近拿到了新的证据，韵达客服电话证明了，两个包裹都是同一个商家发货的。（两个包裹都是韵达的）</p>\n<p>那么就是说证明了卖家售假。给京东提供了电话录音。</p>\n<p>刚刚京东客服回复，京东不参与卖家经营活动，只能赔偿一点京豆。</p>\n<p>也就是说，有完整证据证明商家售假的情况下，京东不处理售假商家！</p>\n<p>所有过程都有电话录音，已经投诉到北京 12315 了</p>\n<p>韵达也是垃圾，不对收件人提供寄件人信息，投诉了几个月也一直不提供。后面也只说两个包裹是同一个商家发出来的。韵达客服说 5 月份丢件的那个包裹有补发，问补发的快递单号又没有，满嘴谎言，一直踢皮球</p>\n<p>保证上述真实可靠，有兴趣的可以提供完整截图，录音</p>\n<p>有人可以提一下处理意见没？ 京东，北京 12315 电话，韵达，国家邮政总局网页，支付宝 12315 投诉，都试了，到现在还没结果</p>\n", "last_modified": 1690612832, "replies": 55, "id": 960778}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1689070442", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1689070442", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 57653, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1689070442", "stars": 8507, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 254353, "username": "FaiChou", "url": "https://www.v2ex.com/u/FaiChou", "website": "https://faichou.com", "twitter": "FaiChou_zh", "psn": "", "github": "FaiChou", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_mini.png?m=1684739460", "avatar_normal": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_normal.png?m=1684739460", "avatar_large": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_large.png?m=1684739460", "avatar_xlarge": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_xlarge.png?m=1684739460", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_xlarge.png?m=1684739460", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/e7d0/b1a7/254353_xlarge.png?m=1684739460", "created": 1505371596, "last_modified": 1684739460}, "last_reply_by": "fox0001", "last_touched": 1690640280, "title": "使用这个公钥是否能解密此加密信息？", "url": "https://www.v2ex.com/t/960808", "created": 1690623316, "deleted": 0, "content": "使用私钥 rsa 加密内容：\r\n\r\n```\r\ngl9E9ye5acVdn5MusJj0pay6y+i6qDna8DTSNHkkPjBsEE9DJ34cKhrCiNuRWIxY4+DQmrrQPMzibgCvP+3unWelxwmzMRzmSQQDTm9Z+oBiHGCcqWXtz47H/b1uoC4T6ZXkTrtuYAOVlRDn+2xKPcO9qpq5gS+cU6SPSRcRP/cAthqnLQ0FJJjY2vOqsoKda5IStxLjRSJPXs5zmJFVH/ii7J/u1vp8R6sUUNLhJmahFlODgOoEPDTW50k6O5LS8MYniZLvI/Czj9bt1z850rXGl3wHvfwmhIWH8umR5NqaPJ8/kDJXGk5ejHoljRN2GJ4iL48hvJawsoCNHpktrlqRtE6geQF74gB5hLzSvY2ZUcRo1fx7DxpPnRqfx7ctf6m7nC0vohax4NvdYJ7TWnK+oDGCJFFJRNg+L/DJlcckjWmL3nGoFYgHSfVwZXfTLOcKOtx8Pvd2Udjx+9t2/T4DqJNmhVzBvX/tEqBlv+deAbk8DaGx4FcBWm1b5j2qMUqA33OVIYLOzgFFzdMF8OqEvAPwqyg1pHjt9iPzWXWVjzFA2Z1yVou2TwZ6Z9QqrjaGyK6KfpT+h241FgCVrZgbg8g/JWU7wFHQjiEjJTSTZu6FeweQpRUuUy/A8LS0Wabh0eZQ0hcPcRBwf2gGOlmbfCojrfZNHbjRkh0Rz6YAq3T5q5VdfsKXBUMJcTilfUGRzIivVAFmM5Lx5WzgV7LsPSIuEq5sNFEypk5rrKplTirq3qE6maI3+KKbUccAs2ak6zGLtfFnJasXivwYPrivUnTDz9cV1dVFYKe72/aGnNby2TxWvNpbDu60T8BlX1CFwFj+JQyDqFu+EvgBTQ==\r\n```\r\n\r\n对应的公钥：\r\n\r\n```\r\n-----BEGIN PUBLIC KEY-----\r\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCGhpgMD1okxLnUMCDNLCJwP/P0\r\nUHVlKQWLHPiPCbhgITZHcZim4mgxSWWb0SLDNZL9ta1HlErR6k02xrFyqtYzjDu2\r\nrGInUC0BCZOsln0a7wDwyOA43i5NO8LsNory6fEKbx7aT3Ji8TZCDAfDMbhxvxOf\r\ndPMBDjxP5X3zr7cWgwIDAQAB\r\n-----END PUBLIC KEY-----\r\n```\r\n\r\n\r\n如果解密出的结果像是下面这样，应该是对的：\r\n\r\n```\r\n{\"2658844581501957149\":{\"file_name\":\"wwdc2023-10117_hd.mp4\",\"file_size\":\"100597894\",\"pick_code\":\"b12x4iiejvkkq83a\",\"url\":{\"url\":\"http:\\/\\/xxx.xxx.com\\/xxx\\/wwdc2023-10117_hd.mp4?t=1690607362&u=101248331&s=1048576&d=658578066-b12x4iiejvkkq83a-0&c=2&f=1&k=ddb3d920081771b2f40ee75164c5bb1b&us=52428800&uc=10&v=1\",\"client\":2,\"desc\":null,\"isp\":null,\"oss_id\":\"fhnfile\\/xxx\",\"ooid\":\"\"}}}\r\n```\r\n\r\n注意由于加密内容数据比较大，需要分段解密。\r\n\r\n不管用什么方法，python/go/java 还是网上的在线解密工具，只要能解密出来即可。\r\n\r\n我用 swift 写了分段解密，结果解密失败，用网上在线的解密工具也是失败，不知道网上的工具是不是由于不支持分段解密才失败的。\r\n\r\n下面是我用 Swift 写的方法：\r\n\r\n```swift\r\nimport Security\r\nfunc convertPublicKey(pemString: String) -> SecKey? {\r\n    // 1. Remove headers, newlines and spaces\r\n    let keyString = pemString\r\n        .replacingOccurrences(of: \"-----BEGIN PUBLIC KEY-----\", with: \"\")\r\n        .replacingOccurrences(of: \"-----END PUBLIC KEY-----\", with: \"\")\r\n        .replacingOccurrences(of: \"\\n\", with: \"\")\r\n        .replacingOccurrences(of: \" \", with: \"\")\r\n\r\n    // 2. Convert base64 string to Data\r\n    guard let keyData = Data(base64Encoded: keyString) else {\r\n        return nil\r\n    }\r\n\r\n    // 3. Create key dictionary\r\n    let keyDict: [CFString: Any] = [\r\n        kSecAttrKeyType: kSecAttrKeyTypeRSA,\r\n        kSecAttrKeyClass: kSecAttrKeyClassPublic,\r\n        kSecAttrKeySizeInBits: NSNumber(value: 2048),\r\n        kSecReturnPersistentRef: true\r\n    ]\r\n\r\n    // 4. Create SecKey from Data\r\n    var error: Unmanaged<CFError>?\r\n    guard let key = SecKeyCreateWithData(keyData as CFData, keyDict as CFDictionary, &error) else {\r\n        // Handle the error here\r\n        return nil\r\n    }\r\n\r\n    return key\r\n}\r\nlet rsaKeyInSwift = convertPublicKey(pemString: rsaPublicKey)\r\nfunc rsaDecrypt(data: Data) -> Data? {\r\n    let blockSize = SecKeyGetBlockSize(rsaKeyInSwift!)\r\n    var decryptedData = Data()\r\n    for i in stride(from: 0, to: data.count, by: blockSize) {\r\n        let endIndex = min(i + blockSize, data.count)\r\n        let chunk = data[i..<endIndex]\r\n        print(chunk)\r\n        var error: Unmanaged<CFError>?\r\n        guard let decryptedChunk = SecKeyCreateDecryptedData(\r\n            rsaKeyInSwift!,\r\n            .rsaEncryptionPKCS1,\r\n            chunk as CFData,\r\n            &error\r\n        ) else {\r\n            print(\"Decryption error:\", error.debugDescription)\r\n            return nil\r\n        }\r\n        decryptedData.append(decryptedChunk as Data)\r\n    }\r\n\r\n    return decryptedData\r\n}\r\n```\r\n\r\n报错：\r\n\r\n```\r\nDecryption error: Optional(Swift.Unmanaged<__C.CFErrorRef>(_value: Error Domain=NSOSStatusErrorDomain Code=-50 \"RSAdecrypt wrong input (err -27)\" UserInfo={numberOfErrorsDeep=0, NSDescription=RSAdecrypt wrong input (err -27)}))\r\n\r\n```\r\n\r\n在网上找到了一个开源的项目，它用 go 语言自己实现了 rsa 解密算法，不清楚为什么它不用标准库来解密。我用标准库实现的（ Swift 版本）无法解密。所以不清楚是不是我的代码问题还是其他问题。\r\n\r\n下面是 go 语言开源版本：\r\n\r\n```go\r\nfunc rsaDecrypt(input []byte) []byte {\r\n\toutput := make([]byte, 0)\r\n\tcipherSize, blockSize := len(input), rsaServerKey.Size()\r\n\tfor offset := 0; offset < cipherSize; offset += blockSize {\r\n\t\tsliceSize := blockSize\r\n\t\tif offset+sliceSize > cipherSize {\r\n\t\t\tsliceSize = cipherSize - offset\r\n\t\t}\r\n\r\n\t\tn := big.NewInt(0).SetBytes(input[offset : offset+sliceSize])\r\n\t\tm := big.NewInt(0).Exp(n, big.NewInt(int64(rsaServerKey.E)), rsaServerKey.N)\r\n\t\tb := m.Bytes()\r\n\t\tindex := bytes.IndexByte(b, '\\x00')\r\n\t\tif index < 0 {\r\n\t\t\treturn nil\r\n\t\t}\r\n\t\toutput = append(output, b[index+1:]...)\r\n\t}\r\n\treturn output\r\n}\r\n```\r\n\r\n由于不熟悉 go 语言，大概看了下算法，也是计算 `(n^e) mod N`。\r\n\r\n所以请大家用这个公钥解密上面的内容，能否解密出来？", "content_rendered": "<p>使用私钥 rsa 加密内容：</p>\n<pre><code>gl9E9ye5acVdn5MusJj0pay6y+i6qDna8DTSNHkkPjBsEE9DJ34cKhrCiNuRWIxY4+DQmrrQPMzibgCvP+3unWelxwmzMRzmSQQDTm9Z+oBiHGCcqWXtz47H/b1uoC4T6ZXkTrtuYAOVlRDn+2xKPcO9qpq5gS+cU6SPSRcRP/cAthqnLQ0FJJjY2vOqsoKda5IStxLjRSJPXs5zmJFVH/ii7J/u1vp8R6sUUNLhJmahFlODgOoEPDTW50k6O5LS8MYniZLvI/Czj9bt1z850rXGl3wHvfwmhIWH8umR5NqaPJ8/kDJXGk5ejHoljRN2GJ4iL48hvJawsoCNHpktrlqRtE6geQF74gB5hLzSvY2ZUcRo1fx7DxpPnRqfx7ctf6m7nC0vohax4NvdYJ7TWnK+oDGCJFFJRNg+L/DJlcckjWmL3nGoFYgHSfVwZXfTLOcKOtx8Pvd2Udjx+9t2/T4DqJNmhVzBvX/tEqBlv+deAbk8DaGx4FcBWm1b5j2qMUqA33OVIYLOzgFFzdMF8OqEvAPwqyg1pHjt9iPzWXWVjzFA2Z1yVou2TwZ6Z9QqrjaGyK6KfpT+h241FgCVrZgbg8g/JWU7wFHQjiEjJTSTZu6FeweQpRUuUy/A8LS0Wabh0eZQ0hcPcRBwf2gGOlmbfCojrfZNHbjRkh0Rz6YAq3T5q5VdfsKXBUMJcTilfUGRzIivVAFmM5Lx5WzgV7LsPSIuEq5sNFEypk5rrKplTirq3qE6maI3+KKbUccAs2ak6zGLtfFnJasXivwYPrivUnTDz9cV1dVFYKe72/aGnNby2TxWvNpbDu60T8BlX1CFwFj+JQyDqFu+EvgBTQ==\n</code></pre>\n<p>对应的公钥：</p>\n<pre><code>-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCGhpgMD1okxLnUMCDNLCJwP/P0\nUHVlKQWLHPiPCbhgITZHcZim4mgxSWWb0SLDNZL9ta1HlErR6k02xrFyqtYzjDu2\nrGInUC0BCZOsln0a7wDwyOA43i5NO8LsNory6fEKbx7aT3Ji8TZCDAfDMbhxvxOf\ndPMBDjxP5X3zr7cWgwIDAQAB\n-----END PUBLIC KEY-----\n</code></pre>\n<p>如果解密出的结果像是下面这样，应该是对的：</p>\n<pre><code>{\"2658844581501957149\":{\"file_name\":\"wwdc2023-10117_hd.mp4\",\"file_size\":\"100597894\",\"pick_code\":\"b12x4iiejvkkq83a\",\"url\":{\"url\":\"http:\\/\\/xxx.xxx.com\\/xxx\\/wwdc2023-10117_hd.mp4?t=1690607362&amp;u=101248331&amp;s=1048576&amp;d=658578066-b12x4iiejvkkq83a-0&amp;c=2&amp;f=1&amp;k=ddb3d920081771b2f40ee75164c5bb1b&amp;us=52428800&amp;uc=10&amp;v=1\",\"client\":2,\"desc\":null,\"isp\":null,\"oss_id\":\"fhnfile\\/xxx\",\"ooid\":\"\"}}}\n</code></pre>\n<p>注意由于加密内容数据比较大，需要分段解密。</p>\n<p>不管用什么方法，python/go/java 还是网上的在线解密工具，只要能解密出来即可。</p>\n<p>我用 swift 写了分段解密，结果解密失败，用网上在线的解密工具也是失败，不知道网上的工具是不是由于不支持分段解密才失败的。</p>\n<p>下面是我用 Swift 写的方法：</p>\n<pre><code class=\"language-swift\">import Security\nfunc convertPublicKey(pemString: String) -&gt; SecKey? {\n    // 1. Remove headers, newlines and spaces\n    let keyString = pemString\n        .replacingOccurrences(of: \"-----BEGIN PUBLIC KEY-----\", with: \"\")\n        .replacingOccurrences(of: \"-----END PUBLIC KEY-----\", with: \"\")\n        .replacingOccurrences(of: \"\\n\", with: \"\")\n        .replacingOccurrences(of: \" \", with: \"\")\n\n    // 2. Convert base64 string to Data\n    guard let keyData = Data(base64Encoded: keyString) else {\n        return nil\n    }\n\n    // 3. Create key dictionary\n    let keyDict: [CFString: Any] = [\n        kSecAttrKeyType: kSecAttrKeyTypeRSA,\n        kSecAttrKeyClass: kSecAttrKeyClassPublic,\n        kSecAttrKeySizeInBits: NSNumber(value: 2048),\n        kSecReturnPersistentRef: true\n    ]\n\n    // 4. Create SecKey from Data\n    var error: Unmanaged&lt;CFError&gt;?\n    guard let key = SecKeyCreateWithData(keyData as CFData, keyDict as CFDictionary, &amp;error) else {\n        // Handle the error here\n        return nil\n    }\n\n    return key\n}\nlet rsaKeyInSwift = convertPublicKey(pemString: rsaPublicKey)\nfunc rsaDecrypt(data: Data) -&gt; Data? {\n    let blockSize = SecKeyGetBlockSize(rsaKeyInSwift!)\n    var decryptedData = Data()\n    for i in stride(from: 0, to: data.count, by: blockSize) {\n        let endIndex = min(i + blockSize, data.count)\n        let chunk = data[i..&lt;endIndex]\n        print(chunk)\n        var error: Unmanaged&lt;CFError&gt;?\n        guard let decryptedChunk = SecKeyCreateDecryptedData(\n            rsaKeyInSwift!,\n            .rsaEncryptionPKCS1,\n            chunk as CFData,\n            &amp;error\n        ) else {\n            print(\"Decryption error:\", error.debugDescription)\n            return nil\n        }\n        decryptedData.append(decryptedChunk as Data)\n    }\n\n    return decryptedData\n}\n</code></pre>\n<p>报错：</p>\n<pre><code>Decryption error: Optional(Swift.Unmanaged&lt;__C.CFErrorRef&gt;(_value: Error Domain=NSOSStatusErrorDomain Code=-50 \"RSAdecrypt wrong input (err -27)\" UserInfo={numberOfErrorsDeep=0, NSDescription=RSAdecrypt wrong input (err -27)}))\n\n</code></pre>\n<p>在网上找到了一个开源的项目，它用 go 语言自己实现了 rsa 解密算法，不清楚为什么它不用标准库来解密。我用标准库实现的（ Swift 版本）无法解密。所以不清楚是不是我的代码问题还是其他问题。</p>\n<p>下面是 go 语言开源版本：</p>\n<pre><code class=\"language-go\">func rsaDecrypt(input []byte) []byte {\n\toutput := make([]byte, 0)\n\tcipherSize, blockSize := len(input), rsaServerKey.Size()\n\tfor offset := 0; offset &lt; cipherSize; offset += blockSize {\n\t\tsliceSize := blockSize\n\t\tif offset+sliceSize &gt; cipherSize {\n\t\t\tsliceSize = cipherSize - offset\n\t\t}\n\n\t\tn := big.NewInt(0).SetBytes(input[offset : offset+sliceSize])\n\t\tm := big.NewInt(0).Exp(n, big.NewInt(int64(rsaServerKey.E)), rsaServerKey.N)\n\t\tb := m.Bytes()\n\t\tindex := bytes.IndexByte(b, '\\x00')\n\t\tif index &lt; 0 {\n\t\t\treturn nil\n\t\t}\n\t\toutput = append(output, b[index+1:]...)\n\t}\n\treturn output\n}\n</code></pre>\n<p>由于不熟悉 go 语言，大概看了下算法，也是计算 <code>(n^e) mod N</code>。</p>\n<p>所以请大家用这个公钥解密上面的内容，能否解密出来？</p>\n", "last_modified": 1690623316, "replies": 38, "id": 960808}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/51ef/186e/874_large.png?m=1589465078", "name": "tvos", "avatar_normal": "https://cdn.v2ex.com/navatar/51ef/186e/874_normal.png?m=1589465078", "title": "tvOS", "url": "https://www.v2ex.com/go/tvos", "topics": 4, "footer": "", "header": "", "title_alternative": "tvOS", "avatar_mini": "https://cdn.v2ex.com/navatar/51ef/186e/874_mini.png?m=1589465078", "stars": 8, "aliases": [], "root": false, "id": 874, "parent_node_name": "apple"}, "member": {"id": 367470, "username": "NewTab12138", "url": "https://www.v2ex.com/u/NewTab12138", "website": "", "twitter": "", "psn": "", "github": "jiang111", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/ae13cfe1f315c8c5e17dc1cb3269b17f?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/ae13cfe1f315c8c5e17dc1cb3269b17f?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/ae13cfe1f315c8c5e17dc1cb3269b17f?s=73&d=retro", "created": 1543807800, "last_modified": 1658584606}, "last_reply_by": "KevinDo2", "last_touched": 1690685738, "title": "好消息： surge 推出 tvOS 端的 App 了", "url": "https://www.v2ex.com/t/960850", "created": 1690637910, "deleted": 0, "content": "坏消息是：Surge 授权必须绑定 iCloud 才可使用 TV 版。通过邮箱授权的用户无法使用。\r\n\r\n\r\n如果你有 vps ，推荐使用 single-box 这个 app ， 目前也可以正常在 tvOS 端使用了\r\n\r\n或者可以等等，loon, loonlite 等 App 都表示会适配 tvOS 。", "content_rendered": "<p>坏消息是：Surge 授权必须绑定 iCloud 才可使用 TV 版。通过邮箱授权的用户无法使用。</p>\n<p>如果你有 vps ，推荐使用 single-box 这个 app ， 目前也可以正常在 tvOS 端使用了</p>\n<p>或者可以等等，loon, loonlite 等 App 都表示会适配 tvOS 。</p>\n", "last_modified": 1690638183, "replies": 37, "id": 960850}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/74bb/a227/938_large.png?m=1591791660", "name": "gts", "avatar_normal": "https://cdn.v2ex.com/navatar/74bb/a227/938_normal.png?m=1591791660", "title": "全球工单系统", "url": "https://www.v2ex.com/go/gts", "topics": 9438, "footer": "", "header": "希望这里能够为你遇到的问题找到解决方案", "title_alternative": "Global Ticket System", "avatar_mini": "https://cdn.v2ex.com/navatar/74bb/a227/938_mini.png?m=1591791660", "stars": 1751, "aliases": [], "root": false, "id": 938, "parent_node_name": "geek"}, "member": {"id": 512820, "username": "youngteam99", "url": "https://www.v2ex.com/u/youngteam99", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/4a4f3931bc9c22340a182fceea90bf92?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/4a4f3931bc9c22340a182fceea90bf92?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/4a4f3931bc9c22340a182fceea90bf92?s=73&d=retro", "created": 1602674782, "last_modified": 1643518492}, "last_reply_by": "darksora", "last_touched": 1690663992, "title": "无畏契约反作弊项目组嘴一张一合就封十年？", "url": "https://www.v2ex.com/t/960755", "created": 1690605008, "deleted": 0, "content": "从终测开始玩国服，大号前几天无缘无故被封了十年，理由是第三方软件加载，后面玩了小号几天正常没有问题，外服没有问题\r\n\r\n1.没有开挂\r\n2.没有被封机器码\r\n3.没有被盗，历史战绩记录没有其他对局\r\n\r\n给腾讯客服打电话说复核，复核结果就是第三方软件加载，问客服是什么第三方软件也不说，嘴一张一合说你第三方软件加载就是第三方软件加载了。客服让我玩小号，我敢玩？你们也不说是什么软件导致的，我继续玩你们嘴一张一合又给我封了，你们给退钱吗？\r\n我敢说开挂死 quanjia ，你敢不敢说误封死 quanjia ？\r\n\r\nhttps://imgur.com/a/ufhnwNK", "content_rendered": "从终测开始玩国服，大号前几天无缘无故被封了十年，理由是第三方软件加载，后面玩了小号几天正常没有问题，外服没有问题<br /><br />1.没有开挂<br />2.没有被封机器码<br />3.没有被盗，历史战绩记录没有其他对局<br /><br />给腾讯客服打电话说复核，复核结果就是第三方软件加载，问客服是什么第三方软件也不说，嘴一张一合说你第三方软件加载就是第三方软件加载了。客服让我玩小号，我敢玩？你们也不说是什么软件导致的，我继续玩你们嘴一张一合又给我封了，你们给退钱吗？<br />我敢说开挂死 quanjia ，你敢不敢说误封死 quanjia ？<br /><br /><a target=\"_blank\" href=\"https://imgur.com/a/ufhnwNK\" rel=\"nofollow noopener\">https://imgur.com/a/ufhnwNK</a>", "last_modified": 1690605008, "replies": 34, "id": 960755}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/fe9f/c289/83_large.png?m=1586498945", "name": "macmini", "avatar_normal": "https://cdn.v2ex.com/navatar/fe9f/c289/83_normal.png?m=1586498945", "title": "Mac mini", "url": "https://www.v2ex.com/go/macmini", "topics": 362, "footer": "", "header": "<a href=\"/go/apple\">Apple</a> 公司设计的世界上最轻巧的桌面主机。", "title_alternative": "Mac mini", "avatar_mini": "https://cdn.v2ex.com/navatar/fe9f/c289/83_mini.png?m=1586498945", "stars": 310, "aliases": [], "root": false, "id": 83, "parent_node_name": "apple"}, "member": {"id": 164143, "username": "guanhui07", "url": "https://www.v2ex.com/u/guanhui07", "website": "https://google.com", "twitter": "", "psn": "", "github": "", "btc": "", "location": "广东", "tagline": "https://github.com/guanhui07", "bio": "tg:   aHR0cHMlM0EvL3QubWUvZ3Vhbmh1aTA3", "avatar_mini": "https://cdn.v2ex.com/avatar/437f/2914/164143_mini.png?m=1672972297", "avatar_normal": "https://cdn.v2ex.com/avatar/437f/2914/164143_normal.png?m=1672972297", "avatar_large": "https://cdn.v2ex.com/avatar/437f/2914/164143_large.png?m=1672972297", "created": 1458466975, "last_modified": 1672972297}, "last_reply_by": "murmur", "last_touched": 1690686115, "title": "M2 mac mini 8G 内存能买吗", "url": "https://www.v2ex.com/t/960772", "created": 1690610114, "deleted": 0, "content": "pdd 百亿补贴的 M2 mac mini 8G 内存才 2900 就内存小了些，我现在还在用 mbp 2014 16G 内存，\r\n不知道买这个 M2 8G 够不够用。。", "content_rendered": "<p>pdd 百亿补贴的 M2 mac mini 8G 内存才 2900 就内存小了些，我现在还在用 mbp 2014 16G 内存，\n不知道买这个 M2 8G 够不够用。。</p>\n", "last_modified": 1690660394, "replies": 31, "id": 960772}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_large.png?m=1649080598", "name": "macos", "avatar_normal": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_normal.png?m=1649080598", "title": "macOS", "url": "https://www.v2ex.com/go/macos", "topics": 20600, "footer": "<a href=\"/mbp\">MacBook Pro</a> 及 <a href=\"/go/imac\">iMac</a> 等 <a href=\"/go/apple\">Apple</a> 公司设计的计算机所运行的操作系统。<a href=\"/go/idev\">iOS</a> 的基础。", "header": "The world’s most advanced desktop operating system.", "title_alternative": "macOS", "avatar_mini": "https://cdn.v2ex.com/navatar/b6d7/67d2/22_mini.png?m=1649080598", "stars": 4967, "aliases": [], "root": false, "id": 22, "parent_node_name": "os"}, "member": {"id": 60691, "username": "justincnn", "url": "https://www.v2ex.com/u/justincnn", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/387f/986a/60691_mini.png?m=1689252237", "avatar_normal": "https://cdn.v2ex.com/avatar/387f/986a/60691_normal.png?m=1689252237", "avatar_large": "https://cdn.v2ex.com/avatar/387f/986a/60691_large.png?m=1689252237", "created": 1397875323, "last_modified": 1689252237}, "last_reply_by": "justincnn", "last_touched": 1690683051, "title": "用了一圈 md 编辑器，发现还是 typora 最舒服", "url": "https://www.v2ex.com/t/960739", "created": 1690600462, "deleted": 0, "content": "除了价格，发现其他真的没毛病，\r\n\r\n![]( https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307291113764.png)", "content_rendered": "<p>除了价格，发现其他真的没毛病，</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://cdn.jsdelivr.net/gh/justincnn/pictures/img/202307291113764.png\"/></p>\n", "last_modified": 1690600462, "replies": 30, "id": 960739}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 207944, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340", "stars": 3888, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 283707, "username": "kerb15", "url": "https://www.v2ex.com/u/kerb15", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/fe8954f4768ae6a30f36ec5028c68484?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/fe8954f4768ae6a30f36ec5028c68484?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/fe8954f4768ae6a30f36ec5028c68484?s=73&d=retro", "created": 1516180510, "last_modified": 1681313444}, "last_reply_by": "Tsundokuu", "last_touched": 1690653751, "title": "小红书是怎么推荐 [可能认识的人] 的", "url": "https://www.v2ex.com/t/960798", "created": 1690618684, "deleted": 0, "content": "从来没有给过通讯录权限，但是小红书确实给我推荐好几个我认识的朋友，一看头像就知道是某个朋友，包括不怎么联系的朋友，领导，假设是对方给了通讯录权限，但是有些朋友的熟络程度从理论上讲，是没有我的号码的。细思极恐。。。", "content_rendered": "<p>从来没有给过通讯录权限，但是小红书确实给我推荐好几个我认识的朋友，一看头像就知道是某个朋友，包括不怎么联系的朋友，领导，假设是对方给了通讯录权限，但是有些朋友的熟络程度从理论上讲，是没有我的号码的。细思极恐。。。</p>\n", "last_modified": 1690618684, "replies": 27, "id": 960798}, {"node": {"avatar_large": "/static/img/node_default_large.png", "name": "fit", "avatar_normal": "/static/img/node_default_normal.png", "title": "健康", "url": "https://www.v2ex.com/go/fit", "topics": 916, "footer": "", "header": "这个节点的设立，是为了让大家可以分享关于健身和健康生活方式的经验。如果你有什么正在困扰自己的身体症状，请立刻寻求正规医院的帮助。", "title_alternative": "Fit", "avatar_mini": "/static/img/node_default_mini.png", "stars": 294, "aliases": [], "root": false, "id": 700, "parent_node_name": "life"}, "member": {"id": 188240, "username": "foreverstandbyu", "url": "https://www.v2ex.com/u/foreverstandbyu", "website": "", "twitter": "foreverstandbyu", "psn": "foreverstandbyu", "github": "foreverstandbyu", "btc": "foreverstandbyu", "location": "おまえがいな", "tagline": "", "bio": "おまえがいない世界は、オレには暗すぎてなにも见えないんだよ。、", "avatar_mini": "https://cdn.v2ex.com/avatar/4e36/51b2/188240_mini.png?m=1665480703", "avatar_normal": "https://cdn.v2ex.com/avatar/4e36/51b2/188240_normal.png?m=1665480703", "avatar_large": "https://cdn.v2ex.com/avatar/4e36/51b2/188240_large.png?m=1665480703", "avatar_xlarge": "https://cdn.v2ex.com/avatar/4e36/51b2/188240_xlarge.png?m=1665480703", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/4e36/51b2/188240_xlarge.png?m=1665480703", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/4e36/51b2/188240_xlarge.png?m=1665480703", "created": 1471854105, "last_modified": 1665480703}, "last_reply_by": "wolfan", "last_touched": 1690679407, "title": "如何科学增肥，目前 177cm 身高，体重 62.5kg，太瘦了。可以增肥吗？", "url": "https://www.v2ex.com/t/960852", "created": 1690638288, "deleted": 0, "content": "年龄 30 岁。\n体质瘦弱。可以用哪些方法增肥。每日三餐正常在吃。还说胖不起来。", "content_rendered": "年龄 30 岁。<br />体质瘦弱。可以用哪些方法增肥。每日三餐正常在吃。还说胖不起来。", "last_modified": 1690649306, "replies": 24, "id": 960852}]