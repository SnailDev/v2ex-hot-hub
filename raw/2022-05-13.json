[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/03af/dbd6/63_large.png?m=1644490200", "name": "java", "avatar_normal": "https://cdn.v2ex.com/navatar/03af/dbd6/63_normal.png?m=1644490200", "title": "Java", "url": "https://www.v2ex.com/go/java", "topics": 4925, "footer": "", "header": "Sun 公司发明，被广泛使用的一门编程语言。", "title_alternative": "Java", "avatar_mini": "https://cdn.v2ex.com/navatar/03af/dbd6/63_mini.png?m=1644490200", "stars": 4898, "aliases": [], "root": false, "id": 63, "parent_node_name": "programming"}, "member": {"id": 482153, "username": "Joker123456789", "url": "https://www.v2ex.com/u/Joker123456789", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/47d3/3395/482153_mini.png?m=1596374150", "avatar_normal": "https://cdn.v2ex.com/avatar/47d3/3395/482153_normal.png?m=1596374150", "avatar_large": "https://cdn.v2ex.com/avatar/47d3/3395/482153_large.png?m=1596374150", "created": 1586241649, "last_modified": 1596374150}, "last_reply_by": "vikaptain", "last_touched": 1652410766, "title": "关于 Java 很啰嗦的问题", "url": "https://www.v2ex.com/t/852381", "created": 1652329157, "deleted": 0, "content": "我先声明啊，我不是来吹捧 java 的，我只是想说一个事实，编程语言 没有谁绝对的碾压谁，真遇到了实际业务需求，写出来的代码量绝对是半斤八两。\r\n\r\n我希望大家 在 吐槽一门语言的时候，可以理性一点，不要瞎喷。这篇文章的用意就在于此。\r\n\r\n还有一点，我用 go 来比较，是因为 go 擅长的场景，跟 java 有一定的重叠，有很多公司都用 go 开发 web 。绝对没有对 go 不敬的意思。\r\n\r\n\r\n## 首先目录问题\r\n![image.png]( https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b75ecce167334d35a93f2262d21a98a7~tplv-k3u1fbpfcp-watermark.image?)\r\n\r\n总结下来，从工作量的角度来看，就是多了一个倒置的域名而已，而且只需要花建一层目录的时间，并且这个倒置的域名 是有他的意义在里面的，你们可以把他看做是这个\r\n\r\n```go\r\n// go 语言里的 import ，前面也有一个域名+项目名 来确定唯一性，包名里的倒置域名就是起这个作用的\r\nimport \"github.com/scan-util/xxx/xxx\"\r\n```\r\n\r\n还有很重要的一点，你们喷来喷去的那些多余的目录结构，在我们的观念里 根本就不存在，因为从来没有手工去创建过，要不是你们来吐槽，我们还真想不到这一点。\r\n\r\n不是因为 习惯了，而是真的从来没有为他们花过 5 秒钟以上的时间。有的连一毫秒都没花过。\r\n\r\n## 方法语法\r\ngo\r\n```go\r\nfunc BytesToString(val []byte) string\r\n```\r\n\r\njava\r\n```java\r\npublic String BytesToString(byte[] val)\r\n```\r\n我真没看出来多了什么东西\r\n\r\n## 定义变量\r\n\r\ngo\r\n\r\n```go\r\nname := \"张三\";\r\n\r\nvar map = make(map[string]interface{})\r\nvar array = make(string[], 10);\r\n```\r\n\r\njava\r\n\r\n```java\r\nString name = \"张三\";\r\n\r\nMap<String, Object> map = new HashMap<>();\r\nString[] array = new String[10];\r\n\r\n```\r\n好像多了点东西，又好像没多什么。\r\n\r\n## 循环\r\n\r\ngo\r\n\r\n```go\r\nfor(i:=0;i<100;i++){\r\n\r\n}\r\n\r\nfor(i<100){\r\n\r\n}\r\n```\r\n\r\njava\r\n\r\n```java\r\nfor(int i=0;i<100;i++){\r\n\r\n}\r\n\r\nwhile(i<100){\r\n\r\n}\r\n```\r\n\r\n确实多了几个字母。\r\n\r\n## 创建类\r\n\r\ngo\r\n\r\n我知道这叫结构体，跟类是两码事，但是 go 就是用它来兼容 oop 的，所以我只能用它来举例子，因为没有其他语法可以实现 oop 了\r\n```go\r\ntype DemoParam struct {\r\n    name string\r\n}\r\n\r\nfunc (demoParam *DemoParam) FormValues(key string) []string {\r\n}\r\n```\r\n\r\njava\r\n\r\n```java\r\nclass DemoParam {\r\n    public String name;\r\n    \r\n    public String[] FormValues(String key){\r\n        \r\n    }\r\n}\r\n```\r\n\r\n字数上相差多少，我是懒得数了，但是你们真的不觉得 java 的结构更清晰吗？ 其他的继承，多态 我就不拿出来说了，go 基本上是 用的 c 的编程思想，oop 只是个兼容， 所以用 java 来跟他比 oop 没什么可比性。因为是两个方向。\r\n\r\n## 异常处理\r\n\r\ngo\r\n\r\n```go\r\n\r\nfunc testFunction(paramStr string) (string, error) {\r\n    if xxx {\r\n        return Errors.New(\"xxxx\");\r\n    }\r\n}\r\n\r\nparamStr, err := testFunction(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n```\r\n\r\njava\r\n```java\r\npublic String testFunction(String paramStr){\r\n    if (xxx) {\r\n        throw new Execption(\"xxx\");\r\n    }\r\n}\r\n\r\ntry {\r\n    String paramStr = testFunction(\"ok\");\r\n} catch(Execption e){\r\n    log.Println(e.getMessage); \r\n}\r\n```\r\n\r\n这个看起来 go 好像 舒服一点，但是，实际场景下 go 经常是这种姿势\r\n```go\r\nparamStr, err := testFunction(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n\r\nparamStr, err := testFunction2(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n\r\nparamStr, err := testFunction3(\"ok\")                              \r\nif err != nil {                           \r\n    log.Println(err.Error())                           \r\n}\r\n```\r\n\r\n而 java 还是只需要这样\r\n```java\r\ntry {\r\n    String paramStr = testFunction(\"ok\");\r\n    String paramStr = testFunction2(\"ok\");\r\n    String paramStr = testFunction3(\"ok\");\r\n} catch(Execption e){\r\n    log.Println(e.getMessage); \r\n}\r\n```\r\n\r\n并且这是 经过人为判断后，返回的错误提示，如果是意外的异常呢？ go 里面叫 panic ，java 只要用 try catch 包住了 就可以捕获，但是 go 需要用 defer ，而且一旦抛出异常就意味着这个函数结束了，你如果想在出异常后，处理一下 然后继续往下走，go 会非常的麻烦。\r\n\r\n## 拆箱\r\n\r\ngo\r\n\r\n```go\r\n// 如果有一个 interface{} 类型的变量 a ，想转成 int\r\n// 你必须明确的知道，他装箱前就是 int ，不然根本没法拆，必须做一下类型判断。\r\n// 我之前在写框架的时候 就被折磨的够呛，一大堆不必要的 if\r\n```\r\n\r\njava\r\n```java\r\n// 不管装箱前是什么，只要他的值是一个整数\r\n// 无论是 1 ， 还是 \"1\", 都可以这么转\r\nInteger aInt = Integer.parseInteger(a.toString());\r\n\r\n// 也可以直接拆成 String\r\na.toString();\r\n```\r\n\r\n## 如果你们还不服，那很好办，\r\n\r\n你们出一个需求给我，我用 java ，你们用 go ，nodejs ，python ，php 随便什么语言，最后来比比 谁的代码少一些。 我敢说，绝对半斤八两，不可能有谁碾压谁的。\r\n\r\n而且还有一定的概率，java 在 丰富的生态+强大官方库的 加持下，可以更快完成。", "content_rendered": "<p>我先声明啊，我不是来吹捧 java 的，我只是想说一个事实，编程语言 没有谁绝对的碾压谁，真遇到了实际业务需求，写出来的代码量绝对是半斤八两。</p>\n<p>我希望大家 在 吐槽一门语言的时候，可以理性一点，不要瞎喷。这篇文章的用意就在于此。</p>\n<p>还有一点，我用 go 来比较，是因为 go 擅长的场景，跟 java 有一定的重叠，有很多公司都用 go 开发 web 。绝对没有对 go 不敬的意思。</p>\n<h2>首先目录问题</h2>\n<p><img alt=\"image.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b75ecce167334d35a93f2262d21a98a7%7Etplv-k3u1fbpfcp-watermark.image?\"/></p>\n<p>总结下来，从工作量的角度来看，就是多了一个倒置的域名而已，而且只需要花建一层目录的时间，并且这个倒置的域名 是有他的意义在里面的，你们可以把他看做是这个</p>\n<pre><code class=\"language-go\">// go 语言里的 import ，前面也有一个域名+项目名 来确定唯一性，包名里的倒置域名就是起这个作用的\nimport \"github.com/scan-util/xxx/xxx\"\n</code></pre>\n<p>还有很重要的一点，你们喷来喷去的那些多余的目录结构，在我们的观念里 根本就不存在，因为从来没有手工去创建过，要不是你们来吐槽，我们还真想不到这一点。</p>\n<p>不是因为 习惯了，而是真的从来没有为他们花过 5 秒钟以上的时间。有的连一毫秒都没花过。</p>\n<h2>方法语法</h2>\n<p>go</p>\n<pre><code class=\"language-go\">func BytesToString(val []byte) string\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">public String BytesToString(byte[] val)\n</code></pre>\n<p>我真没看出来多了什么东西</p>\n<h2>定义变量</h2>\n<p>go</p>\n<pre><code class=\"language-go\">name := \"张三\";\n\nvar map = make(map[string]interface{})\nvar array = make(string[], 10);\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">String name = \"张三\";\n\nMap&lt;String, Object&gt; map = new HashMap&lt;&gt;();\nString[] array = new String[10];\n\n</code></pre>\n<p>好像多了点东西，又好像没多什么。</p>\n<h2>循环</h2>\n<p>go</p>\n<pre><code class=\"language-go\">for(i:=0;i&lt;100;i++){\n\n}\n\nfor(i&lt;100){\n\n}\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">for(int i=0;i&lt;100;i++){\n\n}\n\nwhile(i&lt;100){\n\n}\n</code></pre>\n<p>确实多了几个字母。</p>\n<h2>创建类</h2>\n<p>go</p>\n<p>我知道这叫结构体，跟类是两码事，但是 go 就是用它来兼容 oop 的，所以我只能用它来举例子，因为没有其他语法可以实现 oop 了</p>\n<pre><code class=\"language-go\">type DemoParam struct {\n    name string\n}\n\nfunc (demoParam *DemoParam) FormValues(key string) []string {\n}\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">class DemoParam {\n    public String name;\n    \n    public String[] FormValues(String key){\n        \n    }\n}\n</code></pre>\n<p>字数上相差多少，我是懒得数了，但是你们真的不觉得 java 的结构更清晰吗？ 其他的继承，多态 我就不拿出来说了，go 基本上是 用的 c 的编程思想，oop 只是个兼容， 所以用 java 来跟他比 oop 没什么可比性。因为是两个方向。</p>\n<h2>异常处理</h2>\n<p>go</p>\n<pre><code class=\"language-go\">\nfunc testFunction(paramStr string) (string, error) {\n    if xxx {\n        return Errors.New(\"xxxx\");\n    }\n}\n\nparamStr, err := testFunction(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">public String testFunction(String paramStr){\n    if (xxx) {\n        throw new Execption(\"xxx\");\n    }\n}\n\ntry {\n    String paramStr = testFunction(\"ok\");\n} catch(Execption e){\n    log.Println(e.getMessage); \n}\n</code></pre>\n<p>这个看起来 go 好像 舒服一点，但是，实际场景下 go 经常是这种姿势</p>\n<pre><code class=\"language-go\">paramStr, err := testFunction(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n\nparamStr, err := testFunction2(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n\nparamStr, err := testFunction3(\"ok\")                              \nif err != nil {                           \n    log.Println(err.Error())                           \n}\n</code></pre>\n<p>而 java 还是只需要这样</p>\n<pre><code class=\"language-java\">try {\n    String paramStr = testFunction(\"ok\");\n    String paramStr = testFunction2(\"ok\");\n    String paramStr = testFunction3(\"ok\");\n} catch(Execption e){\n    log.Println(e.getMessage); \n}\n</code></pre>\n<p>并且这是 经过人为判断后，返回的错误提示，如果是意外的异常呢？ go 里面叫 panic ，java 只要用 try catch 包住了 就可以捕获，但是 go 需要用 defer ，而且一旦抛出异常就意味着这个函数结束了，你如果想在出异常后，处理一下 然后继续往下走，go 会非常的麻烦。</p>\n<h2>拆箱</h2>\n<p>go</p>\n<pre><code class=\"language-go\">// 如果有一个 interface{} 类型的变量 a ，想转成 int\n// 你必须明确的知道，他装箱前就是 int ，不然根本没法拆，必须做一下类型判断。\n// 我之前在写框架的时候 就被折磨的够呛，一大堆不必要的 if\n</code></pre>\n<p>java</p>\n<pre><code class=\"language-java\">// 不管装箱前是什么，只要他的值是一个整数\n// 无论是 1 ， 还是 \"1\", 都可以这么转\nInteger aInt = Integer.parseInteger(a.toString());\n\n// 也可以直接拆成 String\na.toString();\n</code></pre>\n<h2>如果你们还不服，那很好办，</h2>\n<p>你们出一个需求给我，我用 java ，你们用 go ，nodejs ，python ，php 随便什么语言，最后来比比 谁的代码少一些。 我敢说，绝对半斤八两，不可能有谁碾压谁的。</p>\n<p>而且还有一定的概率，java 在 丰富的生态+强大官方库的 加持下，可以更快完成。</p>\n", "last_modified": 1652407151, "replies": 212, "id": 852381}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/bbf9/4b34/403_large.png?m=1649961290", "name": "bitcoin", "avatar_normal": "https://cdn.v2ex.com/navatar/bbf9/4b34/403_normal.png?m=1649961290", "title": "Bitcoin", "url": "https://www.v2ex.com/go/bitcoin", "topics": 1434, "footer": "17FwbygitZ88JUZGZdUCE8AmpFiR86Nav3", "header": "P2P digital currency", "title_alternative": "Bitcoin", "avatar_mini": "https://cdn.v2ex.com/navatar/bbf9/4b34/403_mini.png?m=1649961290", "stars": 1558, "aliases": [], "root": false, "id": 403, "parent_node_name": "crypto"}, "member": {"id": 258847, "username": "mooniitt", "url": "https://www.v2ex.com/u/mooniitt", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/4474/01a0/258847_mini.png?m=1568100447", "avatar_normal": "https://cdn.v2ex.com/avatar/4474/01a0/258847_normal.png?m=1568100447", "avatar_large": "https://cdn.v2ex.com/avatar/4474/01a0/258847_large.png?m=1568100447", "created": 1507691743, "last_modified": 1568100447}, "last_reply_by": "justrand", "last_touched": 1652410584, "title": "比特币 开始暴跌了", "url": "https://www.v2ex.com/t/852413", "created": 1652336813, "deleted": 0, "content": "显卡还会降价吗", "content_rendered": "<p>显卡还会降价吗</p>\n", "last_modified": 1652336813, "replies": 116, "id": 852413}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1651385949", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1651385949", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 48728, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1651385949", "stars": 7814, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 543981, "username": "vchroc", "url": "https://www.v2ex.com/u/vchroc", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/50773e3a41daddb9af3b605295c52c9c?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/50773e3a41daddb9af3b605295c52c9c?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/50773e3a41daddb9af3b605295c52c9c?s=73&d=retro", "created": 1619580702, "last_modified": 1638959889}, "last_reply_by": "huruwo", "last_touched": 1652410554, "title": "Go 特性少，语法糖太少，味儿苦啊！求开发体验好、生态全的语言推荐", "url": "https://www.v2ex.com/t/852388", "created": 1652330540, "deleted": 0, "content": "包括不限于错误 /异常处理，泛型，OOP 等，\r\n还有就是缺失类似 spring 的 bean 扫描功能", "content_rendered": "<p>包括不限于错误 /异常处理，泛型，OOP 等，\n还有就是缺失类似 spring 的 bean 扫描功能</p>\n", "last_modified": 1652330973, "replies": 104, "id": 852388}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6512/bd43/11_large.png?m=1651565926", "name": "linux", "avatar_normal": "https://cdn.v2ex.com/navatar/6512/bd43/11_normal.png?m=1651565926", "title": "Linux", "url": "https://www.v2ex.com/go/linux", "topics": 6690, "footer": "", "header": "Linux is a Unix-like computer operating system assembled under the model of free and open source software development and distribution.", "title_alternative": "Linux", "avatar_mini": "https://cdn.v2ex.com/navatar/6512/bd43/11_mini.png?m=1651565926", "stars": 5790, "aliases": [], "root": false, "id": 11, "parent_node_name": "os"}, "member": {"id": 561211, "username": "zedpass", "url": "https://www.v2ex.com/u/zedpass", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/0cec3cc23245ab2394d55d6db820d75b?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/0cec3cc23245ab2394d55d6db820d75b?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/0cec3cc23245ab2394d55d6db820d75b?s=73&d=retro", "created": 1636386089, "last_modified": 1650358741}, "last_reply_by": "smoon", "last_touched": 1652410032, "title": "Linux 桌面的春天要来了？", "url": "https://www.v2ex.com/t/852363", "created": 1652325234, "deleted": 0, "content": "Flutter 3 加入了对 Linux 桌面应用程序的支持：\r\nhttps://medium.com/flutter/introducing-flutter-3-5eb69151622f\r\n\r\nNVIDIA 也开源了 Linux GPU 内核模块：\r\nhttps://github.com/NVIDIA/open-gpu-kernel-modules", "content_rendered": "<p>Flutter 3 加入了对 Linux 桌面应用程序的支持：\n<a href=\"https://medium.com/flutter/introducing-flutter-3-5eb69151622f\" rel=\"nofollow\">https://medium.com/flutter/introducing-flutter-3-5eb69151622f</a></p>\n<p>NVIDIA 也开源了 Linux GPU 内核模块：\n<a href=\"https://github.com/NVIDIA/open-gpu-kernel-modules\" rel=\"nofollow\">https://github.com/NVIDIA/open-gpu-kernel-modules</a></p>\n", "last_modified": 1652325234, "replies": 69, "id": 852363}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/e00d/a03b/139_large.png?m=1644497140", "name": "css", "avatar_normal": "https://cdn.v2ex.com/navatar/e00d/a03b/139_normal.png?m=1644497140", "title": "CSS", "url": "https://www.v2ex.com/go/css", "topics": 509, "footer": "", "header": "Cascading Style Sheet，层叠样式表，网页外观设计的标准技术。", "title_alternative": "CSS", "avatar_mini": "https://cdn.v2ex.com/navatar/e00d/a03b/139_mini.png?m=1644497140", "stars": 781, "aliases": [], "root": false, "id": 139, "parent_node_name": "programming"}, "member": {"id": 324410, "username": "HackerJax", "url": "https://www.v2ex.com/u/HackerJax", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "嗯，我是废物。", "avatar_mini": "https://cdn.v2ex.com/avatar/7d8f/72c3/324410_mini.png?m=1648950204", "avatar_normal": "https://cdn.v2ex.com/avatar/7d8f/72c3/324410_normal.png?m=1648950204", "avatar_large": "https://cdn.v2ex.com/avatar/7d8f/72c3/324410_large.png?m=1648950204", "created": 1529817063, "last_modified": 1648950204}, "last_reply_by": "wonderfulcxm", "last_touched": 1652410143, "title": "[吐槽]这个世界上为什么会有 Tailwind Css 这种东西？", "url": "https://www.v2ex.com/t/852519", "created": 1652366106, "deleted": 0, "content": "复制一段官网的代码：\r\n\r\n```html\r\n<figure class=\"md:flex bg-slate-100 rounded-xl p-8 md:p-0 dark:bg-slate-800\">\r\n  <img class=\"w-24 h-24 md:w-48 md:h-auto md:rounded-none rounded-full mx-auto\" src=\"/sarah-dayan.jpg\" alt=\"\" width=\"384\" height=\"512\">\r\n  <div class=\"pt-6 md:p-8 text-center md:text-left space-y-4\">\r\n    <blockquote>\r\n      <p class=\"text-lg font-medium\">\r\n        “Tailwind CSS is the only framework that I've seen scale\r\n        on large teams. It’s easy to customize, adapts to any design,\r\n        and the build size is tiny.”\r\n      </p>\r\n    </blockquote>\r\n    <figcaption class=\"font-medium\">\r\n      <div class=\"text-sky-500 dark:text-sky-400\">\r\n        Sarah Dayan\r\n      </div>\r\n      <div class=\"text-slate-700 dark:text-slate-500\">\r\n        Staff Engineer, Algolia\r\n      </div>\r\n    </figcaption>\r\n  </div>\r\n</figure>\r\n```\r\n\r\n听说这玩意儿最近很流行？\r\n\r\n跟手写 style 有啥区别啊？\r\n\r\n真有把这个用于生产环境的吗？\r\n\r\n写起来不累吗？\r\n\r\n我一个后端要看吐了！", "content_rendered": "<p>复制一段官网的代码：</p>\n<pre><code class=\"language-html\">&lt;figure class=\"md:flex bg-slate-100 rounded-xl p-8 md:p-0 dark:bg-slate-800\"&gt;\n  &lt;img class=\"w-24 h-24 md:w-48 md:h-auto md:rounded-none rounded-full mx-auto\" src=\"/sarah-dayan.jpg\" alt=\"\" width=\"384\" height=\"512\"&gt;\n  &lt;div class=\"pt-6 md:p-8 text-center md:text-left space-y-4\"&gt;\n    &lt;blockquote&gt;\n      &lt;p class=\"text-lg font-medium\"&gt;\n        “Tailwind CSS is the only framework that I've seen scale\n        on large teams. It’s easy to customize, adapts to any design,\n        and the build size is tiny.”\n      &lt;/p&gt;\n    &lt;/blockquote&gt;\n    &lt;figcaption class=\"font-medium\"&gt;\n      &lt;div class=\"text-sky-500 dark:text-sky-400\"&gt;\n        Sarah Dayan\n      &lt;/div&gt;\n      &lt;div class=\"text-slate-700 dark:text-slate-500\"&gt;\n        Staff Engineer, Algolia\n      &lt;/div&gt;\n    &lt;/figcaption&gt;\n  &lt;/div&gt;\n&lt;/figure&gt;\n</code></pre>\n<p>听说这玩意儿最近很流行？</p>\n<p>跟手写 style 有啥区别啊？</p>\n<p>真有把这个用于生产环境的吗？</p>\n<p>写起来不累吗？</p>\n<p>我一个后端要看吐了！</p>\n", "last_modified": 1652407585, "replies": 47, "id": 852519}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/3871/bd64/622_large.png?m=1625081807", "name": "devops", "avatar_normal": "https://cdn.v2ex.com/navatar/3871/bd64/622_normal.png?m=1625081807", "title": "DevOps", "url": "https://www.v2ex.com/go/devops", "topics": 350, "footer": "", "header": "我们不仅写代码，我们同时也关心代码将如何运行。", "title_alternative": "DevOps", "avatar_mini": "https://cdn.v2ex.com/navatar/3871/bd64/622_mini.png?m=1625081807", "stars": 563, "aliases": [], "root": false, "id": 622, "parent_node_name": "geek"}, "member": {"id": 398384, "username": "bloodkey", "url": "https://www.v2ex.com/u/bloodkey", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/641a8095d4aa5757c24d7d06e97a6314?s=73&d=retro", "created": 1554312054, "last_modified": 1554312054}, "last_reply_by": "lialzm", "last_touched": 1652360223, "title": "自建全套开源 DevOps 实践", "url": "https://www.v2ex.com/t/852433", "created": 1652340971, "deleted": 0, "content": "> 国内的 Devops 云平台动辄封号，删库，屏蔽，国内云平台 devops 已死！自建 Devops 平台才靠谱。这里采用开源项目建立一个完善的 Devops 系统，基本运行良好！\r\n\r\n> 个人 devops 实践系统。整套系统可以完全内网实现，不用申请域名、ssl 证书，完全自己管理 dns ，自签名证书。\r\n\r\n![]( https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/09/20220509132230.webp)\r\n\r\n配合 Consul 可以实现自动负载均衡\r\n![Consul]( https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/29/20220429190914-1.webp)\r\n\r\n大家有什么更好的项目推荐没？\r\n\r\n[首发于个人 blog]( https://blog.17lai.site/posts/ab63eb8f/)", "content_rendered": "<blockquote>\n<p>国内的 Devops 云平台动辄封号，删库，屏蔽，国内云平台 devops 已死！自建 Devops 平台才靠谱。这里采用开源项目建立一个完善的 Devops 系统，基本运行良好！</p>\n</blockquote>\n<blockquote>\n<p>个人 devops 实践系统。整套系统可以完全内网实现，不用申请域名、ssl 证书，完全自己管理 dns ，自签名证书。</p>\n</blockquote>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/05/09/20220509132230.webp\"/></p>\n<p>配合 Consul 可以实现自动负载均衡\n<img alt=\"Consul\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://cdn.jsdelivr.net/gh/appotry/cloudimg@latest/data/2022/04/29/20220429190914-1.webp\"/></p>\n<p>大家有什么更好的项目推荐没？</p>\n<p><a href=\"https://blog.17lai.site/posts/ab63eb8f/\" rel=\"nofollow\">首发于个人 blog</a></p>\n", "last_modified": 1652341187, "replies": 42, "id": 852433}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 184660, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340", "stars": 3474, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 544975, "username": "shadowfish0", "url": "https://www.v2ex.com/u/shadowfish0", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/c5cc/1049/544975_mini.png?m=1640502841", "avatar_normal": "https://cdn.v2ex.com/avatar/c5cc/1049/544975_normal.png?m=1640502841", "avatar_large": "https://cdn.v2ex.com/avatar/c5cc/1049/544975_large.png?m=1640502841", "created": 1620652443, "last_modified": 1640502841}, "last_reply_by": "johnnyNg", "last_touched": 1652409495, "title": "不开心但是钱多的工作 vs 有成就感但是钱少的工作，大家怎么选？", "url": "https://www.v2ex.com/t/852503", "created": 1652360493, "deleted": 0, "content": "马上要秋招了，在职业选择上挺纠结这个问题\r\n\r\n因为我大学期间做了快 2k 同学用过的项目，在维护项目的过程中觉得很酷很有成就感，就算一分钱没赚，自己倒贴钱（服务器等等费用），也觉得很开心\r\n\r\n所以找工作时就在考虑这个问题。从暑期实习的面试中大致能看出，大厂招人基本业务都是内部系统，可能会有老多 kpi 总结啥的杂事要求（我猜测），可能不能够像一些小型团队一样直接开发给用户侧的东西，或者自己负责一大块业务。\r\n\r\n不过因为我是双非学历，中大厂的贴金似乎也是挺重要的，大厂也会提供更多的培训机会，比如我很向往的蚂蚁体验技术部，之前参加支付宝前锋营觉得里面大佬都好和善~\r\n\r\n但是像字节、拼多多这种臭名远扬的 996 公司，可能年薪是真的会很多，但是不开心压力大，大家会怎么选择？\r\n\r\n我个人倾向“有成就感但是钱少的工作“，不知道这是不是“学生思维”", "content_rendered": "<p>马上要秋招了，在职业选择上挺纠结这个问题</p>\n<p>因为我大学期间做了快 2k 同学用过的项目，在维护项目的过程中觉得很酷很有成就感，就算一分钱没赚，自己倒贴钱（服务器等等费用），也觉得很开心</p>\n<p>所以找工作时就在考虑这个问题。从暑期实习的面试中大致能看出，大厂招人基本业务都是内部系统，可能会有老多 kpi 总结啥的杂事要求（我猜测），可能不能够像一些小型团队一样直接开发给用户侧的东西，或者自己负责一大块业务。</p>\n<p>不过因为我是双非学历，中大厂的贴金似乎也是挺重要的，大厂也会提供更多的培训机会，比如我很向往的蚂蚁体验技术部，之前参加支付宝前锋营觉得里面大佬都好和善~</p>\n<p>但是像字节、拼多多这种臭名远扬的 996 公司，可能年薪是真的会很多，但是不开心压力大，大家会怎么选择？</p>\n<p>我个人倾向“有成就感但是钱少的工作“，不知道这是不是“学生思维”</p>\n", "last_modified": 1652360493, "replies": 40, "id": 852503}]