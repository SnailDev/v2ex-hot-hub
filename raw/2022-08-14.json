[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/a4f2/3670/260_large.png?m=1650095354", "name": "security", "avatar_normal": "https://cdn.v2ex.com/navatar/a4f2/3670/260_normal.png?m=1650095354", "title": "信息安全", "url": "https://www.v2ex.com/go/security", "topics": 1372, "footer": "", "header": "我们都希望自己管理的计算机系统在运转过程中不要遇到任何安全事件。只是，这个不完美的世界的现实告诉我们：学无止境。", "title_alternative": "Security", "avatar_mini": "https://cdn.v2ex.com/navatar/a4f2/3670/260_mini.png?m=1650095354", "stars": 1550, "aliases": [], "root": false, "id": 260, "parent_node_name": "geek"}, "member": {"id": 541035, "username": "juejinloop", "url": "https://www.v2ex.com/u/juejinloop", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/84f8/4827/541035_mini.png?m=1656232270", "avatar_normal": "https://cdn.v2ex.com/avatar/84f8/4827/541035_normal.png?m=1656232270", "avatar_large": "https://cdn.v2ex.com/avatar/84f8/4827/541035_large.png?m=1656232270", "created": 1617513142, "last_modified": 1656232270}, "last_reply_by": "nguoidiqua", "last_touched": 1660471301, "title": "chrome 密码泄漏了， 才知道用 chrome 保存密码等于裸奔", "url": "https://www.v2ex.com/t/872745", "created": 1660451498, "deleted": 0, "content": "前几天电脑中毒了，虽然第一时间重装系统，但是隔天依然收到一大堆网站登录的 gamil 验证邮件，谷歌帐号也提示风险操作。密码管理一直用的 chrome 自带的，考虑是 chrome 保存的密码泄漏，于是连夜改了所有帐号密码，能二验的全部添加二验。然而第二天早上还是发现一台小鸡被人在 vps panel 里重装了 windows 系统，还好有数据备份，然后又改所有小鸡的 ssh 登陆密码。因为之前谷歌帐号开了二次验证，还好谷歌帐号没被登录。吃了这个惨痛的教训，我开始研究 chrome password manger 的安全问题，才发现 chrome 保存密码等于裸奔。\r\n\r\n一篇解释如何获取 chrome 保存的密码的文章：\r\nhttps://ohyicong.medium.com/how-to-hack-chrome-password-with-python-1bedc167be3d\r\n\r\n如果用 chrome 自带的密码管理保存密码，任何一个运行在你电脑上的程序，不需要管理员权限，都能解密并读取本地保存的密码。因为 chrome 的密码保存在本地加密的 sqlite 中，同时加解密密钥也明文保存在本地文件里，任何程序都能读取。\r\n\r\n加密 sqlite 文件路径: C:\\Users\\<PC Name>\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data\r\n\r\n解密密钥文件路径 C:\\Users\\<PC Name>\\AppData\\Local\\Google\\Chrome\\User Data\\Local State\r\n\r\n额外说明一点是解密需要用到 win32 提供的 API CryptUnprotectData 函数，这个函数保证解密是和加密在同一台电脑（用户）进行的，所以如果直接复制硬盘的浏览器数据到其他电脑上是解密不了的，但是只要你的 Windows 登录了，任何程序只要想都可以解密 chrome 的密码然后上传。 \r\n\r\n现在考虑转 bitwarden 中。", "content_rendered": "<p>前几天电脑中毒了，虽然第一时间重装系统，但是隔天依然收到一大堆网站登录的 gamil 验证邮件，谷歌帐号也提示风险操作。密码管理一直用的 chrome 自带的，考虑是 chrome 保存的密码泄漏，于是连夜改了所有帐号密码，能二验的全部添加二验。然而第二天早上还是发现一台小鸡被人在 vps panel 里重装了 windows 系统，还好有数据备份，然后又改所有小鸡的 ssh 登陆密码。因为之前谷歌帐号开了二次验证，还好谷歌帐号没被登录。吃了这个惨痛的教训，我开始研究 chrome password manger 的安全问题，才发现 chrome 保存密码等于裸奔。</p>\n<p>一篇解释如何获取 chrome 保存的密码的文章：\n<a href=\"https://ohyicong.medium.com/how-to-hack-chrome-password-with-python-1bedc167be3d\" rel=\"nofollow\">https://ohyicong.medium.com/how-to-hack-chrome-password-with-python-1bedc167be3d</a></p>\n<p>如果用 chrome 自带的密码管理保存密码，任何一个运行在你电脑上的程序，不需要管理员权限，都能解密并读取本地保存的密码。因为 chrome 的密码保存在本地加密的 sqlite 中，同时加解密密钥也明文保存在本地文件里，任何程序都能读取。</p>\n<p>加密 sqlite 文件路径: C:\\Users&lt;PC Name&gt;\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</p>\n<p>解密密钥文件路径 C:\\Users&lt;PC Name&gt;\\AppData\\Local\\Google\\Chrome\\User Data\\Local State</p>\n<p>额外说明一点是解密需要用到 win32 提供的 API CryptUnprotectData 函数，这个函数保证解密是和加密在同一台电脑（用户）进行的，所以如果直接复制硬盘的浏览器数据到其他电脑上是解密不了的，但是只要你的 Windows 登录了，任何程序只要想都可以解密 chrome 的密码然后上传。 </p>\n<p>现在考虑转 bitwarden 中。</p>\n", "last_modified": 1660451714, "replies": 97, "id": 872745}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1659331259", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1659331259", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 50286, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1659331259", "stars": 7931, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 371899, "username": "roundRobin", "url": "https://www.v2ex.com/u/roundRobin", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/1bcc/94a0/371899_mini.png?m=1653892894", "avatar_normal": "https://cdn.v2ex.com/avatar/1bcc/94a0/371899_normal.png?m=1653892894", "avatar_large": "https://cdn.v2ex.com/avatar/1bcc/94a0/371899_large.png?m=1653892894", "created": 1545324402, "last_modified": 1653892894}, "last_reply_by": "unregister", "last_touched": 1660469219, "title": "除去税和必要花费，单身汉每个月能存工资的几成？", "url": "https://www.v2ex.com/t/872742", "created": 1660450344, "deleted": 0, "content": "感觉我已经做到了极限，还是感觉钱存得太慢。\r\n\r\n坐标洛杉矶\r\n\r\n税前：22000\r\n税+医保+401K （退休保险）：8000\r\n房租：2700\r\n水电网气：150\r\n食物（速食+做饭）：250\r\n父母红包：500\r\n剩余：10400\r\n\r\n虽然我在外工作，但我的生活习惯完全跟国内一样，没有任何的社交，甚至没买车，不过因此公寓租在公司步行距离内也比较贵。\r\n\r\n从来不出去吃饭，没时间就吃速食，有时间就自己做饭，没有任何非必要消费，也只能存下 50%不到，而我也因此也牺牲了所有的社交机会，奔三了也几乎没认识过这边的女生。\r\n\r\n硕士毕业两年了，存的钱一半给家里补偿出国读研的花费，所以还得存两年才能付得起一栋边远地区平房的首付，而那时我已经 30+了，估计也没什么竞争力了，有时候就觉得这样还不如一个人过一辈子更舒服。\r\n\r\n半夜 EMO ，思绪紊乱，见谅。", "content_rendered": "感觉我已经做到了极限，还是感觉钱存得太慢。<br /><br />坐标洛杉矶<br /><br />税前：22000<br />税+医保+401K （退休保险）：8000<br />房租：2700<br />水电网气：150<br />食物（速食+做饭）：250<br />父母红包：500<br />剩余：10400<br /><br />虽然我在外工作，但我的生活习惯完全跟国内一样，没有任何的社交，甚至没买车，不过因此公寓租在公司步行距离内也比较贵。<br /><br />从来不出去吃饭，没时间就吃速食，有时间就自己做饭，没有任何非必要消费，也只能存下 50%不到，而我也因此也牺牲了所有的社交机会，奔三了也几乎没认识过这边的女生。<br /><br />硕士毕业两年了，存的钱一半给家里补偿出国读研的花费，所以还得存两年才能付得起一栋边远地区平房的首付，而那时我已经 30+了，估计也没什么竞争力了，有时候就觉得这样还不如一个人过一辈子更舒服。<br /><br />半夜 EMO ，思绪紊乱，见谅。", "last_modified": 1660450344, "replies": 34, "id": 872742}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1659331259", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1659331259", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 50286, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1659331259", "stars": 7931, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 274232, "username": "vevlins", "url": "https://www.v2ex.com/u/vevlins", "website": "vevlins.com", "twitter": "", "psn": "", "github": "vevlins", "btc": "", "location": "", "tagline": "", "bio": "If you can't explain it simply, you don't understand it well enough.", "avatar_mini": "https://cdn.v2ex.com/avatar/677c/39d0/274232_mini.png?m=1655127525", "avatar_normal": "https://cdn.v2ex.com/avatar/677c/39d0/274232_normal.png?m=1655127525", "avatar_large": "https://cdn.v2ex.com/avatar/677c/39d0/274232_large.png?m=1655127525", "avatar_xlarge": "https://cdn.v2ex.com/avatar/677c/39d0/274232_xlarge.png?m=1655127525", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/677c/39d0/274232_xlarge.png?m=1655127525", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/677c/39d0/274232_xlarge.png?m=1655127525", "created": 1513144668, "last_modified": 1655127525}, "last_reply_by": "devoter", "last_touched": 1660469280, "title": "关于润去海外的问题", "url": "https://www.v2ex.com/t/872740", "created": 1660450042, "deleted": 0, "content": "背景：\r\n普通 985 本毕业 3 年，没有海外学历。英语水平一般。有大厂工作经验，工程水平较好，算法较差。希望见识下世界级大厂。\r\n\r\n最靠谱应该还是留学吧，但经济和机会成本还是有些高。毕竟 1 年学费+1 年无工作的经济成本大约 100w 了，今年也 25 了。现在有能支撑一年美硕的积蓄。但目前的英语水平是不够的，如果从留学考虑的话可能还要再准备一年。又担心毕业时不知道政策和招聘行情是否合适，另外如果原来有工作经验，拿到 master 后可以去非校招面更高级的职位吗？\r\n\r\n另外是直接面国外公司，美国肯定没戏，新加坡等国家应该可以，但应该很难直接面到大厂，去 shopee 之类应该可以，但这不是我所希望见识的“世界级大厂”。只能算作一个跳板吧，锻炼下英语水平。新加坡虽然也有 meta 之类的办公室，但招聘很少。另外想请教下，读一个海外在线硕士（就是为人诟病的那种 10+w 美国网课，当然不会去参加中文上课的那种），对直申海外有帮助吗？\r\n\r\n再一种是国内 trans 到国外，但听说这些年机会也变少了。还有哪些公司有机会吗？\r\n\r\n我没有较明显的移民或者政治倾向，单纯想看看顶尖公司，所以不考虑海外小企业。\r\n\r\n如有经验，还望不吝赐教。", "content_rendered": "<p>背景：\n普通 985 本毕业 3 年，没有海外学历。英语水平一般。有大厂工作经验，工程水平较好，算法较差。希望见识下世界级大厂。</p>\n<p>最靠谱应该还是留学吧，但经济和机会成本还是有些高。毕竟 1 年学费+1 年无工作的经济成本大约 100w 了，今年也 25 了。现在有能支撑一年美硕的积蓄。但目前的英语水平是不够的，如果从留学考虑的话可能还要再准备一年。又担心毕业时不知道政策和招聘行情是否合适，另外如果原来有工作经验，拿到 master 后可以去非校招面更高级的职位吗？</p>\n<p>另外是直接面国外公司，美国肯定没戏，新加坡等国家应该可以，但应该很难直接面到大厂，去 shopee 之类应该可以，但这不是我所希望见识的“世界级大厂”。只能算作一个跳板吧，锻炼下英语水平。新加坡虽然也有 meta 之类的办公室，但招聘很少。另外想请教下，读一个海外在线硕士（就是为人诟病的那种 10+w 美国网课，当然不会去参加中文上课的那种），对直申海外有帮助吗？</p>\n<p>再一种是国内 trans 到国外，但听说这些年机会也变少了。还有哪些公司有机会吗？</p>\n<p>我没有较明显的移民或者政治倾向，单纯想看看顶尖公司，所以不考虑海外小企业。</p>\n<p>如有经验，还望不吝赐教。</p>\n", "last_modified": 1660450042, "replies": 32, "id": 872740}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1630643913", "name": "apple", "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1630643913", "title": "Apple", "url": "https://www.v2ex.com/go/apple", "topics": 19296, "footer": "", "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。", "title_alternative": "Apple", "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1630643913", "stars": 2250, "aliases": [], "root": false, "id": 184, "parent_node_name": "hardware"}, "member": {"id": 551349, "username": "inertiagrade", "url": "https://www.v2ex.com/u/inertiagrade", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/77d75dd5899661767c1e923659ecfe18?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/77d75dd5899661767c1e923659ecfe18?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/77d75dd5899661767c1e923659ecfe18?s=73&d=retro", "created": 1626773128, "last_modified": 1626773128}, "last_reply_by": "inertiagrade", "last_touched": 1660463066, "title": "Mac 远程锁 SimpleLock", "url": "https://www.v2ex.com/t/872673", "created": 1660397816, "deleted": 0, "content": "我个人在公司上班的时候使用的是个人 Mac ，个人 Mac 上不可避免的就会存一些私人的信息了。公司毕竟还是公共场合，我自己也把安全问题看得比较重要，也许是反破解形成的惯性和习惯，所以每次离开 Mac 的时候都会动手把 Mac 屏幕锁上，保护信息的安全嘛。不知道是不是年纪大了的原因，有时候不在 Mac 旁边的时候回想不起屏幕有没有锁定，要跑回去看，这样就有恼火。经常这样同事也很难理解我的行为，不知道我在干嘛 :(\r\n\r\n基于这个情况就开发了这个 SimpleLock, 一把 Mac 电脑的远程锁，就像 App 名字描述的那样，App 的核心功能很简单，就是查询 Mac 锁定状态和远程锁定。 欢迎需要的同学试用, 期望收到你们的反馈 :)\r\n\r\n[iPhone App Store]( https://apps.apple.com/us/app/simplelock/id1636013366)\r\n\r\n[SimpleLock]( https://simplelock.app/)", "content_rendered": "<p>我个人在公司上班的时候使用的是个人 Mac ，个人 Mac 上不可避免的就会存一些私人的信息了。公司毕竟还是公共场合，我自己也把安全问题看得比较重要，也许是反破解形成的惯性和习惯，所以每次离开 Mac 的时候都会动手把 Mac 屏幕锁上，保护信息的安全嘛。不知道是不是年纪大了的原因，有时候不在 Mac 旁边的时候回想不起屏幕有没有锁定，要跑回去看，这样就有恼火。经常这样同事也很难理解我的行为，不知道我在干嘛 :(</p>\n<p>基于这个情况就开发了这个 SimpleLock, 一把 Mac 电脑的远程锁，就像 App 名字描述的那样，App 的核心功能很简单，就是查询 Mac 锁定状态和远程锁定。 欢迎需要的同学试用, 期望收到你们的反馈 :)</p>\n<p><a href=\"https://apps.apple.com/us/app/simplelock/id1636013366\" rel=\"nofollow\">iPhone App Store</a></p>\n<p><a href=\"https://simplelock.app/\" rel=\"nofollow\">SimpleLock</a></p>\n", "last_modified": 1660397816, "replies": 28, "id": 872673}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 3386, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 888, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 577122, "username": "nishuoshenme", "url": "https://www.v2ex.com/u/nishuoshenme", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/7d7a/211a/577122_mini.png?m=1660113184", "avatar_normal": "https://cdn.v2ex.com/avatar/7d7a/211a/577122_normal.png?m=1660113184", "avatar_large": "https://cdn.v2ex.com/avatar/7d7a/211a/577122_large.png?m=1660113184", "avatar_xlarge": "https://cdn.v2ex.com/avatar/7d7a/211a/577122_xlarge.png?m=1660113184", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/7d7a/211a/577122_xlarge.png?m=1660113184", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/7d7a/211a/577122_xlarge.png?m=1660113184", "created": 1648724319, "last_modified": 1660113184}, "last_reply_by": "akira", "last_touched": 1660470744, "title": "大家晚上一般需要多久才能睡着？", "url": "https://www.v2ex.com/t/872754", "created": 1660454872, "deleted": 0, "content": "从高中开始，晚上躺下后，没个四五十分钟、一个小时很难睡着，真羡慕睡眠好的人啊", "content_rendered": "从高中开始，晚上躺下后，没个四五十分钟、一个小时很难睡着，真羡慕睡眠好的人啊", "last_modified": 1660455195, "replies": 26, "id": 872754}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6565/8fde/536_large.png?m=1645605296", "name": "ubuntu", "avatar_normal": "https://cdn.v2ex.com/navatar/6565/8fde/536_normal.png?m=1645605296", "title": "Ubuntu", "url": "https://www.v2ex.com/go/ubuntu", "topics": 529, "footer": "", "header": "Super-fast, easy to use and free, the Ubuntu operating system powers millions of desktops, netbooks and servers around the world.", "title_alternative": "Ubuntu", "avatar_mini": "https://cdn.v2ex.com/navatar/6565/8fde/536_mini.png?m=1645605296", "stars": 466, "aliases": [], "root": false, "id": 536, "parent_node_name": "linux"}, "member": {"id": 146321, "username": "Kawnnor", "url": "https://www.v2ex.com/u/Kawnnor", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/435a/a283/146321_mini.png?m=1625148830", "avatar_normal": "https://cdn.v2ex.com/avatar/435a/a283/146321_normal.png?m=1625148830", "avatar_large": "https://cdn.v2ex.com/avatar/435a/a283/146321_large.png?m=1625148830", "created": 1446990828, "last_modified": 1625148830}, "last_reply_by": "zdkmygod", "last_touched": 1660423520, "title": "笔记本厂商预装 Ubuntu 不需要付费吗？", "url": "https://www.v2ex.com/t/872658", "created": 1660390631, "deleted": 0, "content": "相同配置，不同系统，价格差很多。\r\n\r\n预装 Ubuntu 的型号差不便宜了 $200 ，是因为预装 Ubuntu 不需要付费的吗？\r\n\r\n![]( https://cdn-std.droplr.net/files/acc_501093/WbY0PH)", "content_rendered": "<p>相同配置，不同系统，价格差很多。</p>\n<p>预装 Ubuntu 的型号差不便宜了 $200 ，是因为预装 Ubuntu 不需要付费的吗？</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://cdn-std.droplr.net/files/acc_501093/WbY0PH\"/></p>\n", "last_modified": 1660390631, "replies": 22, "id": 872658}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1659331259", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1659331259", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 50286, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1659331259", "stars": 7931, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 572448, "username": "zeyezhan", "url": "https://www.v2ex.com/u/zeyezhan", "website": null, "twitter": "", "psn": "", "github": "zhanyeye", "btc": "", "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_mini.png?m=1646723374", "avatar_normal": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_normal.png?m=1646723374", "avatar_large": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_large.png?m=1646723374", "avatar_xlarge": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_xlarge.png?m=1646723374", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_xlarge.png?m=1646723374", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_xlarge.png?m=1646723374", "created": 1644552579, "last_modified": 1646723374}, "last_reply_by": "1002xin", "last_touched": 1660471226, "title": "自定义 Clash 代理规则的方案（使用 github actions 缓存到 CDN，提升访问速度）", "url": "https://www.v2ex.com/t/872662", "created": 1660391985, "deleted": 0, "content": "链接： https://github.com/zhanyeye/clash-rules-lite\r\n\r\n<p align=\"center\">\r\n<a href=\"https://github.com/zhanyeye/clash-rules-lite\">\r\n <h2 align=\"center\">Clash Rules Lite</h2> </a>\r\n \r\n <p align=\"center\">🍒 自定义代理规则，精简匹配规则 (<b>代理匹配速度明显提升</b>)。</p>\r\n\r\n</p>\r\n\r\n\r\n#### 工具介绍\r\n+ Clash 默认的 GFW 代理规则内容太多，使用过程中明显感觉到有延迟\r\n+ 该工具的目的是删除不必要的代理规则，方便用户自定义代理的内容\r\n+ 代理规则放在 github 仓库中方便多设备同步，只需编辑[rules.txt]( https://github.com/zhanyeye/clash-rules-lite/blob/main/rules.txt)即可\r\n+ 当用户更新规则后，使用 Github Actions 自动将规则缓存到免费 CDN 上 \r\n+ 用户在 github 上更新规则后，在 clash 的 providers 上点击刷新就可以了\r\n\r\n\r\n\r\n#### 使用方法\r\n1. fork 本仓库：[Fork zhanyeye/clash-rules-lite]( https://github.com/zhanyeye/clash-rules-lite/fork) \r\n\r\n2. 鼠标右击订阅的配置文件选中“复制”，将复制的文件命名为`local`（因为更新订阅链接时会覆盖你的修改）\r\n\r\n<div>\r\n    <img width=\"750\" src=\"https://user-images.githubusercontent.com/35565811/184479698-dbc0f06b-7313-4448-a694-cad3d9d5dbe3.png\">\r\n</div>\r\n\r\n\r\n3. 在你复制的 `local` 配置中，修改配置如下，注意 `proxies`, `proxy-groups` 和 `{YOUR-GITHUB-USERNAME}` 修改为你的配置（加粗的部分）\r\n\r\n\r\n<pre><code> \r\nmixed-port: 7890\r\nallow-lan: true\r\nbind-address: '*'\r\nmode: rule\r\nlog-level: silent\r\nexternal-controller: '127.0.0.1:9090'\r\nproxies:\r\n    <b>- { name: '1-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\r\n    <b>- { name: '2-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\r\nproxy-groups:\r\n    <b>- { name: 'PROXY', type: select, proxies: ['1-香港', '2-香港'] }</b>\r\nrules:\r\n  - DOMAIN-KEYWORD,github,PROXY\r\n  - DOMAIN-KEYWORD,google,PROXY\r\n  - RULE-SET,pac,PROXY\r\nrule-providers:\r\n  pac:\r\n    type: http\r\n    behavior: domain\r\n    url: \"https://cdn.jsdelivr.net/gh/<b>{YOUR-GITHUB-USERNAME}</b>/clash-rules-lite@release/rules.txt\"\r\n    path: ./rules/pac.yaml\r\n    interval: 86400\r\nscript:\r\n  code: |\r\n    def main(ctx, metadata):\r\n        keywords = [\"google\", \"github\"]\r\n        for key in keywords:\r\n            if key in metadata[\"host\"]:\r\n                return \"PROXY\"\r\n        if ctx.rule_providers[\"pac\"].match(metadata):\r\n            return \"PROXY\"\r\n        else:\r\n            return \"DIRECT\"\r\n\r\n</code></pre>\r\n\r\n\r\n3. 运行修改后的 `local` 配置，再切换成 `Rule` 或 `Script` 模式\r\n<div>\r\n    <img width=\"750\" src=\"https://user-images.githubusercontent.com/35565811/184479791-6e2c12ca-d28f-4009-839a-e9a06bdcff00.png\">\r\n</div>\r\n\r\n\r\n#### 自定义代理规则\r\n修改仓库中`rules.txt`，修改完后会自动更新并邮件提醒，然后在 Clash 上刷新 providers\r\n<div>\r\n    <img width=\"750\" src=\"https://user-images.githubusercontent.com/35565811/184480450-c24dd895-2b8a-4cfb-8f9e-77843c3df5af.png\">\r\n</div>\r\n\r\n#### 高阶玩法\r\n+ 使用 python 脚本解析订阅链接，自动生成改配置文件，需要你在 Python 代码中设置好你的订阅链接，代码见：[generate_config_quickly.py]( https://github.com/zhanyeye/clash-rules-lite/blob/main/generate_config_quickly.py)\r\n+ 注意该解析脚本是基于本人的订阅链接编写的，不一定适合所有机场，你可以自己修改代码，比较容易", "content_rendered": "<p>链接： <a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\">https://github.com/zhanyeye/clash-rules-lite</a></p>\n<p>\n<a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\">\n</a></p><h2><a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\">Clash Rules Lite</a></h2><a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\"> </a>\n<p>🍒 自定义代理规则，精简匹配规则 (<b>代理匹配速度明显提升</b>)。</p>\n<p></p>\n<h4>工具介绍</h4>\n<ul>\n<li>Clash 默认的 GFW 代理规则内容太多，使用过程中明显感觉到有延迟</li>\n<li>该工具的目的是删除不必要的代理规则，方便用户自定义代理的内容</li>\n<li>代理规则放在 github 仓库中方便多设备同步，只需编辑<a href=\"https://github.com/zhanyeye/clash-rules-lite/blob/main/rules.txt\" rel=\"nofollow\">rules.txt</a>即可</li>\n<li>当用户更新规则后，使用 Github Actions 自动将规则缓存到免费 CDN 上 </li>\n<li>用户在 github 上更新规则后，在 clash 的 providers 上点击刷新就可以了</li>\n</ul>\n<h4>使用方法</h4>\n<ol>\n<li>\n<p>fork 本仓库：<a href=\"https://github.com/zhanyeye/clash-rules-lite/fork\" rel=\"nofollow\">Fork zhanyeye/clash-rules-lite</a> </p>\n</li>\n<li>\n<p>鼠标右击订阅的配置文件选中“复制”，将复制的文件命名为<code>local</code>（因为更新订阅链接时会覆盖你的修改）</p>\n</li>\n</ol>\n<div>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://user-images.githubusercontent.com/35565811/184479698-dbc0f06b-7313-4448-a694-cad3d9d5dbe3.png\"/>\n</div>\n<ol>\n<li>在你复制的 <code>local</code> 配置中，修改配置如下，注意 <code>proxies</code>, <code>proxy-groups</code> 和 <code>{YOUR-GITHUB-USERNAME}</code> 修改为你的配置（加粗的部分）</li>\n</ol>\n<pre><code> \nmixed-port: 7890\nallow-lan: true\nbind-address: '*'\nmode: rule\nlog-level: silent\nexternal-controller: '127.0.0.1:9090'\nproxies:\n    <b>- { name: '1-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\n    <b>- { name: '2-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\nproxy-groups:\n    <b>- { name: 'PROXY', type: select, proxies: ['1-香港', '2-香港'] }</b>\nrules:\n  - DOMAIN-KEYWORD,github,PROXY\n  - DOMAIN-KEYWORD,google,PROXY\n  - RULE-SET,pac,PROXY\nrule-providers:\n  pac:\n    type: http\n    behavior: domain\n    url: \"https://cdn.jsdelivr.net/gh/<b>{YOUR-GITHUB-USERNAME}</b>/clash-rules-lite@release/rules.txt\"\n    path: ./rules/pac.yaml\n    interval: 86400\nscript:\n  code: |\n    def main(ctx, metadata):\n        keywords = [\"google\", \"github\"]\n        for key in keywords:\n            if key in metadata[\"host\"]:\n                return \"PROXY\"\n        if ctx.rule_providers[\"pac\"].match(metadata):\n            return \"PROXY\"\n        else:\n            return \"DIRECT\"\n\n</code></pre>\n<ol>\n<li>运行修改后的 <code>local</code> 配置，再切换成 <code>Rule</code> 或 <code>Script</code> 模式</li>\n</ol>\n<div>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://user-images.githubusercontent.com/35565811/184479791-6e2c12ca-d28f-4009-839a-e9a06bdcff00.png\"/>\n</div>\n<h4>自定义代理规则</h4>\n<p>修改仓库中<code>rules.txt</code>，修改完后会自动更新并邮件提醒，然后在 Clash 上刷新 providers</p>\n<div>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://user-images.githubusercontent.com/35565811/184480450-c24dd895-2b8a-4cfb-8f9e-77843c3df5af.png\"/>\n</div>\n<h4>高阶玩法</h4>\n<ul>\n<li>使用 python 脚本解析订阅链接，自动生成改配置文件，需要你在 Python 代码中设置好你的订阅链接，代码见：<a href=\"https://github.com/zhanyeye/clash-rules-lite/blob/main/generate_config_quickly.py\" rel=\"nofollow\">generate_config_quickly.py</a></li>\n<li>注意该解析脚本是基于本人的订阅链接编写的，不一定适合所有机场，你可以自己修改代码，比较容易</li>\n</ul>\n", "last_modified": 1660392497, "replies": 22, "id": 872662}]