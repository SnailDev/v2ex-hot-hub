[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1659331259", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1659331259", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 50284, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1659331259", "stars": 7931, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 55150, "username": "ericgui", "url": "https://www.v2ex.com/u/ericgui", "website": "https://www.helloworldjs.com", "twitter": "", "psn": "", "github": "", "btc": "", "location": "San Diego", "tagline": "", "bio": "一个写JavaScript的精神Java程序员，所以在努力地用Java解leetcode", "avatar_mini": "https://cdn.v2ex.com/avatar/f91c/6b29/55150_mini.png?m=1659117369", "avatar_normal": "https://cdn.v2ex.com/avatar/f91c/6b29/55150_normal.png?m=1659117369", "avatar_large": "https://cdn.v2ex.com/avatar/f91c/6b29/55150_large.png?m=1659117369", "avatar_xlarge": "https://cdn.v2ex.com/avatar/f91c/6b29/55150_xlarge.png?m=1659117369", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/f91c/6b29/55150_xlarge.png?m=1659117369", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/f91c/6b29/55150_xlarge.png?m=1659117369", "created": 1391057809, "last_modified": 1659117369}, "last_reply_by": "nicebird", "last_touched": 1660456090, "title": "日本程序员薪资", "url": "https://www.v2ex.com/t/872621", "created": 1660375331, "deleted": 0, "content": "https://zhuanlan.zhihu.com/p/358579089\r\n\r\n根据这篇文章，日本程序员目前最低年薪为 200 万日元，最高为 1000 万日元，中位数在 400 万日元左右。其平均年薪在 4370460 日元。\r\n\r\n1 人民币等于 19.79 日元，就算 20 日元吧。\r\n\r\n根据这个，https://mp.weixin.qq.com/s/aueOt4tWfJFBx71kt1E2gQ\r\n\r\n日本的谷歌程序员，顶薪才 2000 万日元，人民币也就 100 万\r\n\r\n这算下来，日本程序员够惨的啊\r\n\r\n国内程序员的平均工资也比 4370460 日元多，更别提大厂程序员，100 万以上的不少吧。\r\n\r\n1 美元等于 133 日元，按照上面的数字，除以 133 ，更不剩什么了。", "content_rendered": "<p><a href=\"https://zhuanlan.zhihu.com/p/358579089\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/358579089</a></p>\n<p>根据这篇文章，日本程序员目前最低年薪为 200 万日元，最高为 1000 万日元，中位数在 400 万日元左右。其平均年薪在 4370460 日元。</p>\n<p>1 人民币等于 19.79 日元，就算 20 日元吧。</p>\n<p>根据这个，<a href=\"https://mp.weixin.qq.com/s/aueOt4tWfJFBx71kt1E2gQ\" rel=\"nofollow\">https://mp.weixin.qq.com/s/aueOt4tWfJFBx71kt1E2gQ</a></p>\n<p>日本的谷歌程序员，顶薪才 2000 万日元，人民币也就 100 万</p>\n<p>这算下来，日本程序员够惨的啊</p>\n<p>国内程序员的平均工资也比 4370460 日元多，更别提大厂程序员，100 万以上的不少吧。</p>\n<p>1 美元等于 133 日元，按照上面的数字，除以 133 ，更不剩什么了。</p>\n", "last_modified": 1660375331, "replies": 71, "id": 872621}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1650127281", "name": "share", "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1650127281", "title": "分享发现", "url": "https://www.v2ex.com/go/share", "topics": 35977, "footer": "", "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。", "title_alternative": "Share", "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1650127281", "stars": 4916, "aliases": [], "root": false, "id": 16, "parent_node_name": "v2ex"}, "member": {"id": 99039, "username": "coderlxm", "url": "https://www.v2ex.com/u/coderlxm", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/2d8f/02e5/99039_mini.png?m=1548847857", "avatar_normal": "https://cdn.v2ex.com/avatar/2d8f/02e5/99039_normal.png?m=1548847857", "avatar_large": "https://cdn.v2ex.com/avatar/2d8f/02e5/99039_large.png?m=1548847857", "created": 1424446163, "last_modified": 1548847857}, "last_reply_by": "clearc", "last_touched": 1660394806, "title": "国内的游戏氛围真的太差了", "url": "https://www.v2ex.com/t/872647", "created": 1660384462, "deleted": 0, "content": "多数人只会玩点手游，吃鸡王者之类的，对游戏的了解几乎没有，游戏文化和发展史这些也跟白纸一样，充其量也就知道个 ns ps 这些。今天跟个自称很懂游戏的所谓高手聊到 ftg 和 castlevania ，发现居然连我说什么都不知道，顾左右而言他，说自己会打街霸，居然不知道 evo moment 37 ，我都无语死了，不过还是没戳穿他。然后又瞎扯到老头环，一直在强调魂系的难度，我就比较好奇是不是游戏阅历过少，对魂系的难度过于高估了，人家 Celeste 的 202 草莓一命通关和空洞骑士 r45 这样的挑战才叫有难度，而且魂系对反应要求也不高，不像街霸和 KOF 这样对立回及确认反应有极高要求。总之就是，大多数人玩游戏，真的太应付了，也不全怪电子阳痿，就是整个大环境就是蜻蜓点水地去玩一下，然后就没了。", "content_rendered": "多数人只会玩点手游，吃鸡王者之类的，对游戏的了解几乎没有，游戏文化和发展史这些也跟白纸一样，充其量也就知道个 ns ps 这些。今天跟个自称很懂游戏的所谓高手聊到 ftg 和 castlevania ，发现居然连我说什么都不知道，顾左右而言他，说自己会打街霸，居然不知道 evo moment 37 ，我都无语死了，不过还是没戳穿他。然后又瞎扯到老头环，一直在强调魂系的难度，我就比较好奇是不是游戏阅历过少，对魂系的难度过于高估了，人家 Celeste 的 202 草莓一命通关和空洞骑士 r45 这样的挑战才叫有难度，而且魂系对反应要求也不高，不像街霸和 KOF 这样对立回及确认反应有极高要求。总之就是，大多数人玩游戏，真的太应付了，也不全怪电子阳痿，就是整个大环境就是蜻蜓点水地去玩一下，然后就没了。", "last_modified": 1660384462, "replies": 62, "id": 872647}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/a4f2/3670/260_large.png?m=1650095354", "name": "security", "avatar_normal": "https://cdn.v2ex.com/navatar/a4f2/3670/260_normal.png?m=1650095354", "title": "信息安全", "url": "https://www.v2ex.com/go/security", "topics": 1372, "footer": "", "header": "我们都希望自己管理的计算机系统在运转过程中不要遇到任何安全事件。只是，这个不完美的世界的现实告诉我们：学无止境。", "title_alternative": "Security", "avatar_mini": "https://cdn.v2ex.com/navatar/a4f2/3670/260_mini.png?m=1650095354", "stars": 1550, "aliases": [], "root": false, "id": 260, "parent_node_name": "geek"}, "member": {"id": 541035, "username": "juejinloop", "url": "https://www.v2ex.com/u/juejinloop", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/84f8/4827/541035_mini.png?m=1656232270", "avatar_normal": "https://cdn.v2ex.com/avatar/84f8/4827/541035_normal.png?m=1656232270", "avatar_large": "https://cdn.v2ex.com/avatar/84f8/4827/541035_large.png?m=1656232270", "created": 1617513142, "last_modified": 1656232270}, "last_reply_by": "nbndco", "last_touched": 1660457226, "title": "chrome 密码泄漏了， 才知道用 chrome 保存密码等于裸奔", "url": "https://www.v2ex.com/t/872745", "created": 1660451498, "deleted": 0, "content": "前几天电脑中毒了，虽然第一时间重装系统，但是隔天依然收到一大堆网站登录的 gamil 验证邮件，谷歌帐号也提示风险操作。密码管理一直用的 chrome 自带的，考虑是 chrome 保存的密码泄漏，于是连夜改了所有帐号密码，能二验的全部添加二验。然而第二天早上还是发现一台小鸡被人在 vps panel 里重装了 windows 系统，还好有数据备份，然后又改所有小鸡的 ssh 登陆密码。因为之前谷歌帐号开了二次验证，还好谷歌帐号没被登录。吃了这个惨痛的教训，我开始研究 chrome password manger 的安全问题，才发现 chrome 保存密码等于裸奔。\r\n\r\n一篇解释如何获取 chrome 保存的密码的文章：\r\nhttps://ohyicong.medium.com/how-to-hack-chrome-password-with-python-1bedc167be3d\r\n\r\n如果用 chrome 自带的密码管理保存密码，任何一个运行在你电脑上的程序，不需要管理员权限，都能解密并读取本地保存的密码。因为 chrome 的密码保存在本地加密的 sqlite 中，同时加解密密钥也明文保存在本地文件里，任何程序都能读取。\r\n\r\n加密 sqlite 文件路径: C:\\Users\\<PC Name>\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data\r\n\r\n解密密钥文件路径 C:\\Users\\<PC Name>\\AppData\\Local\\Google\\Chrome\\User Data\\Local State\r\n\r\n额外说明一点是解密需要用到 win32 提供的 API CryptUnprotectData 函数，这个函数保证解密是和加密在同一台电脑（用户）进行的，所以如果直接复制硬盘的浏览器数据到其他电脑上是解密不了的，但是只要你的 Windows 登录了，任何程序只要想都可以解密 chrome 的密码然后上传。 \r\n\r\n现在考虑转 bitwarden 中。", "content_rendered": "<p>前几天电脑中毒了，虽然第一时间重装系统，但是隔天依然收到一大堆网站登录的 gamil 验证邮件，谷歌帐号也提示风险操作。密码管理一直用的 chrome 自带的，考虑是 chrome 保存的密码泄漏，于是连夜改了所有帐号密码，能二验的全部添加二验。然而第二天早上还是发现一台小鸡被人在 vps panel 里重装了 windows 系统，还好有数据备份，然后又改所有小鸡的 ssh 登陆密码。因为之前谷歌帐号开了二次验证，还好谷歌帐号没被登录。吃了这个惨痛的教训，我开始研究 chrome password manger 的安全问题，才发现 chrome 保存密码等于裸奔。</p>\n<p>一篇解释如何获取 chrome 保存的密码的文章：\n<a href=\"https://ohyicong.medium.com/how-to-hack-chrome-password-with-python-1bedc167be3d\" rel=\"nofollow\">https://ohyicong.medium.com/how-to-hack-chrome-password-with-python-1bedc167be3d</a></p>\n<p>如果用 chrome 自带的密码管理保存密码，任何一个运行在你电脑上的程序，不需要管理员权限，都能解密并读取本地保存的密码。因为 chrome 的密码保存在本地加密的 sqlite 中，同时加解密密钥也明文保存在本地文件里，任何程序都能读取。</p>\n<p>加密 sqlite 文件路径: C:\\Users&lt;PC Name&gt;\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</p>\n<p>解密密钥文件路径 C:\\Users&lt;PC Name&gt;\\AppData\\Local\\Google\\Chrome\\User Data\\Local State</p>\n<p>额外说明一点是解密需要用到 win32 提供的 API CryptUnprotectData 函数，这个函数保证解密是和加密在同一台电脑（用户）进行的，所以如果直接复制硬盘的浏览器数据到其他电脑上是解密不了的，但是只要你的 Windows 登录了，任何程序只要想都可以解密 chrome 的密码然后上传。 </p>\n<p>现在考虑转 bitwarden 中。</p>\n", "last_modified": 1660451714, "replies": 47, "id": 872745}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/9f61/408e/56_large.png?m=1628212285", "name": "internet", "avatar_normal": "https://cdn.v2ex.com/navatar/9f61/408e/56_normal.png?m=1628212285", "title": "互联网", "url": "https://www.v2ex.com/go/internet", "topics": 3225, "footer": "", "header": "In Internet we trust", "title_alternative": "Internet", "avatar_mini": "https://cdn.v2ex.com/navatar/9f61/408e/56_mini.png?m=1628212285", "stars": 974, "aliases": [], "root": false, "id": 56, "parent_node_name": "computer"}, "member": {"id": 484283, "username": "daoqiongsi1101", "url": "https://www.v2ex.com/u/daoqiongsi1101", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/18bc/5190/484283_mini.png?m=1655623630", "avatar_normal": "https://cdn.v2ex.com/avatar/18bc/5190/484283_normal.png?m=1655623630", "avatar_large": "https://cdn.v2ex.com/avatar/18bc/5190/484283_large.png?m=1655623630", "created": 1587047408, "last_modified": 1655623630}, "last_reply_by": "ZE3kr", "last_touched": 1660455716, "title": "如何看待 Disney+ 的订阅用户数量已经超过了 Netflix？", "url": "https://www.v2ex.com/t/872614", "created": 1660372676, "deleted": 0, "content": "从个人使用体验来说，Netflix 的剧集和电影资源更吸引我一些，因此花在 Netflix 的时间也多很多，有点不理解为什么 Disney+ 的订阅数超过 Netflix ？\r\n\r\n大家说说个人的体会。", "content_rendered": "<p>从个人使用体验来说，Netflix 的剧集和电影资源更吸引我一些，因此花在 Netflix 的时间也多很多，有点不理解为什么 Disney+ 的订阅数超过 Netflix ？</p>\n<p>大家说说个人的体会。</p>\n", "last_modified": 1660372676, "replies": 47, "id": 872614}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1659331259", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1659331259", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 50284, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1659331259", "stars": 7931, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 588814, "username": "justanetizen", "url": "https://www.v2ex.com/u/justanetizen", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "蛇在蜕皮 蝉在蜕壳", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/ef16/36dd/588814_mini.png?m=1660383551", "avatar_normal": "https://cdn.v2ex.com/avatar/ef16/36dd/588814_normal.png?m=1660383551", "avatar_large": "https://cdn.v2ex.com/avatar/ef16/36dd/588814_large.png?m=1660383551", "avatar_xlarge": "https://cdn.v2ex.com/avatar/ef16/36dd/588814_xlarge.png?m=1660383551", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/ef16/36dd/588814_xlarge.png?m=1660383551", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/ef16/36dd/588814_xlarge.png?m=1660383551", "created": 1658398442, "last_modified": 1660383551}, "last_reply_by": "gamexg", "last_touched": 1660424380, "title": "关于开源的一点想法", "url": "https://www.v2ex.com/t/872641", "created": 1660382467, "deleted": 0, "content": "蹲在厕所刷抖音的时候，突然就明白了点什么，发觉全身心投入到开源中的人和那些相信抖音上的电视剧视频的人好像，github 上那些国外的开发者就如电视剧里的人物一样，无数的人相信电视剧，将电视剧里描述的东西当成人生的一个追求，或者当成是自己想要过的一种理想生活，github 上的那些程序员何其相似。国外开发者用的是自己的母语，演员也是用的自己的母语。。呵呵。这似乎就是一个怪圈，明明读了那么多书的大学生，追求的东西竟然是那般幼稚。", "content_rendered": "<p>蹲在厕所刷抖音的时候，突然就明白了点什么，发觉全身心投入到开源中的人和那些相信抖音上的电视剧视频的人好像，github 上那些国外的开发者就如电视剧里的人物一样，无数的人相信电视剧，将电视剧里描述的东西当成人生的一个追求，或者当成是自己想要过的一种理想生活，github 上的那些程序员何其相似。国外开发者用的是自己的母语，演员也是用的自己的母语。。呵呵。这似乎就是一个怪圈，明明读了那么多书的大学生，追求的东西竟然是那般幼稚。</p>\n", "last_modified": 1660382534, "replies": 32, "id": 872641}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6565/8fde/536_large.png?m=1645605296", "name": "ubuntu", "avatar_normal": "https://cdn.v2ex.com/navatar/6565/8fde/536_normal.png?m=1645605296", "title": "Ubuntu", "url": "https://www.v2ex.com/go/ubuntu", "topics": 529, "footer": "", "header": "Super-fast, easy to use and free, the Ubuntu operating system powers millions of desktops, netbooks and servers around the world.", "title_alternative": "Ubuntu", "avatar_mini": "https://cdn.v2ex.com/navatar/6565/8fde/536_mini.png?m=1645605296", "stars": 466, "aliases": [], "root": false, "id": 536, "parent_node_name": "linux"}, "member": {"id": 146321, "username": "Kawnnor", "url": "https://www.v2ex.com/u/Kawnnor", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/435a/a283/146321_mini.png?m=1625148830", "avatar_normal": "https://cdn.v2ex.com/avatar/435a/a283/146321_normal.png?m=1625148830", "avatar_large": "https://cdn.v2ex.com/avatar/435a/a283/146321_large.png?m=1625148830", "created": 1446990828, "last_modified": 1625148830}, "last_reply_by": "Osk", "last_touched": 1660419920, "title": "笔记本厂商预装 Ubuntu 不需要付费吗？", "url": "https://www.v2ex.com/t/872658", "created": 1660390631, "deleted": 0, "content": "相同配置，不同系统，价格差很多。\r\n\r\n预装 Ubuntu 的型号差不便宜了 $200 ，是因为预装 Ubuntu 不需要付费的吗？\r\n\r\n![]( https://cdn-std.droplr.net/files/acc_501093/WbY0PH)", "content_rendered": "<p>相同配置，不同系统，价格差很多。</p>\n<p>预装 Ubuntu 的型号差不便宜了 $200 ，是因为预装 Ubuntu 不需要付费的吗？</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://cdn-std.droplr.net/files/acc_501093/WbY0PH\"/></p>\n", "last_modified": 1660390631, "replies": 21, "id": 872658}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1659331259", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1659331259", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 50284, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1659331259", "stars": 7931, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 572448, "username": "zeyezhan", "url": "https://www.v2ex.com/u/zeyezhan", "website": null, "twitter": "", "psn": "", "github": "zhanyeye", "btc": "", "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_mini.png?m=1646723374", "avatar_normal": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_normal.png?m=1646723374", "avatar_large": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_large.png?m=1646723374", "avatar_xlarge": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_xlarge.png?m=1646723374", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_xlarge.png?m=1646723374", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/755f/8c6d/572448_xlarge.png?m=1646723374", "created": 1644552579, "last_modified": 1646723374}, "last_reply_by": "zeyezhan", "last_touched": 1660449088, "title": "自定义 Clash 代理规则的方案（使用 github actions 缓存到 CDN，提升访问速度）", "url": "https://www.v2ex.com/t/872662", "created": 1660391985, "deleted": 0, "content": "链接： https://github.com/zhanyeye/clash-rules-lite\r\n\r\n<p align=\"center\">\r\n<a href=\"https://github.com/zhanyeye/clash-rules-lite\">\r\n <h2 align=\"center\">Clash Rules Lite</h2> </a>\r\n \r\n <p align=\"center\">🍒 自定义代理规则，精简匹配规则 (<b>代理匹配速度明显提升</b>)。</p>\r\n\r\n</p>\r\n\r\n\r\n#### 工具介绍\r\n+ Clash 默认的 GFW 代理规则内容太多，使用过程中明显感觉到有延迟\r\n+ 该工具的目的是删除不必要的代理规则，方便用户自定义代理的内容\r\n+ 代理规则放在 github 仓库中方便多设备同步，只需编辑[rules.txt]( https://github.com/zhanyeye/clash-rules-lite/blob/main/rules.txt)即可\r\n+ 当用户更新规则后，使用 Github Actions 自动将规则缓存到免费 CDN 上 \r\n+ 用户在 github 上更新规则后，在 clash 的 providers 上点击刷新就可以了\r\n\r\n\r\n\r\n#### 使用方法\r\n1. fork 本仓库：[Fork zhanyeye/clash-rules-lite]( https://github.com/zhanyeye/clash-rules-lite/fork) \r\n\r\n2. 鼠标右击订阅的配置文件选中“复制”，将复制的文件命名为`local`（因为更新订阅链接时会覆盖你的修改）\r\n\r\n<div>\r\n    <img width=\"750\" src=\"https://user-images.githubusercontent.com/35565811/184479698-dbc0f06b-7313-4448-a694-cad3d9d5dbe3.png\">\r\n</div>\r\n\r\n\r\n3. 在你复制的 `local` 配置中，修改配置如下，注意 `proxies`, `proxy-groups` 和 `{YOUR-GITHUB-USERNAME}` 修改为你的配置（加粗的部分）\r\n\r\n\r\n<pre><code> \r\nmixed-port: 7890\r\nallow-lan: true\r\nbind-address: '*'\r\nmode: rule\r\nlog-level: silent\r\nexternal-controller: '127.0.0.1:9090'\r\nproxies:\r\n    <b>- { name: '1-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\r\n    <b>- { name: '2-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\r\nproxy-groups:\r\n    <b>- { name: 'PROXY', type: select, proxies: ['1-香港', '2-香港'] }</b>\r\nrules:\r\n  - DOMAIN-KEYWORD,github,PROXY\r\n  - DOMAIN-KEYWORD,google,PROXY\r\n  - RULE-SET,pac,PROXY\r\nrule-providers:\r\n  pac:\r\n    type: http\r\n    behavior: domain\r\n    url: \"https://cdn.jsdelivr.net/gh/<b>{YOUR-GITHUB-USERNAME}</b>/clash-rules-lite@release/rules.txt\"\r\n    path: ./rules/pac.yaml\r\n    interval: 86400\r\nscript:\r\n  code: |\r\n    def main(ctx, metadata):\r\n        keywords = [\"google\", \"github\"]\r\n        for key in keywords:\r\n            if key in metadata[\"host\"]:\r\n                return \"PROXY\"\r\n        if ctx.rule_providers[\"pac\"].match(metadata):\r\n            return \"PROXY\"\r\n        else:\r\n            return \"DIRECT\"\r\n\r\n</code></pre>\r\n\r\n\r\n3. 运行修改后的 `local` 配置，再切换成 `Rule` 或 `Script` 模式\r\n<div>\r\n    <img width=\"750\" src=\"https://user-images.githubusercontent.com/35565811/184479791-6e2c12ca-d28f-4009-839a-e9a06bdcff00.png\">\r\n</div>\r\n\r\n\r\n#### 自定义代理规则\r\n修改仓库中`rules.txt`，修改完后会自动更新并邮件提醒，然后在 Clash 上刷新 providers\r\n<div>\r\n    <img width=\"750\" src=\"https://user-images.githubusercontent.com/35565811/184480450-c24dd895-2b8a-4cfb-8f9e-77843c3df5af.png\">\r\n</div>\r\n\r\n#### 高阶玩法\r\n+ 使用 python 脚本解析订阅链接，自动生成改配置文件，需要你在 Python 代码中设置好你的订阅链接，代码见：[generate_config_quickly.py]( https://github.com/zhanyeye/clash-rules-lite/blob/main/generate_config_quickly.py)\r\n+ 注意该解析脚本是基于本人的订阅链接编写的，不一定适合所有机场，你可以自己修改代码，比较容易", "content_rendered": "<p>链接： <a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\">https://github.com/zhanyeye/clash-rules-lite</a></p>\n<p>\n<a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\">\n</a></p><h2><a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\">Clash Rules Lite</a></h2><a href=\"https://github.com/zhanyeye/clash-rules-lite\" rel=\"nofollow\"> </a>\n<p>🍒 自定义代理规则，精简匹配规则 (<b>代理匹配速度明显提升</b>)。</p>\n<p></p>\n<h4>工具介绍</h4>\n<ul>\n<li>Clash 默认的 GFW 代理规则内容太多，使用过程中明显感觉到有延迟</li>\n<li>该工具的目的是删除不必要的代理规则，方便用户自定义代理的内容</li>\n<li>代理规则放在 github 仓库中方便多设备同步，只需编辑<a href=\"https://github.com/zhanyeye/clash-rules-lite/blob/main/rules.txt\" rel=\"nofollow\">rules.txt</a>即可</li>\n<li>当用户更新规则后，使用 Github Actions 自动将规则缓存到免费 CDN 上 </li>\n<li>用户在 github 上更新规则后，在 clash 的 providers 上点击刷新就可以了</li>\n</ul>\n<h4>使用方法</h4>\n<ol>\n<li>\n<p>fork 本仓库：<a href=\"https://github.com/zhanyeye/clash-rules-lite/fork\" rel=\"nofollow\">Fork zhanyeye/clash-rules-lite</a> </p>\n</li>\n<li>\n<p>鼠标右击订阅的配置文件选中“复制”，将复制的文件命名为<code>local</code>（因为更新订阅链接时会覆盖你的修改）</p>\n</li>\n</ol>\n<div>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://user-images.githubusercontent.com/35565811/184479698-dbc0f06b-7313-4448-a694-cad3d9d5dbe3.png\"/>\n</div>\n<ol>\n<li>在你复制的 <code>local</code> 配置中，修改配置如下，注意 <code>proxies</code>, <code>proxy-groups</code> 和 <code>{YOUR-GITHUB-USERNAME}</code> 修改为你的配置（加粗的部分）</li>\n</ol>\n<pre><code> \nmixed-port: 7890\nallow-lan: true\nbind-address: '*'\nmode: rule\nlog-level: silent\nexternal-controller: '127.0.0.1:9090'\nproxies:\n    <b>- { name: '1-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\n    <b>- { name: '2-香港', type: *, server: **, port: *, cipher: **, password: **, udp: true }</b>\nproxy-groups:\n    <b>- { name: 'PROXY', type: select, proxies: ['1-香港', '2-香港'] }</b>\nrules:\n  - DOMAIN-KEYWORD,github,PROXY\n  - DOMAIN-KEYWORD,google,PROXY\n  - RULE-SET,pac,PROXY\nrule-providers:\n  pac:\n    type: http\n    behavior: domain\n    url: \"https://cdn.jsdelivr.net/gh/<b>{YOUR-GITHUB-USERNAME}</b>/clash-rules-lite@release/rules.txt\"\n    path: ./rules/pac.yaml\n    interval: 86400\nscript:\n  code: |\n    def main(ctx, metadata):\n        keywords = [\"google\", \"github\"]\n        for key in keywords:\n            if key in metadata[\"host\"]:\n                return \"PROXY\"\n        if ctx.rule_providers[\"pac\"].match(metadata):\n            return \"PROXY\"\n        else:\n            return \"DIRECT\"\n\n</code></pre>\n<ol>\n<li>运行修改后的 <code>local</code> 配置，再切换成 <code>Rule</code> 或 <code>Script</code> 模式</li>\n</ol>\n<div>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://user-images.githubusercontent.com/35565811/184479791-6e2c12ca-d28f-4009-839a-e9a06bdcff00.png\"/>\n</div>\n<h4>自定义代理规则</h4>\n<p>修改仓库中<code>rules.txt</code>，修改完后会自动更新并邮件提醒，然后在 Clash 上刷新 providers</p>\n<div>\n<img class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://user-images.githubusercontent.com/35565811/184480450-c24dd895-2b8a-4cfb-8f9e-77843c3df5af.png\"/>\n</div>\n<h4>高阶玩法</h4>\n<ul>\n<li>使用 python 脚本解析订阅链接，自动生成改配置文件，需要你在 Python 代码中设置好你的订阅链接，代码见：<a href=\"https://github.com/zhanyeye/clash-rules-lite/blob/main/generate_config_quickly.py\" rel=\"nofollow\">generate_config_quickly.py</a></li>\n<li>注意该解析脚本是基于本人的订阅链接编写的，不一定适合所有机场，你可以自己修改代码，比较容易</li>\n</ul>\n", "last_modified": 1660392497, "replies": 20, "id": 872662}]