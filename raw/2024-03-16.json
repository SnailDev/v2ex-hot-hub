[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 216423, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340", "stars": 4122, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 557617, "username": "event112", "url": "https://www.v2ex.com/u/event112", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/79b0/36e9/557617_mini.png?m=1695494126", "avatar_normal": "https://cdn.v2ex.com/avatar/79b0/36e9/557617_normal.png?m=1695494126", "avatar_large": "https://cdn.v2ex.com/avatar/79b0/36e9/557617_large.png?m=1695494126", "avatar_xlarge": "https://cdn.v2ex.com/avatar/79b0/36e9/557617_xlarge.png?m=1695494126", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/79b0/36e9/557617_xlarge.png?m=1695494126", "created": 1633362704, "last_modified": 1695494126}, "last_reply_by": "odifjg9384hg", "last_touched": 1710576239, "title": "宅老家半年，被邻居认为是贼，澄清也没用，我该怎么办？", "url": "https://www.v2ex.com/t/1024185", "created": 1710556489, "deleted": 0, "content": "刚毕业宅老家半年，专心写代码。这段时间我几乎没出过门，因为我喜欢在夜间活动，楼上住户认为我是贼，他们时常向下泼水，甚至在大年三十的凌晨三四点还往下泼，屋子还泡水，导致墙皮大量的脱落。每天下午四点开始，就有人在楼上敲地板，半夜还会用洗衣机甩干衣物，这让我精神紧绷，睡不好觉。现在更加过分他们开始划我门，明明我什么也没做。开窗户澄清也没用，他们始终认为我脑子有问题，肯定是小偷。每天都有闲的没事干的老奶奶在我家楼下闲扯蛋，隔壁四邻也防备着我，我睡觉五六个人监视，隔壁的邻居也总是偷偷窥视我的房间，我一睡觉就有人在我家楼下骑着叽叽喳喳的车子巡视一番，楼上为了防备我天天有五六个人在专门听着我动静，让我感觉像是被围观一样。甚至有人专门拉了个群。逼的我没办法，只能每天出门，显示一下我的存在感。结果这群人还是认为我有问题，我出门要对我拍照，我夜跑也跟着我，我去奶奶家吃饭还要用手机录音，我是真醉了，我要是有当贼的想法，刚回来就实施了，还等到现在快半年才开始警惕，纯没事找事。被别人当贼一样盯防着，我真的很难受，以前对老家还有些留恋，现在却只感到失望和痛苦。我阅历浅薄，父母又不在身边，我该怎么办？", "content_rendered": "刚毕业宅老家半年，专心写代码。这段时间我几乎没出过门，因为我喜欢在夜间活动，楼上住户认为我是贼，他们时常向下泼水，甚至在大年三十的凌晨三四点还往下泼，屋子还泡水，导致墙皮大量的脱落。每天下午四点开始，就有人在楼上敲地板，半夜还会用洗衣机甩干衣物，这让我精神紧绷，睡不好觉。现在更加过分他们开始划我门，明明我什么也没做。开窗户澄清也没用，他们始终认为我脑子有问题，肯定是小偷。每天都有闲的没事干的老奶奶在我家楼下闲扯蛋，隔壁四邻也防备着我，我睡觉五六个人监视，隔壁的邻居也总是偷偷窥视我的房间，我一睡觉就有人在我家楼下骑着叽叽喳喳的车子巡视一番，楼上为了防备我天天有五六个人在专门听着我动静，让我感觉像是被围观一样。甚至有人专门拉了个群。逼的我没办法，只能每天出门，显示一下我的存在感。结果这群人还是认为我有问题，我出门要对我拍照，我夜跑也跟着我，我去奶奶家吃饭还要用手机录音，我是真醉了，我要是有当贼的想法，刚回来就实施了，还等到现在快半年才开始警惕，纯没事找事。被别人当贼一样盯防着，我真的很难受，以前对老家还有些留恋，现在却只感到失望和痛苦。我阅历浅薄，父母又不在身边，我该怎么办？", "last_modified": 1710556836, "replies": 137, "id": 1024185}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1650095340", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1650095340", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 216423, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1650095340", "stars": 4122, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"id": 448046, "username": "xbleey", "url": "https://www.v2ex.com/u/xbleey", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "Canton CN", "tagline": "", "bio": "学", "avatar_mini": "https://cdn.v2ex.com/avatar/6132/2091/448046_mini.png?m=1571589810", "avatar_normal": "https://cdn.v2ex.com/avatar/6132/2091/448046_normal.png?m=1571589810", "avatar_large": "https://cdn.v2ex.com/avatar/6132/2091/448046_large.png?m=1571589810", "created": 1571589677, "last_modified": 1571589810}, "last_reply_by": "91pornshanghai", "last_touched": 1710573047, "title": "假护照是怎么离境的", "url": "https://www.v2ex.com/t/1024169", "created": 1710550302, "deleted": 0, "content": "之前天天看国内外的犯罪片，大坏蛋直接拿着不是自己的假护照就能跑，海关如果联网看不出信息是假的吗？", "content_rendered": "<p>之前天天看国内外的犯罪片，大坏蛋直接拿着不是自己的假护照就能跑，海关如果联网看不出信息是假的吗？</p>\n", "last_modified": 1710550302, "replies": 35, "id": 1024169}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/e7b2/4b11/360_large.png?m=1670319927", "name": "windows", "avatar_normal": "https://cdn.v2ex.com/navatar/e7b2/4b11/360_normal.png?m=1670319927", "title": "Windows", "url": "https://www.v2ex.com/go/windows", "topics": 3788, "footer": "", "header": "Windows, not walls.", "title_alternative": "Windows", "avatar_mini": "https://cdn.v2ex.com/navatar/e7b2/4b11/360_mini.png?m=1670319927", "stars": 1208, "aliases": [], "root": false, "id": 360, "parent_node_name": "os"}, "member": {"id": 634465, "username": "Inzufu", "url": "https://www.v2ex.com/u/Inzufu", "website": "https://muna.uk", "twitter": "Lilac_milena", "psn": "", "github": "Lilac-milena", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/6e8a/951b/634465_mini.png?m=1700832337", "avatar_normal": "https://cdn.v2ex.com/avatar/6e8a/951b/634465_normal.png?m=1700832337", "avatar_large": "https://cdn.v2ex.com/avatar/6e8a/951b/634465_large.png?m=1700832337", "avatar_xlarge": "https://cdn.v2ex.com/avatar/6e8a/951b/634465_xlarge.png?m=1700832337", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/6e8a/951b/634465_xlarge.png?m=1700832337", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/6e8a/951b/634465_xlarge.png?m=1700832337", "created": 1686961054, "last_modified": 1700832337}, "last_reply_by": "polo3584", "last_touched": 1710575279, "title": "全球范围内 Windows 的正版率大概是多少", "url": "https://www.v2ex.com/t/1024210", "created": 1710560313, "deleted": 0, "content": "现阶段 Windows 系统 在桌面市场的占有率大约在 62.65% 左右，除去 未激活用户、企业使用家庭版用户、批量 激活用户等用户，Windows 在全球范围内的正版率应该在多少？\r\n我个人感觉 Windows 的全球正版率不会超过 50%，有没有在微软工作的好兄弟来解答一下。", "content_rendered": "现阶段 Windows 系统 在桌面市场的占有率大约在 62.65% 左右，除去 未激活用户、企业使用家庭版用户、批量 激活用户等用户，Windows 在全球范围内的正版率应该在多少？<br />我个人感觉 Windows 的全球正版率不会超过 50%，有没有在微软工作的好兄弟来解答一下。", "last_modified": 1710562087, "replies": 34, "id": 1024210}, {"node": {"avatar_large": "/static/img/node_default_large.png", "name": "fit", "avatar_normal": "/static/img/node_default_normal.png", "title": "健康", "url": "https://www.v2ex.com/go/fit", "topics": 1105, "footer": "", "header": "这个节点的设立，是为了让大家可以分享关于健身和健康生活方式的经验。如果你有什么正在困扰自己的身体症状，请立刻寻求正规医院的帮助。", "title_alternative": "Fit", "avatar_mini": "/static/img/node_default_mini.png", "stars": 324, "aliases": [], "root": false, "id": 700, "parent_node_name": "life"}, "member": {"id": 58816, "username": "finab", "url": "https://www.v2ex.com/u/finab", "website": "", "twitter": "", "psn": "", "github": "Finb", "btc": "", "location": "", "tagline": "iOS / OS X  Developer", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/a522/9f1c/58816_mini.png?m=1699093731", "avatar_normal": "https://cdn.v2ex.com/avatar/a522/9f1c/58816_normal.png?m=1699093731", "avatar_large": "https://cdn.v2ex.com/avatar/a522/9f1c/58816_large.png?m=1699093731", "created": 1395555474, "last_modified": 1699093731}, "last_reply_by": "ccnocc", "last_touched": 1710544039, "title": "差点猝死", "url": "https://www.v2ex.com/t/1024108", "created": 1710506137, "deleted": 0, "content": "记不起上次运动是什么时候了，今天下班打算骑个共享单车逛一逛，然后蹬上了一个 1-2 公里的连续陡坡。\r\n上去后人就开始不对劲了，先是想吐浑身冒汗，身体发冷。\r\n然后人晕眼睛发黑越来越严重，全身肌肉紧绷不能动弹，不仅四肢连肚子上的腹肌都能感觉到明显紧绷。\r\n感觉人快要昏迷时想趁昏迷前打 120 但是手指都动不了了成了鸡爪状。最后坐着不知道过了多久肌肉缓过来了一点点，慢慢走丧尸步伐去便利店拿了瓶快乐水，全喝完好多了。\r\n现在全身没有不适感，就是有点困，我这个情况要去医院看看么？", "content_rendered": "记不起上次运动是什么时候了，今天下班打算骑个共享单车逛一逛，然后蹬上了一个 1-2 公里的连续陡坡。<br />上去后人就开始不对劲了，先是想吐浑身冒汗，身体发冷。<br />然后人晕眼睛发黑越来越严重，全身肌肉紧绷不能动弹，不仅四肢连肚子上的腹肌都能感觉到明显紧绷。<br />感觉人快要昏迷时想趁昏迷前打 120 但是手指都动不了了成了鸡爪状。最后坐着不知道过了多久肌肉缓过来了一点点，慢慢走丧尸步伐去便利店拿了瓶快乐水，全喝完好多了。<br />现在全身没有不适感，就是有点困，我这个情况要去医院看看么？", "last_modified": 1710512552, "replies": 31, "id": 1024108}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1660301119", "name": "create", "avatar_normal": "https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1660301119", "title": "分享创造", "url": "https://www.v2ex.com/go/create", "topics": 23203, "footer": "", "header": "欢迎你在这里发布自己的最新作品！", "title_alternative": "Create", "avatar_mini": "https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1660301119", "stars": 5294, "aliases": [], "root": false, "id": 17, "parent_node_name": "geek"}, "member": {"id": 668511, "username": "xiaowoli", "url": "https://www.v2ex.com/u/xiaowoli", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/dd417fbb2f9dacf95b9b84cc2867dd3d?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/dd417fbb2f9dacf95b9b84cc2867dd3d?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/dd417fbb2f9dacf95b9b84cc2867dd3d?s=73&d=retro", "created": 1703553017, "last_modified": 1710491444}, "last_reply_by": "ohayoo", "last_touched": 1710528766, "title": "🚫为了防止狗上沙发，写了一个浏览器实时识别目标功能📷", "url": "https://www.v2ex.com/t/1024038", "created": 1710491556, "deleted": 0, "content": "# 网页调用摄像头识别物体后做成行为\r\n\r\n## 背景\r\n![]( https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2024/03/02fe6f3072e818c465dd376a7d91a6c1.png)\r\n家里有一条狗🐶，很喜欢乘人不备睡沙发🛋️，恰好最近刚搬家 + 狗迎来了掉毛期 不想让沙发上很多毛。所以希望能识别到狗，然后播放“gun 下去”的音频📣。\r\n\r\n## 需求分析\r\n\r\n- 需要一个摄像头📷\r\n  - 利用 chrome 浏览器可以调用手机摄像头，获取权限，然后利用 video 将摄像头的内容绘制到 video 上。\r\n- 通过摄像头实时识别画面中的狗🐶\r\n  - 利用 [tensorflow]( https://tensorflow.google.cn/js/models?hl=zh-cn) 和预训练的 COCO-SSD MobileNet V2 模型进行对象检测。\r\n  - 将摄像头的视频流转化成视频帧图像传给模型进行识别\r\n- 录制一个音频\r\n  - 识别到目标（狗）后播放音频📣\r\n- 需要部署在一个设备上\r\n  - 找一个不用的旧手机📱，Android 系统\r\n  - 安装 termux 来实现开启本地 http 服务🌐\r\n\r\n## 技术要点\r\n\r\n1.  利用浏览器 API 调用手机摄像头，将视频流推给 video\r\n\r\n    ```js\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      // video: { facingMode: \"environment\" },  // 摄像头后置\r\n      video: { facingMode: \"user\" },\r\n    });\r\n\r\n    const videoElement = document.getElementById(\"camera-stream\");\r\n    videoElement.srcObject = stream;\r\n    ```\r\n\r\n2.  加载模型，实现识别\r\n\r\n    ```js\r\n    let dogDetector;\r\n\r\n    async function loadDogDetector() {\r\n      // 加载预训练的 SSD MobileNet V2 模型\r\n      const model = await cocoSsd.load();\r\n      dogDetector = model; // 将加载好的模型赋值给 dogDetector 变量\r\n    }\r\n    ```\r\n\r\n3.  监听 video 的播放，将视频流转换成图像传入模型检测\r\n\r\n    ```js\r\n    videoElement.addEventListener(\"play\", async () => {\r\n      requestAnimationFrame(processVideoFrame);\r\n    });\r\n\r\n    async function processVideoFrame() {\r\n      if (!videoElement.paused && !videoElement.ended) {\r\n        canvas.width = videoElement.videoWidth;\r\n        canvas.height = videoElement.videoHeight;\r\n        ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\r\n\r\n        // 获取当前帧图像数据\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n        // 对帧执行预测\r\n        let predictionClasses = \"\";\r\n        const predictions = await dogDetector.detect(imageData);\r\n        // 处理预测结果，比如检查是否有狗被检测到\r\n        for (const prediction of predictions) {\r\n          predictionClasses += `${prediction.class}\\n`; // 组装识别的物体名称\r\n          if (prediction.class === \"dog\") {\r\n            // 播放声音\r\n            playDogBarkSound();\r\n          }\r\n        }\r\n        nameContainer.innerText = predictionClasses.trim(); // 移除末尾的换行符\r\n\r\n        requestAnimationFrame(processVideoFrame);\r\n      }\r\n    }\r\n    ```\r\n\r\n4.  播放音频\r\n\r\n    ```js\r\n    async function playDogBarkSound() {\r\n      if (playing) return;\r\n      playing = true;\r\n      const audio = new Audio(dogBarkSound);\r\n      audio.addEventListener(\"ended\", () => {\r\n        playing = false;\r\n      });\r\n      audio.volume = 0.5; // 调整音量大小\r\n      await audio.play();\r\n    }\r\n    ```\r\n\r\n5.  手机开启本地 http 服务\r\n\r\n    - 安装 [termux]()\r\n    - 安装 python3\r\n    - 运行 python3 -m http.server 8000\r\n\r\n6.  将项目上传到 termux 的目录\r\n    - 直接用 termux 打开文件\r\n    - 访问 http://localhost:8000\r\n\r\n## 项目代码(改为 html 文件后)\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Mobile Dog Detector</title>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@4.17.0/dist/tf.min.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/coco-ssd@2.2.3/dist/coco-ssd.min.js\"></script>\r\n    <style>\r\n      #camera-stream {\r\n        width: 200px;\r\n        height: auto;\r\n      }\r\n      #name {\r\n        height: 200px;\r\n        overflow-y: auto;\r\n        font-family: Arial, sans-serif;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <video id=\"camera-stream\" autoplay playsinline></video>\r\n    <div id=\"name\" style=\"height: 200px\"></div>\r\n\r\n    <script>\r\n      let playing = false;\r\n      let dogDetector;\r\n\r\n      async function loadDogDetector() {\r\n        // 加载预训练的 SSD MobileNet V2 模型\r\n        const model = await cocoSsd.load();\r\n        dogDetector = model; // 将加载好的模型赋值给 dogDetector 变量\r\n        console.log(\"dogDetector\", dogDetector);\r\n        startCamera();\r\n      }\r\n      // 调用函数加载模型\r\n      loadDogDetector();\r\n\r\n      async function startCamera() {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          // video: { facingMode: \"environment\" },  // 摄像头后置\r\n          video: { facingMode: \"user\" },\r\n        });\r\n        const nameContainer = document.getElementById(\"name\");\r\n        const videoElement = document.getElementById(\"camera-stream\");\r\n        videoElement.srcObject = stream;\r\n\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        videoElement.addEventListener(\"play\", async () => {\r\n          requestAnimationFrame(processVideoFrame);\r\n        });\r\n        async function processVideoFrame() {\r\n          if (!videoElement.paused && !videoElement.ended) {\r\n            canvas.width = videoElement.videoWidth;\r\n            canvas.height = videoElement.videoHeight;\r\n            ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\r\n\r\n            const imageData = ctx.getImageData(\r\n              0,\r\n              0,\r\n              canvas.width,\r\n              canvas.height\r\n            );\r\n\r\n            let predictionClasses = \"\";\r\n            const predictions = await dogDetector.detect(imageData);\r\n            for (const prediction of predictions) {\r\n              predictionClasses += `${prediction.class}\\n`;\r\n              if (prediction.class === \"dog\") {\r\n                // 修改为检测到狗时播放声音\r\n                playDogBarkSound();\r\n              }\r\n            }\r\n            nameContainer.innerText = predictionClasses.trim();\r\n\r\n            requestAnimationFrame(processVideoFrame);\r\n          }\r\n        }\r\n\r\n        async function playDogBarkSound() {\r\n          if (playing) return;\r\n          playing = true;\r\n          const audio = new Audio(\"./getout.mp3\");\r\n          audio.addEventListener(\"ended\", () => {\r\n            playing = false;\r\n          });\r\n          audio.volume = 0.5; // 调整音量大小\r\n          await audio.play();\r\n        }\r\n      }\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\n\r\n## 实现效果\r\n\r\n效果很好👍，用旧手机开启摄像头后，检测到狗就播放声音了。\r\n\r\n但是，家里夫人直接做了一个围栏晚上给狗圈起来了🚫\r\n![]( https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2024/03/da09507c43a9f5d10d698b70fbd8a1a5.png)\r\n## 实现总结\r\n\r\n该方案通过以下步骤实现了一个基于网页的实时物体检测系统，专门用于识别画面中的狗并播放特定音频以驱赶它离开沙发。具体实现过程包括以下几个核心部分：\r\n\r\n- 调用摄像头：\r\n\r\n使用浏览器提供的 navigator.mediaDevices.getUserMedia API 获取用户授权后调用手机摄像头，并将视频流设置给 video 元素展示。\r\n\r\n- 加载物体检测模型：\r\n\r\n使用 TensorFlow.js 和预训练的 COCO-SSD MobileNet V2 模型进行对象检测，加载模型后赋值给 dogDetector 变量。\r\n处理视频流与图像识别：\r\n\r\n监听 video 元素的播放事件，通过 requestAnimationFrame 循环逐帧处理视频。\r\n将当前视频帧绘制到 canvas 上，然后从 canvas 中提取图像数据传入模型进行预测。\r\n在模型返回的预测结果中，如果检测到“dog”，则触发播放音频函数。\r\n\r\n- 播放音频反馈：\r\n\r\n定义一个异步函数 playDogBarkSound 来播放指定的音频文件，确保音频只在前一次播放结束后才开始新的播放。\r\n\r\n- 部署环境准备：\r\n\r\n使用旧 Android 手机安装 Termux ，创建本地 HTTP 服务器运行项目代码。\r\n上传项目文件至 Termux 目录下并通过访问 localhost:8000 启动应用。\r\n\r\n\r\n通过以上技术整合，最终实现了在旧手机上部署一个能够实时检测画面中狗的网页应用，并在检测到狗时播放指定音频。", "content_rendered": "<h1>网页调用摄像头识别物体后做成行为</h1>\n<h2>背景</h2>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2024/03/02fe6f3072e818c465dd376a7d91a6c1.png\"/>\n家里有一条狗🐶，很喜欢乘人不备睡沙发🛋️，恰好最近刚搬家 + 狗迎来了掉毛期 不想让沙发上很多毛。所以希望能识别到狗，然后播放“gun 下去”的音频📣。</p>\n<h2>需求分析</h2>\n<ul>\n<li>\n需要一个摄像头📷<ul>\n<li>利用 chrome 浏览器可以调用手机摄像头，获取权限，然后利用 video 将摄像头的内容绘制到 video 上。</li>\n</ul>\n</li>\n<li>\n通过摄像头实时识别画面中的狗🐶<ul>\n<li>利用 <a href=\"https://tensorflow.google.cn/js/models?hl=zh-cn\" rel=\"nofollow\">tensorflow</a> 和预训练的 COCO-SSD MobileNet V2 模型进行对象检测。</li>\n<li>将摄像头的视频流转化成视频帧图像传给模型进行识别</li>\n</ul>\n</li>\n<li>\n录制一个音频<ul>\n<li>识别到目标（狗）后播放音频📣</li>\n</ul>\n</li>\n<li>\n需要部署在一个设备上<ul>\n<li>找一个不用的旧手机📱，Android 系统</li>\n<li>安装 termux 来实现开启本地 http 服务🌐</li>\n</ul>\n</li>\n</ul>\n<h2>技术要点</h2>\n<ol>\n<li>\n<p>利用浏览器 API 调用手机摄像头，将视频流推给 video</p>\n<pre><code class=\"language-js\">const stream = await navigator.mediaDevices.getUserMedia({\n  // video: { facingMode: \"environment\" },  // 摄像头后置\n  video: { facingMode: \"user\" },\n});\n\nconst videoElement = document.getElementById(\"camera-stream\");\nvideoElement.srcObject = stream;\n</code></pre>\n</li>\n<li>\n<p>加载模型，实现识别</p>\n<pre><code class=\"language-js\">let dogDetector;\n\nasync function loadDogDetector() {\n  // 加载预训练的 SSD MobileNet V2 模型\n  const model = await cocoSsd.load();\n  dogDetector = model; // 将加载好的模型赋值给 dogDetector 变量\n}\n</code></pre>\n</li>\n<li>\n<p>监听 video 的播放，将视频流转换成图像传入模型检测</p>\n<pre><code class=\"language-js\">videoElement.addEventListener(\"play\", async () =&gt; {\n  requestAnimationFrame(processVideoFrame);\n});\n\nasync function processVideoFrame() {\n  if (!videoElement.paused &amp;&amp; !videoElement.ended) {\n    canvas.width = videoElement.videoWidth;\n    canvas.height = videoElement.videoHeight;\n    ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n    // 获取当前帧图像数据\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    // 对帧执行预测\n    let predictionClasses = \"\";\n    const predictions = await dogDetector.detect(imageData);\n    // 处理预测结果，比如检查是否有狗被检测到\n    for (const prediction of predictions) {\n      predictionClasses += `${prediction.class}\\n`; // 组装识别的物体名称\n      if (prediction.class === \"dog\") {\n        // 播放声音\n        playDogBarkSound();\n      }\n    }\n    nameContainer.innerText = predictionClasses.trim(); // 移除末尾的换行符\n\n    requestAnimationFrame(processVideoFrame);\n  }\n}\n</code></pre>\n</li>\n<li>\n<p>播放音频</p>\n<pre><code class=\"language-js\">async function playDogBarkSound() {\n  if (playing) return;\n  playing = true;\n  const audio = new Audio(dogBarkSound);\n  audio.addEventListener(\"ended\", () =&gt; {\n    playing = false;\n  });\n  audio.volume = 0.5; // 调整音量大小\n  await audio.play();\n}\n</code></pre>\n</li>\n<li>\n<p>手机开启本地 http 服务</p>\n<ul>\n<li>安装 <a href=\"\" rel=\"nofollow\">termux</a></li>\n<li>安装 python3</li>\n<li>运行 python3 -m http.server 8000</li>\n</ul>\n</li>\n<li>\n<p>将项目上传到 termux 的目录</p>\n<ul>\n<li>直接用 termux 打开文件</li>\n<li>访问 http://localhost:8000</li>\n</ul>\n</li>\n</ol>\n<h2>项目代码(改为 html 文件后)</h2>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n    &lt;title&gt;Mobile Dog Detector&lt;/title&gt;\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@4.17.0/dist/tf.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/coco-ssd@2.2.3/dist/coco-ssd.min.js\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n      #camera-stream {\n        width: 200px;\n        height: auto;\n      }\n      #name {\n        height: 200px;\n        overflow-y: auto;\n        font-family: Arial, sans-serif;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;video id=\"camera-stream\" autoplay playsinline&gt;&lt;/video&gt;\n    &lt;div id=\"name\" style=\"height: 200px\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n      let playing = false;\n      let dogDetector;\n\n      async function loadDogDetector() {\n        // 加载预训练的 SSD MobileNet V2 模型\n        const model = await cocoSsd.load();\n        dogDetector = model; // 将加载好的模型赋值给 dogDetector 变量\n        console.log(\"dogDetector\", dogDetector);\n        startCamera();\n      }\n      // 调用函数加载模型\n      loadDogDetector();\n\n      async function startCamera() {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          // video: { facingMode: \"environment\" },  // 摄像头后置\n          video: { facingMode: \"user\" },\n        });\n        const nameContainer = document.getElementById(\"name\");\n        const videoElement = document.getElementById(\"camera-stream\");\n        videoElement.srcObject = stream;\n\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n\n        videoElement.addEventListener(\"play\", async () =&gt; {\n          requestAnimationFrame(processVideoFrame);\n        });\n        async function processVideoFrame() {\n          if (!videoElement.paused &amp;&amp; !videoElement.ended) {\n            canvas.width = videoElement.videoWidth;\n            canvas.height = videoElement.videoHeight;\n            ctx.drawImage(videoElement, 0, 0, canvas.width, canvas.height);\n\n            const imageData = ctx.getImageData(\n              0,\n              0,\n              canvas.width,\n              canvas.height\n            );\n\n            let predictionClasses = \"\";\n            const predictions = await dogDetector.detect(imageData);\n            for (const prediction of predictions) {\n              predictionClasses += `${prediction.class}\\n`;\n              if (prediction.class === \"dog\") {\n                // 修改为检测到狗时播放声音\n                playDogBarkSound();\n              }\n            }\n            nameContainer.innerText = predictionClasses.trim();\n\n            requestAnimationFrame(processVideoFrame);\n          }\n        }\n\n        async function playDogBarkSound() {\n          if (playing) return;\n          playing = true;\n          const audio = new Audio(\"./getout.mp3\");\n          audio.addEventListener(\"ended\", () =&gt; {\n            playing = false;\n          });\n          audio.volume = 0.5; // 调整音量大小\n          await audio.play();\n        }\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2>实现效果</h2>\n<p>效果很好👍，用旧手机开启摄像头后，检测到狗就播放声音了。</p>\n<p>但是，家里夫人直接做了一个围栏晚上给狗圈起来了🚫\n<img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://pub-a953275fa2c34c18b80fc1f84e3ea746.r2.dev/xiaowo/2024/03/da09507c43a9f5d10d698b70fbd8a1a5.png\"/></p>\n<h2>实现总结</h2>\n<p>该方案通过以下步骤实现了一个基于网页的实时物体检测系统，专门用于识别画面中的狗并播放特定音频以驱赶它离开沙发。具体实现过程包括以下几个核心部分：</p>\n<ul>\n<li>调用摄像头：</li>\n</ul>\n<p>使用浏览器提供的 navigator.mediaDevices.getUserMedia API 获取用户授权后调用手机摄像头，并将视频流设置给 video 元素展示。</p>\n<ul>\n<li>加载物体检测模型：</li>\n</ul>\n<p>使用 TensorFlow.js 和预训练的 COCO-SSD MobileNet V2 模型进行对象检测，加载模型后赋值给 dogDetector 变量。\n处理视频流与图像识别：</p>\n<p>监听 video 元素的播放事件，通过 requestAnimationFrame 循环逐帧处理视频。\n将当前视频帧绘制到 canvas 上，然后从 canvas 中提取图像数据传入模型进行预测。\n在模型返回的预测结果中，如果检测到“dog”，则触发播放音频函数。</p>\n<ul>\n<li>播放音频反馈：</li>\n</ul>\n<p>定义一个异步函数 playDogBarkSound 来播放指定的音频文件，确保音频只在前一次播放结束后才开始新的播放。</p>\n<ul>\n<li>部署环境准备：</li>\n</ul>\n<p>使用旧 Android 手机安装 Termux ，创建本地 HTTP 服务器运行项目代码。\n上传项目文件至 Termux 目录下并通过访问 localhost:8000 启动应用。</p>\n<p>通过以上技术整合，最终实现了在旧手机上部署一个能够实时检测画面中狗的网页应用，并在检测到狗时播放指定音频。</p>\n", "last_modified": 1710503907, "replies": 28, "id": 1024038}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1660301119", "name": "create", "avatar_normal": "https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1660301119", "title": "分享创造", "url": "https://www.v2ex.com/go/create", "topics": 23203, "footer": "", "header": "欢迎你在这里发布自己的最新作品！", "title_alternative": "Create", "avatar_mini": "https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1660301119", "stars": 5294, "aliases": [], "root": false, "id": 17, "parent_node_name": "geek"}, "member": {"id": 46674, "username": "yafeilee", "url": "https://www.v2ex.com/u/yafeilee", "website": "https://yafeilee.com/", "twitter": "lyfi2003", "psn": "", "github": "windy", "btc": "", "location": "深圳", "tagline": "Talk is cheap, show me the code", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/f5da/f852/46674_mini.png?m=1710493331", "avatar_normal": "https://cdn.v2ex.com/avatar/f5da/f852/46674_normal.png?m=1710493331", "avatar_large": "https://cdn.v2ex.com/avatar/f5da/f852/46674_large.png?m=1710493331", "avatar_xlarge": "https://cdn.v2ex.com/avatar/f5da/f852/46674_xlarge.png?m=1710493331", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/f5da/f852/46674_xlarge.png?m=1710493331", "created": 1381505819, "last_modified": 1710493331}, "last_reply_by": "matrix1010", "last_touched": 1710570079, "title": "一个来自中国创业者 L5 自主编程能力的探索", "url": "https://www.v2ex.com/t/1024090", "created": 1710499980, "deleted": 0, "content": "大家好，我是 ShowMeBug 的创始人亚飞，全栈工程师，连续创业者。今天非常高兴跟大家介绍一下，我们**自主研发的、带有 L5 自主编程能力的 1024Code 云端开发平台**和进展情况，目前我们已经启动了公测邀请。\r\n\r\n**1024Code 云端开发平台介绍视频：** https://www.bilibili.com/video/BV1YF4m1c7rH/?share_source=copy_web&vd_source=9bb16af47f4ff115bffa964190f6fa4b\r\n\r\n\r\n## **1024Code 的核心能力**\r\n\r\n1024Code 是采用 1024PaaS （全栈自研的云端编程环境）为核心，通用大模型为基座，花费了 10 多个月构建一套自主决策链 AI Agent （目前称为 AI 导师），提供了编程环境感知，代码编辑，Shell 、Console 的自阅读，运行与自主 Debug 。\r\n\r\n**简单来说，就是将 AI Agent 安装了手与脚，让其自主完成需求分析到编码调试的过程。**\r\n\r\n![AgentINIDE]( https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/AgentINIDE.png )\r\n\r\n\r\n\r\n## **1024Code 尝试定义 AI 与人类编程交互的新方式**\r\n\r\n\r\n\r\n在当前阶段，1024Code 更相信人类的代码，所以 AI 在修改人类代码时需要人类确认，AI 在修改自己的代码时可以立刻生效。\r\n\r\n得益于我们全栈自研的技术，我们的团队能够深度定义编辑器的内核，实现快编辑的能力，能够准确区分代码是来自 AI 生成还是人类编写。\r\n\r\n\r\n![AgentINIDE]( https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/HumanVSAI.png )\r\n\r\n\r\n## **具体能力介绍**\r\n\r\n**从零开发一个小项目**\r\n\r\n1024Code 可以根据你的需求介绍，进行 MVP （最小可行版本）拆解需求，然后实现第一版 MVP 。它可以实现一个小型项目（至多不超过 10 个）多个文件的生成和编辑。\r\n\r\n![AgentINIDE]( https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/Genr.png )\r\n\r\n**解决一个小的需求**\r\n\r\n你提出需求，1024Code 的 AI 导师会首先自行感悟编程环境（例如是哪个语言哪个框架），然后分析需求（如遇需求不清楚时会自行跟你互动），构建代码语义树，确定需要创建新的文件或者修改哪些文件，生成对应代码，利用 1024PaaS 提供的更新代码块能力进行逐字处理。最后尝试运行代码并检查控制台输出，完成本次需求实现。\r\n\r\n**自动 Debug 错误**\r\n\r\n发现控制台的错误时，它会自行开始 Debug 调试错误。读取报错信息并决定如何修复，然后读取对应代码进行修改。\r\n\r\n**与人类在代码归属上创新互动**\r\n\r\nAI 导师可以直接修改它自己之前完成的代码，修改人类代码需要一个确认与 diff 比较的过程。\r\n\r\n## **1024Code 中 AI 导师的能力限制**\r\n\r\nAI 导师在 1024Code 中是一个完全拟人的存在，它有自己独立的交互界面，甚至人类可以直接观察它的每一步操作。由于当前大模型的智能还不足够，我们看一下能力上的限制。\r\n\r\n![AgentINIDE]( https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/AgentTitle.png )\r\n\r\n**决策能力上的限制**\r\n\r\n目前超出 10 个文件的较大项目表现会出现成功率大幅下降的情况。\r\n\r\n在网页项目、命令行项目、Python 游戏外的项目，目前没有针对优化。\r\n\r\n**浏览器眼睛视觉还未添加**\r\n\r\n在更理想的情况下，AI 导师应该能主动识别浏览器网页上的界面错误，并进行修复，但这个依赖于现有大模型的多模态能力与 Token 成本，目前还未实现相关能力。\r\n\r\n\r\n## **未来的展望**\r\n\r\n未来的编程世界将发生重大范式变化，云端编程+原生 AI 编程将彻底改变传统本地开发方式，就如同文档在线化置于本地编辑，Figma 置于 PS ，网盘置于本地 USB 存储。80% 的代码由 AI 完成，人类完成剩下的架构工作是接下来 AI 时代相当长时间持续的一种新的编程常态。\r\n\r\n## **具体案例**\r\n\r\n同事跑了几个项目，大家可以点击视频链接了解：\r\n\r\n1. **尝试使用 1024Code 的 Agent 智能体功能修复 Chart.js 里一个 Bug**：\r\n https://www.bilibili.com/video/BV1Lj421f7UK/?share_source=copy_web&vd_source=9bb16af47f4ff115bffa964190f6fa4b\r\n\r\n2. **使用 Agent 智能体功能补全&迭代音乐播放器项目代码**：\r\nhttps://www.bilibili.com/video/BV1uK421v74Z/?share_source=copy_web&vd_source=9bb16af47f4ff115bffa964190f6fa4b\r\n\r\n3. **国内也有 Devin 了？一句话需求生成 2048 游戏！**：\r\nhttps://www.bilibili.com/video/BV1m2421N7eN/?share_source=copy_web&vd_source=9bb16af47f4ff115bffa964190f6fa4b\r\n\r\n\r\n## **我们已经发布邀请码公测**\r\n\r\n1024Code 目前已经启动了邀请码公测，大家可以通过朋友或者主动申请获取邀请码来体验和使用产品，目前整个产品完全免费，AI Agent 的体验使用是积分消耗模式。\r\n\r\n![AgentINIDE]( https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/Wel.png )\r\n\r\n如果你在商业、投资或大模型能力上想与 1024Code 合作可以直接加创始人微信号：**lyfi2003**\r\n\r\n让我们一起打造下一代全新 L5 全自主编程新范式吧！", "content_rendered": "<p>大家好，我是 ShowMeBug 的创始人亚飞，全栈工程师，连续创业者。今天非常高兴跟大家介绍一下，我们<strong>自主研发的、带有 L5 自主编程能力的 1024Code 云端开发平台</strong>和进展情况，目前我们已经启动了公测邀请。</p>\n<p><strong>1024Code 云端开发平台介绍视频：</strong> <a href=\"https://www.bilibili.com/video/BV1YF4m1c7rH/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b\" rel=\"nofollow\">https://www.bilibili.com/video/BV1YF4m1c7rH/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b</a></p>\n<h2><strong>1024Code 的核心能力</strong></h2>\n<p>1024Code 是采用 1024PaaS （全栈自研的云端编程环境）为核心，通用大模型为基座，花费了 10 多个月构建一套自主决策链 AI Agent （目前称为 AI 导师），提供了编程环境感知，代码编辑，Shell 、Console 的自阅读，运行与自主 Debug 。</p>\n<p><strong>简单来说，就是将 AI Agent 安装了手与脚，让其自主完成需求分析到编码调试的过程。</strong></p>\n<p><img alt=\"AgentINIDE\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/AgentINIDE.png\"/></p>\n<h2><strong>1024Code 尝试定义 AI 与人类编程交互的新方式</strong></h2>\n<p>在当前阶段，1024Code 更相信人类的代码，所以 AI 在修改人类代码时需要人类确认，AI 在修改自己的代码时可以立刻生效。</p>\n<p>得益于我们全栈自研的技术，我们的团队能够深度定义编辑器的内核，实现快编辑的能力，能够准确区分代码是来自 AI 生成还是人类编写。</p>\n<p><img alt=\"AgentINIDE\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/HumanVSAI.png\"/></p>\n<h2><strong>具体能力介绍</strong></h2>\n<p><strong>从零开发一个小项目</strong></p>\n<p>1024Code 可以根据你的需求介绍，进行 MVP （最小可行版本）拆解需求，然后实现第一版 MVP 。它可以实现一个小型项目（至多不超过 10 个）多个文件的生成和编辑。</p>\n<p><img alt=\"AgentINIDE\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/Genr.png\"/></p>\n<p><strong>解决一个小的需求</strong></p>\n<p>你提出需求，1024Code 的 AI 导师会首先自行感悟编程环境（例如是哪个语言哪个框架），然后分析需求（如遇需求不清楚时会自行跟你互动），构建代码语义树，确定需要创建新的文件或者修改哪些文件，生成对应代码，利用 1024PaaS 提供的更新代码块能力进行逐字处理。最后尝试运行代码并检查控制台输出，完成本次需求实现。</p>\n<p><strong>自动 Debug 错误</strong></p>\n<p>发现控制台的错误时，它会自行开始 Debug 调试错误。读取报错信息并决定如何修复，然后读取对应代码进行修改。</p>\n<p><strong>与人类在代码归属上创新互动</strong></p>\n<p>AI 导师可以直接修改它自己之前完成的代码，修改人类代码需要一个确认与 diff 比较的过程。</p>\n<h2><strong>1024Code 中 AI 导师的能力限制</strong></h2>\n<p>AI 导师在 1024Code 中是一个完全拟人的存在，它有自己独立的交互界面，甚至人类可以直接观察它的每一步操作。由于当前大模型的智能还不足够，我们看一下能力上的限制。</p>\n<p><img alt=\"AgentINIDE\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/AgentTitle.png\"/></p>\n<p><strong>决策能力上的限制</strong></p>\n<p>目前超出 10 个文件的较大项目表现会出现成功率大幅下降的情况。</p>\n<p>在网页项目、命令行项目、Python 游戏外的项目，目前没有针对优化。</p>\n<p><strong>浏览器眼睛视觉还未添加</strong></p>\n<p>在更理想的情况下，AI 导师应该能主动识别浏览器网页上的界面错误，并进行修复，但这个依赖于现有大模型的多模态能力与 Token 成本，目前还未实现相关能力。</p>\n<h2><strong>未来的展望</strong></h2>\n<p>未来的编程世界将发生重大范式变化，云端编程+原生 AI 编程将彻底改变传统本地开发方式，就如同文档在线化置于本地编辑，Figma 置于 PS ，网盘置于本地 USB 存储。80% 的代码由 AI 完成，人类完成剩下的架构工作是接下来 AI 时代相当长时间持续的一种新的编程常态。</p>\n<h2><strong>具体案例</strong></h2>\n<p>同事跑了几个项目，大家可以点击视频链接了解：</p>\n<ol>\n<li>\n<p><strong>尝试使用 1024Code 的 Agent 智能体功能修复 Chart.js 里一个 Bug</strong>：\n<a href=\"https://www.bilibili.com/video/BV1Lj421f7UK/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b\" rel=\"nofollow\">https://www.bilibili.com/video/BV1Lj421f7UK/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b</a></p>\n</li>\n<li>\n<p><strong>使用 Agent 智能体功能补全&amp;迭代音乐播放器项目代码</strong>：\n<a href=\"https://www.bilibili.com/video/BV1uK421v74Z/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b\" rel=\"nofollow\">https://www.bilibili.com/video/BV1uK421v74Z/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b</a></p>\n</li>\n<li>\n<p><strong>国内也有 Devin 了？一句话需求生成 2048 游戏！</strong>：\n<a href=\"https://www.bilibili.com/video/BV1m2421N7eN/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b\" rel=\"nofollow\">https://www.bilibili.com/video/BV1m2421N7eN/?share_source=copy_web&amp;vd_source=9bb16af47f4ff115bffa964190f6fa4b</a></p>\n</li>\n</ol>\n<h2><strong>我们已经发布邀请码公测</strong></h2>\n<p>1024Code 目前已经启动了邀请码公测，大家可以通过朋友或者主动申请获取邀请码来体验和使用产品，目前整个产品完全免费，AI Agent 的体验使用是积分消耗模式。</p>\n<p><img alt=\"AgentINIDE\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://1024-staging-1258723534.cos.ap-guangzhou.myqcloud.com/doc_assets/Agent/Wel.png\"/></p>\n<p>如果你在商业、投资或大模型能力上想与 1024Code 合作可以直接加创始人微信号：<strong>lyfi2003</strong></p>\n<p>让我们一起打造下一代全新 L5 全自主编程新范式吧！</p>\n", "last_modified": 1710500322, "replies": 24, "id": 1024090}]