[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4e73/2ced/26_large.png?m=1584288945", "name": "hangzhou", "avatar_normal": "https://cdn.v2ex.com/navatar/4e73/2ced/26_normal.png?m=1584288945", "title": "杭州", "url": "https://www.v2ex.com/go/hangzhou", "topics": 2303, "footer": "", "header": "", "title_alternative": "Hangzhou", "avatar_mini": "https://cdn.v2ex.com/navatar/4e73/2ced/26_mini.png?m=1584288945", "stars": 1752, "aliases": [], "root": false, "id": 26, "parent_node_name": "cn"}, "member": {"id": 565901, "username": "zszeslz", "url": "https://www.v2ex.com/u/zszeslz", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/d8d4958ba82aa6f337d7d1af9a990ec4?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/d8d4958ba82aa6f337d7d1af9a990ec4?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/d8d4958ba82aa6f337d7d1af9a990ec4?s=73&d=retro", "created": 1639751430, "last_modified": 1726923025}, "last_reply_by": "zszeslz", "last_touched": 1744872908, "title": "相亲贴-帮表妹找对象", "url": "https://www.v2ex.com/t/1126010", "created": 1744818711, "deleted": 0, "content": "表妹 00 后（具体年龄忘记了，尴尬），本科学历，目前杭州做财务。相貌 OK （说漂亮怕有人说我吹，那就说算是可爱风？），普通家庭无经济压力（别太担心彩礼的事）。无恋爱经历（貌似是这样，毕竟我也不是亲哥）\n\n1. 杭州哪里有相亲角？靠谱吗？\n\n2. 有在杭州工作愿意认识我表妹的单身男吗？如果有我再详细介绍一下表妹情况。\n\n3. 对了，老家是河南，不在杭州工作也行，最好离家近点。\n\n4. 有其他靠谱渠道帮我表妹认识到其他单身男吗？\n\nPS：我表妹不知道我在帮她找相亲对象。\n\n有渠道，或者懂杭州相亲情况的，盼望给予一条回复，非常感谢！\n\n对了，还有一个广州单身男（公务员，无念爱经历，家庭条件 OK ）找对象，有渠道的也可以联系我，谢谢。", "content_rendered": "表妹 00 后（具体年龄忘记了，尴尬），本科学历，目前杭州做财务。相貌 OK （说漂亮怕有人说我吹，那就说算是可爱风？），普通家庭无经济压力（别太担心彩礼的事）。无恋爱经历（貌似是这样，毕竟我也不是亲哥）<br /><br />1. 杭州哪里有相亲角？靠谱吗？<br /><br />2. 有在杭州工作愿意认识我表妹的单身男吗？如果有我再详细介绍一下表妹情况。<br /><br />3. 对了，老家是河南，不在杭州工作也行，最好离家近点。<br /><br />4. 有其他靠谱渠道帮我表妹认识到其他单身男吗？<br /><br />PS：我表妹不知道我在帮她找相亲对象。<br /><br />有渠道，或者懂杭州相亲情况的，盼望给予一条回复，非常感谢！<br /><br />对了，还有一个广州单身男（公务员，无念爱经历，家庭条件 OK ）找对象，有渠道的也可以联系我，谢谢。", "last_modified": 1744842850, "replies": 121, "id": 1126010}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6680/8e32/414_large.png?m=1436505183", "name": "os", "avatar_normal": "https://cdn.v2ex.com/navatar/6680/8e32/414_normal.png?m=1436505183", "title": "操作系统", "url": "https://www.v2ex.com/go/os", "topics": 130, "footer": "", "header": "关于操作系统基本概念的讨论，及各种不为人知的小众系统", "title_alternative": "Operating System", "avatar_mini": "https://cdn.v2ex.com/navatar/6680/8e32/414_mini.png?m=1436505183", "stars": 317, "aliases": [], "root": false, "id": 414, "parent_node_name": "computer"}, "member": {"id": 612699, "username": "MissAW", "url": "https://www.v2ex.com/u/MissAW", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/gravatar/c1918e07db779756a16d01d6aabb0d27?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/c1918e07db779756a16d01d6aabb0d27?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/c1918e07db779756a16d01d6aabb0d27?s=73&d=retro", "created": 1675737185, "last_modified": 1743995391}, "last_reply_by": "wryyyyyyyyyyyy", "last_touched": 1744871802, "title": "请问，当我们在选择不同操作系统的时候，我们到底在选择什么？", "url": "https://www.v2ex.com/t/1125983", "created": 1744807943, "deleted": 0, "content": "作为长期使用过 Windows （ 08-17 ）和 MacOS （ 17-25 ）的日常办公非开发用户，最近又拿出老笔记本折腾装上了 LTSC 21H2 （ Win 7 之后就没用过 Windows ），虽然还没有深度使用，但是感觉 Win10 整个系统和界面用起来也挺好的，并且在下载软件的时候，震惊有点忘记了 Windows 软件生态的易得性（软件的丰富性以及各种破解绿色版），但是同时也感受到另一些区别，比如需要自行安装运行库/环境/网卡驱动，比如安装软件的流程和用户感知，比如 windows 系统里存在的一些流氓软件（比如安装驱动总裁结果默默顺便给安装个 360 ，然后卸载还各种流程阻碍，使用 mac 多年后感到震惊了）。\r\n\r\n这种快速直观的感受让我对两个系统有了更中立的看法，我觉得好像两个系统都有好有不好的地方，并且作为普通用户，我自己感觉用哪个系统好像都能满足我日常需要，没有离不开谁。这让我一下回忆起之前当大家在推荐系统或者电脑的时候（不光是 V 站），好像不少人的观点和回复都是比较简单粗暴且有偏向性的，有些时候还会互相攻击互不相让，也让我想起之前了解 Linux 桌面的时候，感觉使用 Linux 的用户也很满意 Linux （包括现在日常办公使用），似乎哪儿都爽，让人很馋很想要。（我的个人观感是一些苹果和 Linux 用户会更极端一点，Windows 好像都很不受待见但是又得用）。这些回忆又进一步把我引向一个一直困惑我的问题：这三个主流桌面系统，除了游戏以外（这个好像是微软独大），到底它们之间有什么交集，是否有或者有哪些差集（核心区别）？当我们在选择不同操作系统的时候，我们到底在选什么，我们又应该怎么选？有没有真正深度使用过这三个系统的人，能够用通俗易懂的语言来给我们全面客观的讲一讲这三个系统。\r\n\r\n请大家尽量避免使用一些简单缺乏论据的结论（比如‘普通用户就不要折腾 Linux’，我想问，为什么不要折腾？界面友好的 Linux 桌面版也不能用吗？它到底有什么优点和缺点，是因为驱动不齐，还是因为软件生态不全？有哪些让人一票通过或者否决的点？让我自己判断选择可以吗？），而是能尽量能够更客观中立的去比较，让不是很懂的人也能够豁然开朗抓到三者的精髓，然后能根据自身需要去做选择。谢谢！", "content_rendered": "作为长期使用过 Windows （ 08-17 ）和 MacOS （ 17-25 ）的日常办公非开发用户，最近又拿出老笔记本折腾装上了 LTSC 21H2 （ Win 7 之后就没用过 Windows ），虽然还没有深度使用，但是感觉 Win10 整个系统和界面用起来也挺好的，并且在下载软件的时候，震惊有点忘记了 Windows 软件生态的易得性（软件的丰富性以及各种破解绿色版），但是同时也感受到另一些区别，比如需要自行安装运行库/环境/网卡驱动，比如安装软件的流程和用户感知，比如 windows 系统里存在的一些流氓软件（比如安装驱动总裁结果默默顺便给安装个 360 ，然后卸载还各种流程阻碍，使用 mac 多年后感到震惊了）。<br /><br />这种快速直观的感受让我对两个系统有了更中立的看法，我觉得好像两个系统都有好有不好的地方，并且作为普通用户，我自己感觉用哪个系统好像都能满足我日常需要，没有离不开谁。这让我一下回忆起之前当大家在推荐系统或者电脑的时候（不光是 V 站），好像不少人的观点和回复都是比较简单粗暴且有偏向性的，有些时候还会互相攻击互不相让，也让我想起之前了解 Linux 桌面的时候，感觉使用 Linux 的用户也很满意 Linux （包括现在日常办公使用），似乎哪儿都爽，让人很馋很想要。（我的个人观感是一些苹果和 Linux 用户会更极端一点，Windows 好像都很不受待见但是又得用）。这些回忆又进一步把我引向一个一直困惑我的问题：这三个主流桌面系统，除了游戏以外（这个好像是微软独大），到底它们之间有什么交集，是否有或者有哪些差集（核心区别）？当我们在选择不同操作系统的时候，我们到底在选什么，我们又应该怎么选？有没有真正深度使用过这三个系统的人，能够用通俗易懂的语言来给我们全面客观的讲一讲这三个系统。<br /><br />请大家尽量避免使用一些简单缺乏论据的结论（比如‘普通用户就不要折腾 Linux’，我想问，为什么不要折腾？界面友好的 Linux 桌面版也不能用吗？它到底有什么优点和缺点，是因为驱动不齐，还是因为软件生态不全？有哪些让人一票通过或者否决的点？让我自己判断选择可以吗？），而是能尽量能够更客观中立的去比较，让不是很懂的人也能够豁然开朗抓到三者的精髓，然后能根据自身需要去做选择。谢谢！", "last_modified": 1744842840, "replies": 96, "id": 1125983}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6e27/13a6/557_large.png?m=1608969785", "name": "life", "avatar_normal": "https://cdn.v2ex.com/navatar/6e27/13a6/557_normal.png?m=1608969785", "title": "生活", "url": "https://www.v2ex.com/go/life", "topics": 7705, "footer": "", "header": "生活中的技术讨论", "title_alternative": "Life", "avatar_mini": "https://cdn.v2ex.com/navatar/6e27/13a6/557_mini.png?m=1608969785", "stars": 1810, "aliases": [], "root": false, "id": 557, "parent_node_name": ""}, "member": {"id": 35158, "username": "aaaa9966", "url": "https://www.v2ex.com/u/aaaa9966", "website": "", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/70b9/8536/35158_mini.png?m=1532502874", "avatar_normal": "https://cdn.v2ex.com/avatar/70b9/8536/35158_normal.png?m=1532502874", "avatar_large": "https://cdn.v2ex.com/avatar/70b9/8536/35158_large.png?m=1532502874", "created": 1362322782, "last_modified": 1532502874}, "last_reply_by": "jellyX", "last_touched": 1744157446, "title": "作为夜猫子，现在上班每天要 7 点左右早起，特别痛苦怎么办？", "url": "https://www.v2ex.com/t/1126029", "created": 1744848646, "deleted": 0, "content": "目前在一家小的 IT 公司上班，由于是 9 点上班，通勤要 1 给小时左右，因此基本上闹钟设的是 7 点，一般最晚 7 点 20 就要起床了，再加上洗漱的时间，差不多 9 点左右能到公司。\r\n\r\n作为夜猫子，每天都是凌晨 2-3 点左右睡，太早真的睡不着。所以早上起来的时候真的特别痛苦，上个逼班最痛苦的事情就是早起了，有没有什么办法可以解决这个精神内耗。", "content_rendered": "目前在一家小的 IT 公司上班，由于是 9 点上班，通勤要 1 给小时左右，因此基本上闹钟设的是 7 点，一般最晚 7 点 20 就要起床了，再加上洗漱的时间，差不多 9 点左右能到公司。<br /><br />作为夜猫子，每天都是凌晨 2-3 点左右睡，太早真的睡不着。所以早上起来的时候真的特别痛苦，上个逼班最痛苦的事情就是早起了，有没有什么办法可以解决这个精神内耗。", "last_modified": 1744850875, "replies": 84, "id": 1126029}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/e7b2/4b11/360_large.png?m=1670319927", "name": "windows", "avatar_normal": "https://cdn.v2ex.com/navatar/e7b2/4b11/360_normal.png?m=1670319927", "title": "Windows", "url": "https://www.v2ex.com/go/windows", "topics": 4274, "footer": "", "header": "Windows, not walls.", "title_alternative": "Windows", "avatar_mini": "https://cdn.v2ex.com/navatar/e7b2/4b11/360_mini.png?m=1670319927", "stars": 1332, "aliases": [], "root": false, "id": 360, "parent_node_name": "os"}, "member": {"id": 523700, "username": "JustW", "url": "https://www.v2ex.com/u/JustW", "website": "https://www.wangwangit.com", "twitter": null, "psn": null, "github": null, "btc": null, "location": "", "tagline": "", "bio": "职场小菜鸟\r\n互联网摸鱼大师\r\nAI爱好者\r\n热爱分享的路人", "avatar_mini": "https://cdn.v2ex.com/avatar/34d9/1ade/523700_mini.png?m=1714371525", "avatar_normal": "https://cdn.v2ex.com/avatar/34d9/1ade/523700_normal.png?m=1714371525", "avatar_large": "https://cdn.v2ex.com/avatar/34d9/1ade/523700_large.png?m=1714371525", "avatar_xlarge": "https://cdn.v2ex.com/avatar/34d9/1ade/523700_xlarge.png?m=1714371525", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/34d9/1ade/523700_xlarge.png?m=1714371525", "avatar_xxxlarge": "https://cdn.v2ex.com/avatar/34d9/1ade/523700_xlarge.png?m=1714371525", "created": 1607924325, "last_modified": 1714371525}, "last_reply_by": "chengyiqun", "last_touched": 1744873521, "title": "重装电脑用 Scoop 管理软件,清爽多了!", "url": "https://www.v2ex.com/t/1126032", "created": 1744850686, "deleted": 0, "content": "> **这篇文章写给谁看？** ✍️\r\n>\r\n> *   所有 Windows 用户，特别是：\r\n>     *   经常需要安装、配置开发工具的**开发者、程序员** 🧑‍💻。\r\n>     *   厌倦了每次重装系统都要**手动**下载、安装、点“下一步”的**每一个人** 😩。\r\n>     *   希望电脑保持**干净整洁**，告别混乱的安装目录和注册表残留的**效率追求者** ✨。\r\n>     *   无论是电脑**小白**还是**老司机**，都能轻松上手！\r\n>\r\n> **预计阅读+实践时间：** ⏱️ 30-60 分钟 (取决于你的网络速度和想安装的软件数量)\r\n\r\n### 😫 **前言：你是否也曾被 Windows 软件安装折磨？**\r\n\r\n&emsp;&emsp;还记得吗？每次重装 Windows 系统后，那令人头秃的软件安装环节：打开浏览器，搜索、下载 JDK 、Node.js 、Python 、Git 、VS Code 、MySQL 、Redis... 每个软件都要经历“寻找官网 -> 下载 -> 双击安装包 -> 无脑点下一步（还得小心捆绑软件！） -> 配置环境变量”的漫长旅程。一套操作下来，半天时间就没了，耐心也耗尽了。更别提各种依赖冲突、环境变量配置错误、软件卸载不干净留下的系统“垃圾”... 简直是噩梦！😱\r\n\r\n&emsp;&emsp;如果你对上述场景感同身受，那么恭喜你，找到了解放自己的钥匙！🔑 今天，我要向你隆重介绍一款 Windows 下的命令行包管理神器 —— **Scoop**。它就像一个专门为开发者和效率爱好者准备的“应用商店”，能让你用几行简单的命令，就闪电般地安装、更新、管理你需要的各种（尤其是命令行）工具和软件。从此，环境搭建不再是痛苦，而是几分钟就能搞定的轻松事！\r\n\r\n&emsp;&emsp;看看我用 Scoop 配置好环境后的样子，是不是清爽又高效？👇\r\n\r\n![image-20250414203759163]( https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250414203759163.png)\r\n\r\n### 🛠️ **准备工作：磨刀不误砍柴工**\r\n\r\n&emsp;&emsp;在开始之前，请确保你满足以下条件：\r\n\r\n*   **操作系统**: Windows 10 或 Windows 11 （ Windows 7 SP1+ 理论上也支持，但更推荐新版本）。\r\n*   **PowerShell**: 版本 5.1 或更高版本。Windows 10/11 通常自带。\r\n    *   **检查方法**：打开 PowerShell （按 `Win + X`，选择“Windows PowerShell”或“终端”），输入 `$PSVersionTable.PSVersion` 并回车，查看 `Major` 版本号是否 >= 5 。\r\n*   **.NET Framework**: 4.5 或更高版本 (通常新版 Windows 已满足)。\r\n*   **网络连接**: 稳定且能访问 GitHub (Scoop 的核心依赖)。\r\n*   **管理员权限**: 虽然 Scoop 的核心理念是**非管理员权限**安装，但在**首次**设置 PowerShell 执行策略或进行**全局安装**时可能需要。建议首次操作时，以管理员身份运行 PowerShell 。\r\n*   **基本命令行知识**: 别担心！如果你是新手，只需跟着步骤复制粘贴命令即可。我会解释每一步的作用。\r\n*   **网络环境**: 全程代理网络。如果你在国内网络环境下遇到困难（如下载慢、连接失败），可能需要配置代理或使用其他网络优化方法。文末会提供一些解决方案思路。\r\n\r\n### 🚀 **核心步骤：开始你的 Scoop 之旅！**\r\n\r\n#### **步骤一：安装 Scoop 本体 - 神器的第一步**\r\n\r\n&emsp;&emsp;Scoop 本身就是一个需要被“安装”的工具。\r\n\r\n1. **打开 PowerShell**:\r\n\r\n   *   按下 `Win + X` 快捷键，在菜单中选择 “Windows PowerShell (管理员)” 或 “终端 (管理员)”。**建议首次使用管理员权限**，以确保后续步骤顺利。\r\n\r\n2. **设置执行策略**:\r\n\r\n   * 为了允许 PowerShell 运行像 Scoop 安装脚本这样的本地或远程签名的脚本，需要调整执行策略。输入以下命令：\r\n\r\n     ```powershell\r\n     Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\r\n     ```\r\n\r\n   * 按下回车。如果系统询问是否更改执行策略，输入 `Y` 并回车确认。\r\n\r\n   * **💡 小科普**:\r\n\r\n     *   `Set-ExecutionPolicy`: 这是设置 PowerShell 执行策略的命令。\r\n     *   `RemoteSigned`: 这是一种安全策略，允许运行本地创建的脚本，对于从网络下载的脚本，则要求它们具有可信发布者的数字签名。这比 `Unrestricted`（允许所有脚本）更安全。\r\n     *   `-Scope CurrentUser`: 表示这个设置仅对当前登录的用户生效，通常不需要管理员权限（但首次设置可能需要确认），也更安全。\r\n\r\n3. **执行安装命令**:\r\n\r\n   * 接下来，粘贴并运行以下命令来下载并执行 Scoop 的官方安装脚本：\r\n\r\n     ```powershell\r\n     Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression\r\n     # 或者使用别名更简洁的版本 (iwr = Invoke-RestMethod, iex = Invoke-Expression)\r\n     # iwr -useb get.scoop.sh | iex\r\n     ```\r\n\r\n   * **💡 小科普**:\r\n\r\n     *   `Invoke-RestMethod` (或 `iwr`): 从指定的 URL (`https://get.scoop.sh`) 下载内容（这里是安装脚本）。\r\n     *   `|` (管道符): 将前一个命令的输出（下载的脚本内容）传递给后一个命令。\r\n     *   `Invoke-Expression` (或 `iex`): 执行接收到的字符串内容（也就是运行安装脚本）。\r\n\r\n   * **网络问题提示**: 如果这条命令因为网络问题（如无法连接 GitHub ）失败，请参考文末的“常见问题解决”。\r\n\r\n4. **预期结果**:\r\n\r\n   *   等待脚本执行完毕。如果一切顺利，你会在 PowerShell 窗口看到类似 \"Scoop was installed successfully!\" 的成功信息。\r\n   *   默认情况下，Scoop 会安装在你的用户目录下：`C:\\Users\\你的用户名\\scoop`。\r\n\r\n5. **(可选) 修改默认安装路径**:\r\n\r\n   * 如果你不想把 Scoop 安装在 C 盘，或者想统一管理软件，可以在**执行安装命令之前**，先运行以下两条命令来指定路径（例如，安装到 `D:\\Apps\\Scoop`）：\r\n\r\n     ```powershell\r\n     # 1. 设置 Scoop 的安装目录环境变量\r\n     $env:SCOOP='D:\\Apps\\Scoop'\r\n     # 2. 将这个环境变量永久写入用户配置 (下次打开 PowerShell 依然有效)\r\n     [Environment]::SetEnvironmentVariable('SCOOP', $env:SCOOP, 'User')\r\n     # 3. (可选) 设置全局安装路径 (如果需要全局安装软件)\r\n     # $env:SCOOP_GLOBAL='D:\\GlobalApps'\r\n     # [Environment]::SetEnvironmentVariable('SCOOP_GLOBAL', $env:SCOOP_GLOBAL, 'Machine') # Machine 级别需要管理员权限\r\n     ```\r\n\r\n   * 设置完路径后，**再执行上面的第 3 步安装命令**。\r\n\r\n#### **步骤二：验证安装与添加软件仓库 (Bucket)**\r\n\r\n&emsp;&emsp;Scoop 使用 \"Bucket\"（桶）来管理软件包列表，每个 Bucket 就是一个 Git 仓库，里面包含了软件的安装信息（称为 Manifest ，清单文件）。默认只有 `main` Bucket ，主要包含常用的命令行工具。我们需要添加更多 Buckets 来发现和安装更多软件。\r\n\r\n1. **验证 Scoop**:\r\n\r\n   *   在 PowerShell 中输入 `scoop help` 并回车。如果看到 Scoop 的帮助信息和可用命令列表，说明 Scoop 已成功安装并可以工作了。\r\n   *   ![image-20250414203108494]( https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250414203108494.png)\r\n\r\n2. **添加常用 Bucket**:\r\n\r\n   * `extras` Bucket 包含了大量流行的 GUI 软件和非 `main` Bucket 的常用工具。强烈建议添加：\r\n\r\n     ```powershell\r\n     scoop bucket add extras\r\n     ```\r\n\r\n   * **💡 提示**: 添加 Bucket 需要从 GitHub 克隆仓库，如果网络慢请耐心等待。如果失败，检查网络或代理设置。\r\n\r\n   * **重要**: Scoop 依赖 `git` 来管理 Buckets 。如果你的系统没有安装 `git`，Scoop 在添加第一个 Bucket 时通常会提示并自动尝试安装。你也可以手动安装：`scoop install git`。\r\n\r\n3. **添加其他常用 Buckets (可选)**:\r\n\r\n   *   根据你的需要，可以添加更多社区维护的 Buckets 。例如：\r\n       *   安装各种 Java 版本：`scoop bucket add java`\r\n       *   安装 Nerd Fonts (美化终端字体)：`scoop bucket add nerd-fonts`\r\n       *   安装特定旧版本的软件：`scoop bucket add versions`\r\n       *   安装非便携应用 (需要特殊处理)：`scoop bucket add nonportable` (安装里面的软件可能需要管理员权限)\r\n   *   **去哪里找更多 Buckets ？**\r\n       *   官方维护的 Bucket 列表：[https://github.com/ScoopInstaller]( https://github.com/ScoopInstaller)\r\n       *   社区维护的已知 Buckets 列表：可以在网上搜索 \"known scoop buckets\" 或 查看 [这个非官方索引]( https://rasa.github.io/scoop-directory/) (但请注意，首选官方或广泛使用的 Bucket)。\r\n\r\n4. **注意事项**:\r\n\r\n   *   添加 Bucket 时需要良好的网络连接。\r\n   *   如果命令出错，请检查 Bucket 名称是否拼写正确。\r\n   *   有时网络波动会导致添加失败，重试一次可能就好了。\r\n\r\n#### **步骤三：用 Scoop 安装你的常用软件**\r\n\r\n&emsp;&emsp;激动人心的时刻到了！现在你可以像逛超市一样，用简单的命令安装软件了。\r\n\r\n1. **搜索软件**:\r\n\r\n   * 不确定软件是否在已添加的 Buckets 里？用 `search` 命令！\r\n\r\n     ```powershell\r\n     scoop search <你想搜索的软件名或关键词>\r\n     # 例如: 搜索 python 相关\r\n     scoop search python\r\n     ```\r\n\r\n   * Scoop 会列出匹配的软件包及其所在的 Bucket 。\r\n\r\n   * **更方便的搜索**: 你也可以直接访问 Scoop 的官方网站 [https://scoop.sh/]( https://scoop.sh/)，它提供了一个图形化的搜索界面。注意取消勾选页面上的 \"main\" 筛选器可以搜索到 `extras` 等其他 Bucket 中的包。\r\n\r\n   * ![image-20250414203635310]( https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250414203635310.png)\r\n\r\n2. **安装单个软件**:\r\n\r\n   * 找到你需要的软件名后，使用 `install` 命令安装。\r\n\r\n     ```powershell\r\n     # 安装 OpenJDK (来自 java bucket)\r\n     scoop install openjdk\r\n     # 安装 Git (来自 main bucket)\r\n     scoop install git\r\n     # 安装 7zip (来自 main bucket)\r\n     scoop install 7zip\r\n     # 安装 VS Code (来自 extras bucket)\r\n     scoop install vscode\r\n     ```\r\n\r\n3. **一次安装多个软件**:\r\n\r\n   * 提高效率，一次性安装多个！用空格隔开软件名即可。\r\n\r\n     ```powershell\r\n     scoop install nodejs python mysql nginx putty everything powertoys\r\n     ```\r\n\r\n4. **(可选) 全局安装**:\r\n\r\n   * 默认情况下，Scoop 安装的软件只对当前用户可用，并且安装在用户目录下的 `scoop` 文件夹中（如 `C:\\Users\\你的用户名\\scoop\\apps`）。这通常不需要管理员权限，也更干净、便携。\r\n\r\n   * 如果你希望软件对系统上的所有用户都可用，可以使用 `-g` 或 `--global` 参数。这**需要管理员权限**运行 PowerShell ，并且软件会被安装到全局路径（默认为 `C:\\ProgramData\\scoop`，或你通过 `$env:SCOOP_GLOBAL` 指定的路径）。\r\n\r\n     ```powershell\r\n     # 全局安装 OpenJDK (需要管理员权限运行 PowerShell)\r\n     scoop install openjdk --global\r\n     ```\r\n\r\n   * **💡 建议**: 除非你明确知道需要全局安装，否则**优先使用默认的用户模式安装**，这更能体现 Scoop 的优势。\r\n\r\n5. **预期结果**:\r\n\r\n   *   Scoop 会自动下载软件包、解压、处理依赖，并将可执行文件通过 \"shim\" 机制添加到你的 `PATH` 中。安装完成后，你通常可以直接在**新的** PowerShell 或 CMD 窗口中使用该软件的命令。\r\n   *   例如，安装 `openjdk` 后，打开一个新的 PowerShell 窗口，输入 `java -version`，应该能看到 Java 的版本信息。\r\n\r\n6. **💡 Scoop 的魔法：Shim 是什么？**\r\n\r\n   *   Scoop 的一个核心优势是**不污染系统**的 `PATH` 环境变量。它怎么做到的？答案是 \"Shim\" (垫片)。\r\n   *   当你安装一个软件（比如 `git`）后，Scoop 不会把 `git.exe` 所在的整个目录加到系统 `PATH`。它只做一件事：在 `~/scoop/shims` 目录下（这个目录在安装 Scoop 时会被自动添加到用户 `PATH` 中）创建一个名为 `git.exe` 的**极小的**可执行文件 (shim)。\r\n   *   当你运行 `git` 命令时，系统在 `PATH` 里找到了 `~/scoop/shims/git.exe`。这个 shim 文件知道真正 `git.exe` 的位置（比如在 `~/scoop/apps/git/current/bin/git.exe`），然后它会启动真正的 `git.exe`。\r\n   *   这样做的好处是：你的 `PATH` 变量非常干净，只增加了一个 `shims` 目录。卸载软件时，只需删除对应的 shim 和软件目录，对系统几乎没有影响。对于 GUI 程序，Scoop 会在开始菜单创建一个 \"Scoop Apps\" 文件夹存放快捷方式。\r\n\r\n#### **步骤四：软件的更新与管理**\r\n\r\n&emsp;&emsp;安装只是开始，Scoop 还能帮你轻松管理已安装的软件。\r\n\r\n![image-20250416113254357]( https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250416113254357.png)\r\n\r\n1. **检查更新**:\r\n\r\n   * 想知道哪些软件有新版本了？\r\n\r\n     ```powershell\r\n     # 检查 Scoop 自身和所有 Buckets 的更新，并列出可更新的软件\r\n     scoop status\r\n     # 或者直接更新 Scoop 自身和 Buckets 的信息\r\n     scoop update\r\n     ```\r\n\r\n   * `scoop update` 首先会更新 Scoop 自身和所有已添加的 Bucket （相当于对每个 Bucket 的 Git 仓库执行 `git pull`），获取最新的软件包清单。\r\n\r\n2. **更新所有软件**:\r\n\r\n   * 一键更新所有已安装且有新版本的软件：\r\n\r\n     ```powershell\r\n     scoop update *\r\n     ```\r\n\r\n3. **更新指定软件**:\r\n\r\n   * 只想更新某个特定的软件？\r\n\r\n     ```powershell\r\n     scoop update <软件名>\r\n     # 例如: 更新 nodejs\r\n     scoop update nodejs\r\n     ```\r\n\r\n4. **查看已安装列表**:\r\n\r\n   * 想看看自己都装了些什么？\r\n\r\n     ```powershell\r\n     scoop list\r\n     ```\r\n\r\n5. **卸载软件**:\r\n\r\n   * 不再需要某个软件了？干干净净地移除它！\r\n\r\n     ```powershell\r\n     scoop uninstall <软件名>\r\n     # 例如: 卸载 mysql\r\n     scoop uninstall mysql\r\n     ```\r\n\r\n   * Scoop 会删除软件文件和对应的 shim/快捷方式，非常彻底。\r\n\r\n6. **查看软件信息**:\r\n\r\n   * 想了解某个已安装或可用软件的详细信息（版本、来源、依赖等）？\r\n\r\n     ```powershell\r\n     scoop info <软件名>\r\n     # 例如: 查看 git 的信息\r\n     scoop info git\r\n     ```\r\n\r\n7. **回退到旧版本**:\r\n\r\n   * 更新后发现新版本有 Bug ？可以尝试回退。\r\n\r\n     ```powershell\r\n     # 先查看可用版本\r\n     scoop info <软件名>\r\n     # 回退到指定版本 (例如回退 git 到 2.30.0.windows.1)\r\n     scoop reset <软件名>@<版本号>\r\n     scoop reset git@2.30.0.windows.1\r\n     ```\r\n\r\n8. **其他常用命令**:\r\n\r\n   *   `scoop cleanup *` : 清理所有软件的旧版本，释放磁盘空间。\r\n   *   `scoop cache rm *` : 清除下载缓存。\r\n   *   `scoop home <软件名>` : 在浏览器中打开软件的官方主页。\r\n   *   `scoop which <命令名>` : 显示某个命令对应的可执行文件的实际路径 (类似 Linux 的 `which`)。\r\n\r\n### 🤔 **常见问题解决 (FAQ)**\r\n\r\n#### **问题 1：Scoop 安装或添加 Bucket 时提示网络错误/超时？**\r\n\r\n* **原因分析**:\r\n\r\n  *   国内访问 GitHub 网络不稳定。\r\n  *   公司或学校网络限制。\r\n  *   系统代理设置未被 PowerShell 正确识别。\r\n\r\n* **解决方案**:\r\n\r\n  1. **检查网络**: 确保你的基本网络连接是通的。\r\n\r\n  2. **配置代理**: 如果你有可用的 HTTP 代理，可以为 Scoop 单独设置：\r\n\r\n     ```powershell\r\n     # 设置代理 (将 'http://代理服务器地址:端口' 替换为你的实际代理)\r\n     scoop config proxy http://代理服务器地址:端口\r\n     # 查看当前代理设置\r\n     scoop config proxy\r\n     # 取消代理\r\n     scoop config proxy none\r\n     ```\r\n\r\n     *注意：这只为 Scoop 设置代理，不影响系统其他应用。*\r\n\r\n  3. **使用网络加速工具**: 尝试使用 Watt Toolkit (原 Steam++) 或其他类似工具进行 GitHub 加速。\r\n\r\n  4. **手动下载安装脚本**:\r\n\r\n     *   在浏览器中访问 `https://get.scoop.sh`。\r\n     *   将页面内容**完整复制**并保存为一个名为 `install.ps1` 的文件（例如保存在桌面）。\r\n     *   在 PowerShell 中，切换到该文件所在的目录（例如 `cd ~/Desktop`），然后运行：`.\\install.ps1` (注意前面的 `.\\`)。如果之前修改了安装路径的环境变量，这里也需要先设置好。\r\n\r\n  5. **更换 DNS**: 尝试将系统的 DNS 服务器更换为更可靠的公共 DNS ，如 `1.1.1.1` (Cloudflare) 或 `8.8.8.8` (Google)。\r\n\r\n#### **问题 2：安装软件后，在命令行中输入命令提示“不是内部或外部命令”？**\r\n\r\n*   **原因分析**:\r\n    *   `~/scoop/shims` 目录没有被正确添加到系统的 PATH 环境变量中。\r\n    *   你没有**重新打开**一个新的 PowerShell 或 CMD 窗口（环境变量更改通常需要新会话才能生效）。\r\n    *   安装的是 GUI 程序，它可能没有提供命令行接口。\r\n    *   极少数情况下，shim 创建失败。\r\n*   **解决方案**:\r\n    1.  **重启终端**: **最常见的原因！** 关闭当前的 PowerShell/CMD 窗口，然后重新打开一个新的窗口再试。\r\n    2.  **检查 PATH 环境变量**:\r\n        *   在 PowerShell 中输入 `$env:Path` 查看当前 PATH 。确认其中是否包含类似 `C:\\Users\\你的用户名\\scoop\\shims` 的路径。\r\n        *   如果没有，尝试运行 `scoop fix path` 看是否能自动修复。\r\n        *   如果还不行，可能需要手动添加：右键“此电脑” -> 属性 -> 高级系统设置 -> 环境变量 -> 在“用户变量”或“系统变量”中找到 `Path` -> 编辑 -> 新建 -> 添加 `C:\\Users\\你的用户名\\scoop\\shims` (请替换为你的实际路径) -> 一路确定。然后**重启终端**。\r\n    3.  **确认安装**: 使用 `scoop list` 确认软件是否真的安装成功了。\r\n    4.  **检查软件类型**: 确认你安装的是命令行工具还是纯 GUI 应用。GUI 应用通常通过开始菜单的 \"Scoop Apps\" 文件夹启动。\r\n    5.  **检查 Shim**: 使用 `scoop which <命令名>` 看看是否能找到对应的 shim 文件。\r\n\r\n#### **问题 3：执行 `Set-ExecutionPolicy` 时出错或无效？**\r\n\r\n*   **原因分析**:\r\n    *   权限不足 (尤其是在尝试更改 `LocalMachine` 范围时)。\r\n    *   组策略限制 (在企业环境中常见)。\r\n*   **解决方案**:\r\n    1.  **使用管理员权限**: 确保你是以管理员身份运行 PowerShell 。\r\n    2.  **检查作用域**: 确认你使用的是 `-Scope CurrentUser`。更改 `LocalMachine` 作用域通常需要更高的权限，并且会影响所有用户。\r\n    3.  **检查组策略**: 如果你在公司电脑上，可能需要联系 IT 管理员，确认是否有组策略限制了执行策略的更改。\r\n    4.  **了解策略级别**: PowerShell 执行策略有多个作用域（ MachinePolicy, UserPolicy, Process, CurrentUser, LocalMachine ），它们有优先级。可以使用 `Get-ExecutionPolicy -List` 查看各作用域的设置。`CurrentUser` 通常能覆盖 `LocalMachine` (除非有策略限制)。\r\n\r\n#### **问题 4：杀毒软件报警或阻止 Scoop/软件安装？**\r\n\r\n*   **原因分析**: Scoop 的工作方式（下载、解压、创建 shim ）有时会被某些敏感的杀毒软件误判为可疑行为。\r\n*   **解决方案**:\r\n    1.  **添加排除项**: 在你的杀毒软件设置中，将 Scoop 的安装目录 (`C:\\Users\\你的用户名\\scoop` 或你自定义的路径) 添加到信任区域或排除列表。\r\n    2.  **临时禁用**: 在安装特定软件时，可以考虑临时禁用杀毒软件的实时防护，安装完成后再开启（请确保你信任要安装的软件来源！）。\r\n\r\n### 💡 **进阶技巧：让 Scoop 更得心应手**\r\n\r\n1. **创建自己的 Bucket**:\r\n\r\n   *   如果你有一些内部工具或者 Scoop 官方/社区没有收录的软件，可以创建自己的 Git 仓库作为 Bucket ，编写 JSON 格式的 Manifest 文件来描述如何安装它们。这对于团队共享工具配置非常有用。学习如何编写 Manifest: [Scoop Wiki]( https://github.com/ScoopInstaller/Scoop/wiki/App-Manifests)。\r\n\r\n2. **一键重装脚本**:\r\n\r\n   * 将你所有需要安装的常用软件整理到一个 PowerShell 脚本文件中（例如 `setup-my-env.ps1`）：\r\n\r\n     ```powershell\r\n     # setup-my-env.ps1\r\n     # 添加需要的 Buckets\r\n     scoop bucket add extras\r\n     scoop bucket add java\r\n     scoop bucket add nerd-fonts\r\n     \r\n     # 安装常用工具\r\n     scoop install git python nodejs openjdk maven gradle vscode 7zip everything powertoys curl wget grep sed bandizip # ... 添加你需要的其他软件\r\n     \r\n     # 清理旧版本\r\n     scoop cleanup *\r\n     \r\n     Write-Host \"环境配置完成！\"\r\n     ```\r\n\r\n   * 每次重装系统后，只需运行 Scoop 安装命令，然后执行这个脚本 `.\\setup-my-env.ps1`，即可快速恢复你的开发环境！\r\n\r\n3. **极致便携性**:\r\n\r\n   *   Scoop 的一大魅力在于其**便携性**。默认情况下，所有软件都安装在 `~/scoop` 目录下。这意味着，理论上你可以将整个 `scoop` 文件夹**复制**到另一台电脑的相同用户目录下（或者通过环境变量指定路径），然后简单运行一些 Scoop 命令（如 `scoop reset *` 或 `scoop fix path`）来修复路径和 shim ，就能在新电脑上获得几乎一致的环境！\r\n\r\n4. **与其他包管理器的比较 (简单)**:\r\n\r\n   *   **Scoop**: 默认用户级安装、无需管理员权限、干净不污染 PATH 、主要面向开发者和命令行工具、便携性好、仓库相对 Chocolatey 较小。\r\n   *   **Chocolatey (Choco)**: 历史悠久、软件包仓库**非常庞大** (覆盖面广)、通常需要管理员权限、安装方式更接近传统 Windows 安装（可能安装到 Program Files ）、有付费版提供高级功能。\r\n   *   **Winget**: 微软官方出品、内置于新版 Windows 、可以管理来自 Microsoft Store 和其社区仓库的应用、更新机制有时能同步非 Winget 安装的应用、更偏向通用软件管理。\r\n   *   **可以共存吗？** 可以！很多人会同时使用它们，根据软件可用性和个人偏好选择。例如，用 Scoop 管理开发工具，用 Winget 或 Chocolatey 管理大型 GUI 应用。\r\n\r\n### 🎉 **总结：拥抱 Scoop ，告别繁琐！**\r\n\r\n&emsp;&emsp;恭喜你！通过这篇（希望是）生动有趣的教程，你已经掌握了使用 Scoop 在 Windows 上高效、整洁地管理软件的秘诀。Scoop 以其简洁的命令行操作、出色的便携性、对系统环境的“零污染”以及强大的脚本能力，正成为越来越多 Windows 用户（尤其是开发者）的装机必备神器。\r\n\r\n&emsp;&emsp;从现在开始，忘掉那些繁琐的手动下载、安装、配置吧！让 Scoop 成为你得力的助手，把宝贵的时间投入到真正重要的事情上——无论是编码、创作，还是享受生活。\r\n\r\n---\r\n\r\n**💬 交流时间！**\r\n\r\n&emsp;&emsp;你觉得 Scoop 怎么样？在你的使用过程中，遇到了哪些有趣的问题或独到的技巧？你最喜欢用 Scoop 安装哪些软件？欢迎在评论区分享你的经验和看法，或者提出你的疑问。让我们一起交流，让 Windows 环境配置变得前所未有的简单和愉快！\r\n\r\n&emsp;&emsp;**如果觉得这篇文章对你有帮助，别忘了点赞、收藏，并分享给你身边还在被软件安装折磨的朋友们！** 😉", "content_rendered": "<blockquote>\n<p><strong>这篇文章写给谁看？</strong> ✍️</p>\n<ul>\n<li>\n所有 Windows 用户，特别是：<ul>\n<li>经常需要安装、配置开发工具的<strong>开发者、程序员</strong> 🧑‍💻。</li>\n<li>厌倦了每次重装系统都要<strong>手动</strong>下载、安装、点“下一步”的<strong>每一个人</strong> 😩。</li>\n<li>希望电脑保持<strong>干净整洁</strong>，告别混乱的安装目录和注册表残留的<strong>效率追求者</strong> ✨。</li>\n<li>无论是电脑<strong>小白</strong>还是<strong>老司机</strong>，都能轻松上手！</li>\n</ul>\n</li>\n</ul>\n<p><strong>预计阅读+实践时间：</strong> ⏱️ 30-60 分钟 (取决于你的网络速度和想安装的软件数量)</p>\n</blockquote>\n<h3>😫 <strong>前言：你是否也曾被 Windows 软件安装折磨？</strong></h3>\n<p>  还记得吗？每次重装 Windows 系统后，那令人头秃的软件安装环节：打开浏览器，搜索、下载 JDK 、Node.js 、Python 、Git 、VS Code 、MySQL 、Redis... 每个软件都要经历“寻找官网 -&gt; 下载 -&gt; 双击安装包 -&gt; 无脑点下一步（还得小心捆绑软件！） -&gt; 配置环境变量”的漫长旅程。一套操作下来，半天时间就没了，耐心也耗尽了。更别提各种依赖冲突、环境变量配置错误、软件卸载不干净留下的系统“垃圾”... 简直是噩梦！😱</p>\n<p>  如果你对上述场景感同身受，那么恭喜你，找到了解放自己的钥匙！🔑 今天，我要向你隆重介绍一款 Windows 下的命令行包管理神器 —— <strong>Scoop</strong>。它就像一个专门为开发者和效率爱好者准备的“应用商店”，能让你用几行简单的命令，就闪电般地安装、更新、管理你需要的各种（尤其是命令行）工具和软件。从此，环境搭建不再是痛苦，而是几分钟就能搞定的轻松事！</p>\n<p>  看看我用 Scoop 配置好环境后的样子，是不是清爽又高效？👇</p>\n<p><img alt=\"image-20250414203759163\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250414203759163.png\"/></p>\n<h3>🛠️ <strong>准备工作：磨刀不误砍柴工</strong></h3>\n<p>  在开始之前，请确保你满足以下条件：</p>\n<ul>\n<li><strong>操作系统</strong>: Windows 10 或 Windows 11 （ Windows 7 SP1+ 理论上也支持，但更推荐新版本）。</li>\n<li>\n<strong>PowerShell</strong>: 版本 5.1 或更高版本。Windows 10/11 通常自带。<ul>\n<li><strong>检查方法</strong>：打开 PowerShell （按 <code>Win + X</code>，选择“Windows PowerShell”或“终端”），输入 <code>$PSVersionTable.PSVersion</code> 并回车，查看 <code>Major</code> 版本号是否 &gt;= 5 。</li>\n</ul>\n</li>\n<li><strong>.NET Framework</strong>: 4.5 或更高版本 (通常新版 Windows 已满足)。</li>\n<li><strong>网络连接</strong>: 稳定且能访问 GitHub (Scoop 的核心依赖)。</li>\n<li><strong>管理员权限</strong>: 虽然 Scoop 的核心理念是<strong>非管理员权限</strong>安装，但在<strong>首次</strong>设置 PowerShell 执行策略或进行<strong>全局安装</strong>时可能需要。建议首次操作时，以管理员身份运行 PowerShell 。</li>\n<li><strong>基本命令行知识</strong>: 别担心！如果你是新手，只需跟着步骤复制粘贴命令即可。我会解释每一步的作用。</li>\n<li><strong>网络环境</strong>: 全程代理网络。如果你在国内网络环境下遇到困难（如下载慢、连接失败），可能需要配置代理或使用其他网络优化方法。文末会提供一些解决方案思路。</li>\n</ul>\n<h3>🚀 <strong>核心步骤：开始你的 Scoop 之旅！</strong></h3>\n<h4><strong>步骤一：安装 Scoop 本体 - 神器的第一步</strong></h4>\n<p>  Scoop 本身就是一个需要被“安装”的工具。</p>\n<ol>\n<li>\n<p><strong>打开 PowerShell</strong>:</p>\n<ul>\n<li>按下 <code>Win + X</code> 快捷键，在菜单中选择 “Windows PowerShell (管理员)” 或 “终端 (管理员)”。<strong>建议首次使用管理员权限</strong>，以确保后续步骤顺利。</li>\n</ul>\n</li>\n<li>\n<p><strong>设置执行策略</strong>:</p>\n<ul>\n<li>\n<p>为了允许 PowerShell 运行像 Scoop 安装脚本这样的本地或远程签名的脚本，需要调整执行策略。输入以下命令：</p>\n<pre><code class=\"language-powershell\">Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\n</code></pre>\n</li>\n<li>\n<p>按下回车。如果系统询问是否更改执行策略，输入 <code>Y</code> 并回车确认。</p>\n</li>\n<li>\n<p><strong>💡 小科普</strong>:</p>\n<ul>\n<li><code>Set-ExecutionPolicy</code>: 这是设置 PowerShell 执行策略的命令。</li>\n<li><code>RemoteSigned</code>: 这是一种安全策略，允许运行本地创建的脚本，对于从网络下载的脚本，则要求它们具有可信发布者的数字签名。这比 <code>Unrestricted</code>（允许所有脚本）更安全。</li>\n<li><code>-Scope CurrentUser</code>: 表示这个设置仅对当前登录的用户生效，通常不需要管理员权限（但首次设置可能需要确认），也更安全。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>执行安装命令</strong>:</p>\n<ul>\n<li>\n<p>接下来，粘贴并运行以下命令来下载并执行 Scoop 的官方安装脚本：</p>\n<pre><code class=\"language-powershell\">Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression\n# 或者使用别名更简洁的版本 (iwr = Invoke-RestMethod, iex = Invoke-Expression)\n# iwr -useb get.scoop.sh | iex\n</code></pre>\n</li>\n<li>\n<p><strong>💡 小科普</strong>:</p>\n<ul>\n<li><code>Invoke-RestMethod</code> (或 <code>iwr</code>): 从指定的 URL (<code><a href=\"https://get.scoop.sh\" rel=\"nofollow\">https://get.scoop.sh</a></code>) 下载内容（这里是安装脚本）。</li>\n<li><code>|</code> (管道符): 将前一个命令的输出（下载的脚本内容）传递给后一个命令。</li>\n<li><code>Invoke-Expression</code> (或 <code>iex</code>): 执行接收到的字符串内容（也就是运行安装脚本）。</li>\n</ul>\n</li>\n<li>\n<p><strong>网络问题提示</strong>: 如果这条命令因为网络问题（如无法连接 GitHub ）失败，请参考文末的“常见问题解决”。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>预期结果</strong>:</p>\n<ul>\n<li>等待脚本执行完毕。如果一切顺利，你会在 PowerShell 窗口看到类似 \"Scoop was installed successfully!\" 的成功信息。</li>\n<li>默认情况下，Scoop 会安装在你的用户目录下：<code>C:\\Users\\你的用户名\\scoop</code>。</li>\n</ul>\n</li>\n<li>\n<p><strong>(可选) 修改默认安装路径</strong>:</p>\n<ul>\n<li>\n<p>如果你不想把 Scoop 安装在 C 盘，或者想统一管理软件，可以在<strong>执行安装命令之前</strong>，先运行以下两条命令来指定路径（例如，安装到 <code>D:\\Apps\\Scoop</code>）：</p>\n<pre><code class=\"language-powershell\"># 1. 设置 Scoop 的安装目录环境变量\n$env:SCOOP='D:\\Apps\\Scoop'\n# 2. 将这个环境变量永久写入用户配置 (下次打开 PowerShell 依然有效)\n[Environment]::SetEnvironmentVariable('SCOOP', $env:SCOOP, 'User')\n# 3. (可选) 设置全局安装路径 (如果需要全局安装软件)\n# $env:SCOOP_GLOBAL='D:\\GlobalApps'\n# [Environment]::SetEnvironmentVariable('SCOOP_GLOBAL', $env:SCOOP_GLOBAL, 'Machine') # Machine 级别需要管理员权限\n</code></pre>\n</li>\n<li>\n<p>设置完路径后，<strong>再执行上面的第 3 步安装命令</strong>。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h4><strong>步骤二：验证安装与添加软件仓库 (Bucket)</strong></h4>\n<p>  Scoop 使用 \"Bucket\"（桶）来管理软件包列表，每个 Bucket 就是一个 Git 仓库，里面包含了软件的安装信息（称为 Manifest ，清单文件）。默认只有 <code>main</code> Bucket ，主要包含常用的命令行工具。我们需要添加更多 Buckets 来发现和安装更多软件。</p>\n<ol>\n<li>\n<p><strong>验证 Scoop</strong>:</p>\n<ul>\n<li>在 PowerShell 中输入 <code>scoop help</code> 并回车。如果看到 Scoop 的帮助信息和可用命令列表，说明 Scoop 已成功安装并可以工作了。</li>\n<li><img alt=\"image-20250414203108494\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250414203108494.png\"/></li>\n</ul>\n</li>\n<li>\n<p><strong>添加常用 Bucket</strong>:</p>\n<ul>\n<li>\n<p><code>extras</code> Bucket 包含了大量流行的 GUI 软件和非 <code>main</code> Bucket 的常用工具。强烈建议添加：</p>\n<pre><code class=\"language-powershell\">scoop bucket add extras\n</code></pre>\n</li>\n<li>\n<p><strong>💡 提示</strong>: 添加 Bucket 需要从 GitHub 克隆仓库，如果网络慢请耐心等待。如果失败，检查网络或代理设置。</p>\n</li>\n<li>\n<p><strong>重要</strong>: Scoop 依赖 <code>git</code> 来管理 Buckets 。如果你的系统没有安装 <code>git</code>，Scoop 在添加第一个 Bucket 时通常会提示并自动尝试安装。你也可以手动安装：<code>scoop install git</code>。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>添加其他常用 Buckets (可选)</strong>:</p>\n<ul>\n<li>\n根据你的需要，可以添加更多社区维护的 Buckets 。例如：<ul>\n<li>安装各种 Java 版本：<code>scoop bucket add java</code></li>\n<li>安装 Nerd Fonts (美化终端字体)：<code>scoop bucket add nerd-fonts</code></li>\n<li>安装特定旧版本的软件：<code>scoop bucket add versions</code></li>\n<li>安装非便携应用 (需要特殊处理)：<code>scoop bucket add nonportable</code> (安装里面的软件可能需要管理员权限)</li>\n</ul>\n</li>\n<li>\n<strong>去哪里找更多 Buckets ？</strong><ul>\n<li>官方维护的 Bucket 列表：<a href=\"https://github.com/ScoopInstaller\" rel=\"nofollow\">https://github.com/ScoopInstaller</a></li>\n<li>社区维护的已知 Buckets 列表：可以在网上搜索 \"known scoop buckets\" 或 查看 <a href=\"https://rasa.github.io/scoop-directory/\" rel=\"nofollow\">这个非官方索引</a> (但请注意，首选官方或广泛使用的 Bucket)。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>注意事项</strong>:</p>\n<ul>\n<li>添加 Bucket 时需要良好的网络连接。</li>\n<li>如果命令出错，请检查 Bucket 名称是否拼写正确。</li>\n<li>有时网络波动会导致添加失败，重试一次可能就好了。</li>\n</ul>\n</li>\n</ol>\n<h4><strong>步骤三：用 Scoop 安装你的常用软件</strong></h4>\n<p>  激动人心的时刻到了！现在你可以像逛超市一样，用简单的命令安装软件了。</p>\n<ol>\n<li>\n<p><strong>搜索软件</strong>:</p>\n<ul>\n<li>\n<p>不确定软件是否在已添加的 Buckets 里？用 <code>search</code> 命令！</p>\n<pre><code class=\"language-powershell\">scoop search &lt;你想搜索的软件名或关键词&gt;\n# 例如: 搜索 python 相关\nscoop search python\n</code></pre>\n</li>\n<li>\n<p>Scoop 会列出匹配的软件包及其所在的 Bucket 。</p>\n</li>\n<li>\n<p><strong>更方便的搜索</strong>: 你也可以直接访问 Scoop 的官方网站 <a href=\"https://scoop.sh/\" rel=\"nofollow\">https://scoop.sh/</a>，它提供了一个图形化的搜索界面。注意取消勾选页面上的 \"main\" 筛选器可以搜索到 <code>extras</code> 等其他 Bucket 中的包。</p>\n</li>\n<li>\n<p><img alt=\"image-20250414203635310\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250414203635310.png\"/></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>安装单个软件</strong>:</p>\n<ul>\n<li>\n<p>找到你需要的软件名后，使用 <code>install</code> 命令安装。</p>\n<pre><code class=\"language-powershell\"># 安装 OpenJDK (来自 java bucket)\nscoop install openjdk\n# 安装 Git (来自 main bucket)\nscoop install git\n# 安装 7zip (来自 main bucket)\nscoop install 7zip\n# 安装 VS Code (来自 extras bucket)\nscoop install vscode\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>一次安装多个软件</strong>:</p>\n<ul>\n<li>\n<p>提高效率，一次性安装多个！用空格隔开软件名即可。</p>\n<pre><code class=\"language-powershell\">scoop install nodejs python mysql nginx putty everything powertoys\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>(可选) 全局安装</strong>:</p>\n<ul>\n<li>\n<p>默认情况下，Scoop 安装的软件只对当前用户可用，并且安装在用户目录下的 <code>scoop</code> 文件夹中（如 <code>C:\\Users\\你的用户名\\scoop\\apps</code>）。这通常不需要管理员权限，也更干净、便携。</p>\n</li>\n<li>\n<p>如果你希望软件对系统上的所有用户都可用，可以使用 <code>-g</code> 或 <code>--global</code> 参数。这<strong>需要管理员权限</strong>运行 PowerShell ，并且软件会被安装到全局路径（默认为 <code>C:\\ProgramData\\scoop</code>，或你通过 <code>$env:SCOOP_GLOBAL</code> 指定的路径）。</p>\n<pre><code class=\"language-powershell\"># 全局安装 OpenJDK (需要管理员权限运行 PowerShell)\nscoop install openjdk --global\n</code></pre>\n</li>\n<li>\n<p><strong>💡 建议</strong>: 除非你明确知道需要全局安装，否则<strong>优先使用默认的用户模式安装</strong>，这更能体现 Scoop 的优势。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>预期结果</strong>:</p>\n<ul>\n<li>Scoop 会自动下载软件包、解压、处理依赖，并将可执行文件通过 \"shim\" 机制添加到你的 <code>PATH</code> 中。安装完成后，你通常可以直接在<strong>新的</strong> PowerShell 或 CMD 窗口中使用该软件的命令。</li>\n<li>例如，安装 <code>openjdk</code> 后，打开一个新的 PowerShell 窗口，输入 <code>java -version</code>，应该能看到 Java 的版本信息。</li>\n</ul>\n</li>\n<li>\n<p><strong>💡 Scoop 的魔法：Shim 是什么？</strong></p>\n<ul>\n<li>Scoop 的一个核心优势是<strong>不污染系统</strong>的 <code>PATH</code> 环境变量。它怎么做到的？答案是 \"Shim\" (垫片)。</li>\n<li>当你安装一个软件（比如 <code>git</code>）后，Scoop 不会把 <code>git.exe</code> 所在的整个目录加到系统 <code>PATH</code>。它只做一件事：在 <code>~/scoop/shims</code> 目录下（这个目录在安装 Scoop 时会被自动添加到用户 <code>PATH</code> 中）创建一个名为 <code>git.exe</code> 的<strong>极小的</strong>可执行文件 (shim)。</li>\n<li>当你运行 <code>git</code> 命令时，系统在 <code>PATH</code> 里找到了 <code>~/scoop/shims/git.exe</code>。这个 shim 文件知道真正 <code>git.exe</code> 的位置（比如在 <code>~/scoop/apps/git/current/bin/git.exe</code>），然后它会启动真正的 <code>git.exe</code>。</li>\n<li>这样做的好处是：你的 <code>PATH</code> 变量非常干净，只增加了一个 <code>shims</code> 目录。卸载软件时，只需删除对应的 shim 和软件目录，对系统几乎没有影响。对于 GUI 程序，Scoop 会在开始菜单创建一个 \"Scoop Apps\" 文件夹存放快捷方式。</li>\n</ul>\n</li>\n</ol>\n<h4><strong>步骤四：软件的更新与管理</strong></h4>\n<p>  安装只是开始，Scoop 还能帮你轻松管理已安装的软件。</p>\n<p><img alt=\"image-20250416113254357\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://img1.wangwangit.com/wangwangit/image/refs/heads/master/img1/image-20250416113254357.png\"/></p>\n<ol>\n<li>\n<p><strong>检查更新</strong>:</p>\n<ul>\n<li>\n<p>想知道哪些软件有新版本了？</p>\n<pre><code class=\"language-powershell\"># 检查 Scoop 自身和所有 Buckets 的更新，并列出可更新的软件\nscoop status\n# 或者直接更新 Scoop 自身和 Buckets 的信息\nscoop update\n</code></pre>\n</li>\n<li>\n<p><code>scoop update</code> 首先会更新 Scoop 自身和所有已添加的 Bucket （相当于对每个 Bucket 的 Git 仓库执行 <code>git pull</code>），获取最新的软件包清单。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>更新所有软件</strong>:</p>\n<ul>\n<li>\n<p>一键更新所有已安装且有新版本的软件：</p>\n<pre><code class=\"language-powershell\">scoop update *\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>更新指定软件</strong>:</p>\n<ul>\n<li>\n<p>只想更新某个特定的软件？</p>\n<pre><code class=\"language-powershell\">scoop update &lt;软件名&gt;\n# 例如: 更新 nodejs\nscoop update nodejs\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>查看已安装列表</strong>:</p>\n<ul>\n<li>\n<p>想看看自己都装了些什么？</p>\n<pre><code class=\"language-powershell\">scoop list\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>卸载软件</strong>:</p>\n<ul>\n<li>\n<p>不再需要某个软件了？干干净净地移除它！</p>\n<pre><code class=\"language-powershell\">scoop uninstall &lt;软件名&gt;\n# 例如: 卸载 mysql\nscoop uninstall mysql\n</code></pre>\n</li>\n<li>\n<p>Scoop 会删除软件文件和对应的 shim/快捷方式，非常彻底。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>查看软件信息</strong>:</p>\n<ul>\n<li>\n<p>想了解某个已安装或可用软件的详细信息（版本、来源、依赖等）？</p>\n<pre><code class=\"language-powershell\">scoop info &lt;软件名&gt;\n# 例如: 查看 git 的信息\nscoop info git\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>回退到旧版本</strong>:</p>\n<ul>\n<li>\n<p>更新后发现新版本有 Bug ？可以尝试回退。</p>\n<pre><code class=\"language-powershell\"># 先查看可用版本\nscoop info &lt;软件名&gt;\n# 回退到指定版本 (例如回退 git 到 2.30.0.windows.1)\nscoop reset &lt;软件名&gt;@&lt;版本号&gt;\nscoop reset git@2.30.0.windows.1\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>其他常用命令</strong>:</p>\n<ul>\n<li><code>scoop cleanup *</code> : 清理所有软件的旧版本，释放磁盘空间。</li>\n<li><code>scoop cache rm *</code> : 清除下载缓存。</li>\n<li><code>scoop home &lt;软件名&gt;</code> : 在浏览器中打开软件的官方主页。</li>\n<li><code>scoop which &lt;命令名&gt;</code> : 显示某个命令对应的可执行文件的实际路径 (类似 Linux 的 <code>which</code>)。</li>\n</ul>\n</li>\n</ol>\n<h3>🤔 <strong>常见问题解决 (FAQ)</strong></h3>\n<h4><strong>问题 1：Scoop 安装或添加 Bucket 时提示网络错误/超时？</strong></h4>\n<ul>\n<li>\n<p><strong>原因分析</strong>:</p>\n<ul>\n<li>国内访问 GitHub 网络不稳定。</li>\n<li>公司或学校网络限制。</li>\n<li>系统代理设置未被 PowerShell 正确识别。</li>\n</ul>\n</li>\n<li>\n<p><strong>解决方案</strong>:</p>\n<ol>\n<li>\n<p><strong>检查网络</strong>: 确保你的基本网络连接是通的。</p>\n</li>\n<li>\n<p><strong>配置代理</strong>: 如果你有可用的 HTTP 代理，可以为 Scoop 单独设置：</p>\n<pre><code class=\"language-powershell\"># 设置代理 (将 'http://代理服务器地址:端口' 替换为你的实际代理)\nscoop config proxy http://代理服务器地址:端口\n# 查看当前代理设置\nscoop config proxy\n# 取消代理\nscoop config proxy none\n</code></pre>\n<p><em>注意：这只为 Scoop 设置代理，不影响系统其他应用。</em></p>\n</li>\n<li>\n<p><strong>使用网络加速工具</strong>: 尝试使用 Watt Toolkit (原 Steam++) 或其他类似工具进行 GitHub 加速。</p>\n</li>\n<li>\n<p><strong>手动下载安装脚本</strong>:</p>\n<ul>\n<li>在浏览器中访问 <code><a href=\"https://get.scoop.sh\" rel=\"nofollow\">https://get.scoop.sh</a></code>。</li>\n<li>将页面内容<strong>完整复制</strong>并保存为一个名为 <code>install.ps1</code> 的文件（例如保存在桌面）。</li>\n<li>在 PowerShell 中，切换到该文件所在的目录（例如 <code>cd ~/Desktop</code>），然后运行：<code>.\\install.ps1</code> (注意前面的 <code>.\\</code>)。如果之前修改了安装路径的环境变量，这里也需要先设置好。</li>\n</ul>\n</li>\n<li>\n<p><strong>更换 DNS</strong>: 尝试将系统的 DNS 服务器更换为更可靠的公共 DNS ，如 <code>1.1.1.1</code> (Cloudflare) 或 <code>8.8.8.8</code> (Google)。</p>\n</li>\n</ol>\n</li>\n</ul>\n<h4><strong>问题 2：安装软件后，在命令行中输入命令提示“不是内部或外部命令”？</strong></h4>\n<ul>\n<li>\n<strong>原因分析</strong>:<ul>\n<li><code>~/scoop/shims</code> 目录没有被正确添加到系统的 PATH 环境变量中。</li>\n<li>你没有<strong>重新打开</strong>一个新的 PowerShell 或 CMD 窗口（环境变量更改通常需要新会话才能生效）。</li>\n<li>安装的是 GUI 程序，它可能没有提供命令行接口。</li>\n<li>极少数情况下，shim 创建失败。</li>\n</ul>\n</li>\n<li>\n<strong>解决方案</strong>:<ol>\n<li><strong>重启终端</strong>: <strong>最常见的原因！</strong> 关闭当前的 PowerShell/CMD 窗口，然后重新打开一个新的窗口再试。</li>\n<li>\n<strong>检查 PATH 环境变量</strong>:<ul>\n<li>在 PowerShell 中输入 <code>$env:Path</code> 查看当前 PATH 。确认其中是否包含类似 <code>C:\\Users\\你的用户名\\scoop\\shims</code> 的路径。</li>\n<li>如果没有，尝试运行 <code>scoop fix path</code> 看是否能自动修复。</li>\n<li>如果还不行，可能需要手动添加：右键“此电脑” -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 在“用户变量”或“系统变量”中找到 <code>Path</code> -&gt; 编辑 -&gt; 新建 -&gt; 添加 <code>C:\\Users\\你的用户名\\scoop\\shims</code> (请替换为你的实际路径) -&gt; 一路确定。然后<strong>重启终端</strong>。</li>\n</ul>\n</li>\n<li><strong>确认安装</strong>: 使用 <code>scoop list</code> 确认软件是否真的安装成功了。</li>\n<li><strong>检查软件类型</strong>: 确认你安装的是命令行工具还是纯 GUI 应用。GUI 应用通常通过开始菜单的 \"Scoop Apps\" 文件夹启动。</li>\n<li><strong>检查 Shim</strong>: 使用 <code>scoop which &lt;命令名&gt;</code> 看看是否能找到对应的 shim 文件。</li>\n</ol>\n</li>\n</ul>\n<h4><strong>问题 3：执行 <code>Set-ExecutionPolicy</code> 时出错或无效？</strong></h4>\n<ul>\n<li>\n<strong>原因分析</strong>:<ul>\n<li>权限不足 (尤其是在尝试更改 <code>LocalMachine</code> 范围时)。</li>\n<li>组策略限制 (在企业环境中常见)。</li>\n</ul>\n</li>\n<li>\n<strong>解决方案</strong>:<ol>\n<li><strong>使用管理员权限</strong>: 确保你是以管理员身份运行 PowerShell 。</li>\n<li><strong>检查作用域</strong>: 确认你使用的是 <code>-Scope CurrentUser</code>。更改 <code>LocalMachine</code> 作用域通常需要更高的权限，并且会影响所有用户。</li>\n<li><strong>检查组策略</strong>: 如果你在公司电脑上，可能需要联系 IT 管理员，确认是否有组策略限制了执行策略的更改。</li>\n<li><strong>了解策略级别</strong>: PowerShell 执行策略有多个作用域（ MachinePolicy, UserPolicy, Process, CurrentUser, LocalMachine ），它们有优先级。可以使用 <code>Get-ExecutionPolicy -List</code> 查看各作用域的设置。<code>CurrentUser</code> 通常能覆盖 <code>LocalMachine</code> (除非有策略限制)。</li>\n</ol>\n</li>\n</ul>\n<h4><strong>问题 4：杀毒软件报警或阻止 Scoop/软件安装？</strong></h4>\n<ul>\n<li><strong>原因分析</strong>: Scoop 的工作方式（下载、解压、创建 shim ）有时会被某些敏感的杀毒软件误判为可疑行为。</li>\n<li>\n<strong>解决方案</strong>:<ol>\n<li><strong>添加排除项</strong>: 在你的杀毒软件设置中，将 Scoop 的安装目录 (<code>C:\\Users\\你的用户名\\scoop</code> 或你自定义的路径) 添加到信任区域或排除列表。</li>\n<li><strong>临时禁用</strong>: 在安装特定软件时，可以考虑临时禁用杀毒软件的实时防护，安装完成后再开启（请确保你信任要安装的软件来源！）。</li>\n</ol>\n</li>\n</ul>\n<h3>💡 <strong>进阶技巧：让 Scoop 更得心应手</strong></h3>\n<ol>\n<li>\n<p><strong>创建自己的 Bucket</strong>:</p>\n<ul>\n<li>如果你有一些内部工具或者 Scoop 官方/社区没有收录的软件，可以创建自己的 Git 仓库作为 Bucket ，编写 JSON 格式的 Manifest 文件来描述如何安装它们。这对于团队共享工具配置非常有用。学习如何编写 Manifest: <a href=\"https://github.com/ScoopInstaller/Scoop/wiki/App-Manifests\" rel=\"nofollow\">Scoop Wiki</a>。</li>\n</ul>\n</li>\n<li>\n<p><strong>一键重装脚本</strong>:</p>\n<ul>\n<li>\n<p>将你所有需要安装的常用软件整理到一个 PowerShell 脚本文件中（例如 <code>setup-my-env.ps1</code>）：</p>\n<pre><code class=\"language-powershell\"># setup-my-env.ps1\n# 添加需要的 Buckets\nscoop bucket add extras\nscoop bucket add java\nscoop bucket add nerd-fonts\n\n# 安装常用工具\nscoop install git python nodejs openjdk maven gradle vscode 7zip everything powertoys curl wget grep sed bandizip # ... 添加你需要的其他软件\n\n# 清理旧版本\nscoop cleanup *\n\nWrite-Host \"环境配置完成！\"\n</code></pre>\n</li>\n<li>\n<p>每次重装系统后，只需运行 Scoop 安装命令，然后执行这个脚本 <code>.\\setup-my-env.ps1</code>，即可快速恢复你的开发环境！</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>极致便携性</strong>:</p>\n<ul>\n<li>Scoop 的一大魅力在于其<strong>便携性</strong>。默认情况下，所有软件都安装在 <code>~/scoop</code> 目录下。这意味着，理论上你可以将整个 <code>scoop</code> 文件夹<strong>复制</strong>到另一台电脑的相同用户目录下（或者通过环境变量指定路径），然后简单运行一些 Scoop 命令（如 <code>scoop reset *</code> 或 <code>scoop fix path</code>）来修复路径和 shim ，就能在新电脑上获得几乎一致的环境！</li>\n</ul>\n</li>\n<li>\n<p><strong>与其他包管理器的比较 (简单)</strong>:</p>\n<ul>\n<li><strong>Scoop</strong>: 默认用户级安装、无需管理员权限、干净不污染 PATH 、主要面向开发者和命令行工具、便携性好、仓库相对 Chocolatey 较小。</li>\n<li><strong>Chocolatey (Choco)</strong>: 历史悠久、软件包仓库<strong>非常庞大</strong> (覆盖面广)、通常需要管理员权限、安装方式更接近传统 Windows 安装（可能安装到 Program Files ）、有付费版提供高级功能。</li>\n<li><strong>Winget</strong>: 微软官方出品、内置于新版 Windows 、可以管理来自 Microsoft Store 和其社区仓库的应用、更新机制有时能同步非 Winget 安装的应用、更偏向通用软件管理。</li>\n<li><strong>可以共存吗？</strong> 可以！很多人会同时使用它们，根据软件可用性和个人偏好选择。例如，用 Scoop 管理开发工具，用 Winget 或 Chocolatey 管理大型 GUI 应用。</li>\n</ul>\n</li>\n</ol>\n<h3>🎉 <strong>总结：拥抱 Scoop ，告别繁琐！</strong></h3>\n<p>  恭喜你！通过这篇（希望是）生动有趣的教程，你已经掌握了使用 Scoop 在 Windows 上高效、整洁地管理软件的秘诀。Scoop 以其简洁的命令行操作、出色的便携性、对系统环境的“零污染”以及强大的脚本能力，正成为越来越多 Windows 用户（尤其是开发者）的装机必备神器。</p>\n<p>  从现在开始，忘掉那些繁琐的手动下载、安装、配置吧！让 Scoop 成为你得力的助手，把宝贵的时间投入到真正重要的事情上——无论是编码、创作，还是享受生活。</p>\n<hr/>\n<p><strong>💬 交流时间！</strong></p>\n<p>  你觉得 Scoop 怎么样？在你的使用过程中，遇到了哪些有趣的问题或独到的技巧？你最喜欢用 Scoop 安装哪些软件？欢迎在评论区分享你的经验和看法，或者提出你的疑问。让我们一起交流，让 Windows 环境配置变得前所未有的简单和愉快！</p>\n<p>  <strong>如果觉得这篇文章对你有帮助，别忘了点赞、收藏，并分享给你身边还在被软件安装折磨的朋友们！</strong> 😉</p>\n", "last_modified": 1744850874, "replies": 63, "id": 1126032}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1695370146", "name": "career", "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1695370146", "title": "职场话题", "url": "https://www.v2ex.com/go/career", "topics": 19974, "footer": "", "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。", "title_alternative": "Career", "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1695370146", "stars": 3426, "aliases": [], "root": false, "id": 770, "parent_node_name": "work"}, "member": {"id": 360488, "username": "yibo2018", "url": "https://www.v2ex.com/u/yibo2018", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/db750e254d6526d36acc480a73f172b7?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/db750e254d6526d36acc480a73f172b7?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/db750e254d6526d36acc480a73f172b7?s=73&d=retro", "created": 1541151393, "last_modified": 1744818468}, "last_reply_by": "tpeng9240", "last_touched": 1744873119, "title": "程序员深入了解保险行业一年多，带出的人生感悟", "url": "https://www.v2ex.com/t/1126009", "created": 1744818664, "deleted": 0, "content": "今天早上开会，我本来像往常一样，听着大家发言，嘴上点头，心里其实已经在想下一个任务了。\r\n远程会议，我以为不会点到我，结果，团队长突然叫到了我的名字。\r\n\r\n让我讲讲最近转介绍的客户。\r\n\r\n我愣住了。这个客户我原本已经成交，但因为我没全情跟进，最后单子没了。\r\n我支支吾吾地解释完，团队长只问了我一句：\r\n\r\n> ## “如果这个客户是买几百万保额的单子，你还会这样处理吗？”\r\n\r\n我下意识说：“当然不会。”\r\n\r\n然后他讲了几句话，突然让我有点想哭：\r\n\r\n> ## “不管单子大小，都是一份社会给你的责任。也许你现在的漫不经心，会让一个家庭在未来少了二十万。而这二十万，很可能因为父母的病、老公的失败投资而刚好用上，但到时候，他们连一点缓冲的底气都没有。”\r\n\r\n那一刻我突然明白了，我过去很多时候，其实根本没有把“保险”当成一份责任，只把它当成了“工作”。\r\n\r\n但真正让我坚持下去的，不该是提成，而是：\r\n\r\n> ## “我希望未来有个孩子，在大学报到的那天，是因为我曾经的一点努力，才有了一笔 20 万的学费。”\r\n> ## “我希望有个家庭，在父母重病那一年，是因为我没有放弃那张小单子，才撑过了最难的时光。”\r\n\r\n这，才是我重新写下这篇内容的原因。\r\n\r\n于是，这份保险工作，对我来说，已经不再只是一个谋生的职业，而是一种“我作为一个人，是否对他人负责任”的行动。\r\n\r\n我开始意识到：\r\n这不仅是为客户提供保障方案，而是我能否有起心动念，去帮助我身边的人，活得更安全，更有底气。\r\n\r\n但这也正是我长期的矛盾来源。\r\n\r\n我们被教育要尊重他人的选择，要“不过度干涉”，甚至有人说：“别去染指别人的‘业’。”\r\n——谁的人生不是要自己承担呢？\r\n\r\n可我这一年多在保险行业的亲历让我看见：\r\n无数人是“被动入保”的，漫不经心、半推半就、甚至当时有点排斥。\r\n但当有一天，病魔真的降临，一笔又一笔理赔金从天而降，甚至后续保费全部豁免，\r\n就在那个时候——\r\n那个平常话不多的客户，突然哽咽；\r\n那个原本抗拒签字的丈夫，突然在电话里沉默很久，只说了句：“谢谢。”\r\n\r\n那一刻，客户的生命变得更厚重了，而我的工作也不再普通。\r\n我知道，我做了一件对得起自己的事。\r\n\r\n于是我也想，能不能让更多人，在还没“后悔之前”，就听到一些该听的话。\r\n\r\n当然，这不容易。\r\n\r\n“道不同，不相为谋。”\r\n要改变一个人的意识，是极其困难、甚至几乎不可能的事。\r\n\r\n但我们保险从业者，恰恰就是在做这种近乎“不可能”的事。\r\n我们就像在沙滩上拣贝壳的人，努力把一颗颗被潮水推回来的贝壳重新丢回海里。\r\n\r\n这也让我开始重新思考一句行业内的“黄金法则”：\r\n> ## 客户=有钱 + 有意识 + 有需求。\r\n\r\n很多人说，只服务这种“三有”客户就好，省力、省心、也更高效。\r\n\r\n但我也常常问自己：\r\n那些今天突然“意识到”保险重要性的人，\r\n不正是因为身边有人“用上了”保险？\r\n他们的意识、他们的需求，不也恰恰是在被身边的真实经历点燃的吗？\r\n\r\n所以有时候，我们不只是卖保险的人，\r\n我们是那颗火星，是让一盏灯点亮的引子。\r\n\r\n\r\n如果你看到这里，那我只想说，谢谢你。\r\n我也不知道我能不能坚持一直写下去，但我会尽量真实地，把我看到的那些故事和思考写出来。\r\n希望它对你有一点点用，就够了。", "content_rendered": "<p>今天早上开会，我本来像往常一样，听着大家发言，嘴上点头，心里其实已经在想下一个任务了。\n远程会议，我以为不会点到我，结果，团队长突然叫到了我的名字。</p>\n<p>让我讲讲最近转介绍的客户。</p>\n<p>我愣住了。这个客户我原本已经成交，但因为我没全情跟进，最后单子没了。\n我支支吾吾地解释完，团队长只问了我一句：</p>\n<blockquote>\n<h2>“如果这个客户是买几百万保额的单子，你还会这样处理吗？”</h2>\n</blockquote>\n<p>我下意识说：“当然不会。”</p>\n<p>然后他讲了几句话，突然让我有点想哭：</p>\n<blockquote>\n<h2>“不管单子大小，都是一份社会给你的责任。也许你现在的漫不经心，会让一个家庭在未来少了二十万。而这二十万，很可能因为父母的病、老公的失败投资而刚好用上，但到时候，他们连一点缓冲的底气都没有。”</h2>\n</blockquote>\n<p>那一刻我突然明白了，我过去很多时候，其实根本没有把“保险”当成一份责任，只把它当成了“工作”。</p>\n<p>但真正让我坚持下去的，不该是提成，而是：</p>\n<blockquote>\n<h2>“我希望未来有个孩子，在大学报到的那天，是因为我曾经的一点努力，才有了一笔 20 万的学费。”</h2>\n<h2>“我希望有个家庭，在父母重病那一年，是因为我没有放弃那张小单子，才撑过了最难的时光。”</h2>\n</blockquote>\n<p>这，才是我重新写下这篇内容的原因。</p>\n<p>于是，这份保险工作，对我来说，已经不再只是一个谋生的职业，而是一种“我作为一个人，是否对他人负责任”的行动。</p>\n<p>我开始意识到：\n这不仅是为客户提供保障方案，而是我能否有起心动念，去帮助我身边的人，活得更安全，更有底气。</p>\n<p>但这也正是我长期的矛盾来源。</p>\n<p>我们被教育要尊重他人的选择，要“不过度干涉”，甚至有人说：“别去染指别人的‘业’。”\n——谁的人生不是要自己承担呢？</p>\n<p>可我这一年多在保险行业的亲历让我看见：\n无数人是“被动入保”的，漫不经心、半推半就、甚至当时有点排斥。\n但当有一天，病魔真的降临，一笔又一笔理赔金从天而降，甚至后续保费全部豁免，\n就在那个时候——\n那个平常话不多的客户，突然哽咽；\n那个原本抗拒签字的丈夫，突然在电话里沉默很久，只说了句：“谢谢。”</p>\n<p>那一刻，客户的生命变得更厚重了，而我的工作也不再普通。\n我知道，我做了一件对得起自己的事。</p>\n<p>于是我也想，能不能让更多人，在还没“后悔之前”，就听到一些该听的话。</p>\n<p>当然，这不容易。</p>\n<p>“道不同，不相为谋。”\n要改变一个人的意识，是极其困难、甚至几乎不可能的事。</p>\n<p>但我们保险从业者，恰恰就是在做这种近乎“不可能”的事。\n我们就像在沙滩上拣贝壳的人，努力把一颗颗被潮水推回来的贝壳重新丢回海里。</p>\n<p>这也让我开始重新思考一句行业内的“黄金法则”：</p>\n<blockquote>\n<h2>客户=有钱 + 有意识 + 有需求。</h2>\n</blockquote>\n<p>很多人说，只服务这种“三有”客户就好，省力、省心、也更高效。</p>\n<p>但我也常常问自己：\n那些今天突然“意识到”保险重要性的人，\n不正是因为身边有人“用上了”保险？\n他们的意识、他们的需求，不也恰恰是在被身边的真实经历点燃的吗？</p>\n<p>所以有时候，我们不只是卖保险的人，\n我们是那颗火星，是让一盏灯点亮的引子。</p>\n<p>如果你看到这里，那我只想说，谢谢你。\n我也不知道我能不能坚持一直写下去，但我会尽量真实地，把我看到的那些故事和思考写出来。\n希望它对你有一点点用，就够了。</p>\n", "last_modified": 1744842845, "replies": 59, "id": 1126009}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1727584731", "name": "share", "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1727584731", "title": "分享发现", "url": "https://www.v2ex.com/go/share", "topics": 43338, "footer": "", "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。", "title_alternative": "Share", "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1727584731", "stars": 6034, "aliases": [], "root": false, "id": 16, "parent_node_name": "v2ex"}, "member": {"id": 314786, "username": "nananqujava", "url": "https://www.v2ex.com/u/nananqujava", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/6b20eecbba98f121270fa56f0886b2f4?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/6b20eecbba98f121270fa56f0886b2f4?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/6b20eecbba98f121270fa56f0886b2f4?s=73&d=retro", "created": 1525680333, "last_modified": 1672150403}, "last_reply_by": "yukiir", "last_touched": 1744873469, "title": "千万别用夜间模式, 不管什么设备", "url": "https://www.v2ex.com/t/1126131", "created": 1744862063, "deleted": 0, "content": "之前为了护眼, 手机和 WIN11 电脑都设置了夜间模式, 显示器也是阅读模式, 觉得黄黄的对眼睛比较好\r\n\r\n由于我一天用电脑时间比较长行 8-12 小时左右,  长期用下来,  感觉眼睛非常疲惫, 全身也很累,  睡觉也没法恢复,  前几天一度频频冒冷汗+非常疲惫+心前区很不舒服, 感觉自己要死了(可能是猝死前兆)\r\n\r\n总结了下原因应该是  睡眠不足+长时间用电脑没休息,  后来调整了下作息, 外加把夜间模式和护眼模式关闭了, 感觉立竿见影,  没那么累了,  而且眼部也没那么疲劳了", "content_rendered": "之前为了护眼, 手机和 WIN11 电脑都设置了夜间模式, 显示器也是阅读模式, 觉得黄黄的对眼睛比较好<br /><br />由于我一天用电脑时间比较长行 8-12 小时左右,  长期用下来,  感觉眼睛非常疲惫, 全身也很累,  睡觉也没法恢复,  前几天一度频频冒冷汗+非常疲惫+心前区很不舒服, 感觉自己要死了(可能是猝死前兆)<br /><br />总结了下原因应该是  睡眠不足+长时间用电脑没休息,  后来调整了下作息, 外加把夜间模式和护眼模式关闭了, 感觉立竿见影,  没那么累了,  而且眼部也没那么疲劳了", "last_modified": 1744862063, "replies": 58, "id": 1126131}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1660301119", "name": "create", "avatar_normal": "https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1660301119", "title": "分享创造", "url": "https://www.v2ex.com/go/create", "topics": 27172, "footer": "", "header": "欢迎你在这里发布自己的最新作品！", "title_alternative": "Create", "avatar_mini": "https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1660301119", "stars": 5657, "aliases": [], "root": false, "id": 17, "parent_node_name": "geek"}, "member": {"id": 516966, "username": "wwwarriorrr", "url": "https://www.v2ex.com/u/wwwarriorrr", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/gravatar/8b6540e663cfacab595bf24f6af197c2?s=24&d=retro", "avatar_normal": "https://cdn.v2ex.com/gravatar/8b6540e663cfacab595bf24f6af197c2?s=48&d=retro", "avatar_large": "https://cdn.v2ex.com/gravatar/8b6540e663cfacab595bf24f6af197c2?s=73&d=retro", "created": 1605084441, "last_modified": 1744799950}, "last_reply_by": "Aixtuz", "last_touched": 1744869251, "title": "我写了一个帮助买房的 app", "url": "https://www.v2ex.com/t/1125967", "created": 1744802134, "deleted": 0, "content": "# App 名字\r\n《看房助手》，目前仅在苹果 AppStore 上架，无广告，售价 1 元，50 个推广码贴下面了，感谢各位大佬帮忙试用！\r\n希望多提出意见和建议～\r\n\r\n[AppStore 链接]( https://apple.co/42jI7CU)\r\n\r\n\r\n# 背景\r\nApp 的想法起源于好几年前买房的经历。\r\n当时可以说是涉世未深(too young, too ...)，现在回想起来，感觉整个买房的过程都被中介牵着鼻子走，\r\n例如看的房子不够多、决定太草率太心急、谈判也被卖家压制🤦、房子本身的一些缺点当时没看出来等等。\r\n\r\n只怪自己没有做足功课，而且对价格太不够计较(不然可能买一个稍微大一些的房子)。\r\n当时看中介手中拿着圆珠笔，在一个 A4 纸上写写画画帮我算税费，感觉命运都被别人掌控了，很难受，买个东西应该付多少钱我都不知道。。\r\n\r\n后来自己慢慢搞懂了很多房地产概念，也会自己算税费了，就想写个 App 帮助第一次买房的可能像我一样清澈而愚蠢的年轻人吧。\r\n\r\n# 主要功能\r\n1. 看房本。记录看过的房子，自己打标签\r\n2. 计算器。算各种税费，支持新房、二手房、公寓等\r\n3. 房词典。收集的一些房地产名词解释，基本上是用自己的话把百科内容说一下，有时加一点个人理解\r\n\r\n# 技术栈\r\nFlutter\r\n\r\n# 适合人群\r\n- 计划买房的朋友\r\n- 房产中介，算税费应该能用上（可能\r\n\r\n# 推广码 50 个\r\n```text\r\nFWEPK66H4KEP\r\nKMP49W4M77WW\r\nHAWPYJRX3N7K\r\n364RPR93FXFN\r\nN9XE67HAMFFK\r\nTK9RRW3E9WMT\r\nARTHHJM7AMM7\r\n6LLY6EWFF67L\r\nH3HH4FFYJR7E\r\n476E9664AYW6\r\nXYPJTMAX96TF\r\nXJHFWKERHWER\r\nPYWA3RH6XYPM\r\nNTEEFAXPJ37A\r\nLN476NYLM444\r\nEATXXW34F64Y\r\nJFL9J439HM7T\r\n9P6M96KEH3R9\r\nP7KFF3AE9TY6\r\nYFWNMMN6TYMH\r\nYNL7MNLY9HY9\r\n4N4P9HE66E7P\r\nKP4ALFLT9WY3\r\n33L6JKNRER4T\r\n4NJPA6JYK69X\r\n6JEMN3PANYKX\r\n79RX97X676KT\r\nPPFPJ67L3M3N\r\nPETKN6ALL9J7\r\nJ9RKTKXYHH69\r\nMWTRPAJXFJPH\r\nR6JHWYM9HXN6\r\nA9R44HWLNFJW\r\nTLEWEMRX9EP9\r\nTHHR73E6YJ3T\r\nLXLMFM76FNJE\r\nEA6FFH3XMYY4\r\nTLRA4JFJN6KM\r\nXWHA6RE4XRL9\r\nLAWRAHKJL7YM\r\nAAEHJ4E6WJ3T\r\nYTHEFFE9T93N\r\nR9XK9JLMWR79\r\nNEHPJTJJ4AWR\r\nTH3K7YK6Y6WJ\r\nR6PHA6NFA9WR\r\nA7E4NAWMEMAE\r\nH3HLYLPT39EM\r\nKAJYYJXJNM9E\r\nXRWTKTWPKRRR\r\n```", "content_rendered": "<h1>App 名字</h1>\n<p>《看房助手》，目前仅在苹果 AppStore 上架，无广告，售价 1 元，50 个推广码贴下面了，感谢各位大佬帮忙试用！\n希望多提出意见和建议～</p>\n<p><a href=\"https://apple.co/42jI7CU\" rel=\"nofollow\">AppStore 链接</a></p>\n<h1>背景</h1>\n<p>App 的想法起源于好几年前买房的经历。\n当时可以说是涉世未深(too young, too ...)，现在回想起来，感觉整个买房的过程都被中介牵着鼻子走，\n例如看的房子不够多、决定太草率太心急、谈判也被卖家压制🤦、房子本身的一些缺点当时没看出来等等。</p>\n<p>只怪自己没有做足功课，而且对价格太不够计较(不然可能买一个稍微大一些的房子)。\n当时看中介手中拿着圆珠笔，在一个 A4 纸上写写画画帮我算税费，感觉命运都被别人掌控了，很难受，买个东西应该付多少钱我都不知道。。</p>\n<p>后来自己慢慢搞懂了很多房地产概念，也会自己算税费了，就想写个 App 帮助第一次买房的可能像我一样清澈而愚蠢的年轻人吧。</p>\n<h1>主要功能</h1>\n<ol>\n<li>看房本。记录看过的房子，自己打标签</li>\n<li>计算器。算各种税费，支持新房、二手房、公寓等</li>\n<li>房词典。收集的一些房地产名词解释，基本上是用自己的话把百科内容说一下，有时加一点个人理解</li>\n</ol>\n<h1>技术栈</h1>\n<p>Flutter</p>\n<h1>适合人群</h1>\n<ul>\n<li>计划买房的朋友</li>\n<li>房产中介，算税费应该能用上（可能</li>\n</ul>\n<h1>推广码 50 个</h1>\n<pre><code class=\"language-text\">FWEPK66H4KEP\nKMP49W4M77WW\nHAWPYJRX3N7K\n364RPR93FXFN\nN9XE67HAMFFK\nTK9RRW3E9WMT\nARTHHJM7AMM7\n6LLY6EWFF67L\nH3HH4FFYJR7E\n476E9664AYW6\nXYPJTMAX96TF\nXJHFWKERHWER\nPYWA3RH6XYPM\nNTEEFAXPJ37A\nLN476NYLM444\nEATXXW34F64Y\nJFL9J439HM7T\n9P6M96KEH3R9\nP7KFF3AE9TY6\nYFWNMMN6TYMH\nYNL7MNLY9HY9\n4N4P9HE66E7P\nKP4ALFLT9WY3\n33L6JKNRER4T\n4NJPA6JYK69X\n6JEMN3PANYKX\n79RX97X676KT\nPPFPJ67L3M3N\nPETKN6ALL9J7\nJ9RKTKXYHH69\nMWTRPAJXFJPH\nR6JHWYM9HXN6\nA9R44HWLNFJW\nTLEWEMRX9EP9\nTHHR73E6YJ3T\nLXLMFM76FNJE\nEA6FFH3XMYY4\nTLRA4JFJN6KM\nXWHA6RE4XRL9\nLAWRAHKJL7YM\nAAEHJ4E6WJ3T\nYTHEFFE9T93N\nR9XK9JLMWR79\nNEHPJTJJ4AWR\nTH3K7YK6Y6WJ\nR6PHA6NFA9WR\nA7E4NAWMEMAE\nH3HLYLPT39EM\nKAJYYJXJNM9E\nXRWTKTWPKRRR\n</code></pre>\n", "last_modified": 1744802134, "replies": 57, "id": 1125967}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/a3c6/5c29/108_large.png?m=1691642161", "name": "bb", "avatar_normal": "https://cdn.v2ex.com/navatar/a3c6/5c29/108_normal.png?m=1691642161", "title": "宽带症候群", "url": "https://www.v2ex.com/go/bb", "topics": 17266, "footer": "", "header": "网速很重要。比快更快。", "title_alternative": "Broadband Symptom Complex", "avatar_mini": "https://cdn.v2ex.com/navatar/a3c6/5c29/108_mini.png?m=1691642161", "stars": 7841, "aliases": [], "root": false, "id": 108, "parent_node_name": "geek"}, "member": {"id": 123092, "username": "crc8", "url": "https://www.v2ex.com/u/crc8", "website": "http://www.sztv.ga", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "", "avatar_mini": "https://cdn.v2ex.com/avatar/51ae/7051/123092_mini.png?m=1722924596", "avatar_normal": "https://cdn.v2ex.com/avatar/51ae/7051/123092_normal.png?m=1722924596", "avatar_large": "https://cdn.v2ex.com/avatar/51ae/7051/123092_large.png?m=1722924596", "created": 1434698451, "last_modified": 1722924596}, "last_reply_by": "letwewell", "last_touched": 1744843912, "title": "宽带为啥不能按需报装？", "url": "https://www.v2ex.com/t/1125906", "created": 1744790806, "deleted": 0, "content": "怎么想都不应该是技术问题。\r\n\r\n比如：我只需要 512Kbps 上行、2Mbps 下行，我就报装这个，按这个付费用的家庭宽带。\r\n\r\n你就保证我这个带宽就行啦，也别管我什么 PT 与 PCDN 啦。", "content_rendered": "<p>怎么想都不应该是技术问题。</p>\n<p>比如：我只需要 512Kbps 上行、2Mbps 下行，我就报装这个，按这个付费用的家庭宽带。</p>\n<p>你就保证我这个带宽就行啦，也别管我什么 PT 与 PCDN 啦。</p>\n", "last_modified": 1744790806, "replies": 48, "id": 1125906}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/698d/51a1/111_large.png?m=1648291973", "name": "reading", "avatar_normal": "https://cdn.v2ex.com/navatar/698d/51a1/111_normal.png?m=1648291973", "title": "阅读", "url": "https://www.v2ex.com/go/reading", "topics": 708, "footer": "", "header": "少上网，多读书", "title_alternative": "Reading", "avatar_mini": "https://cdn.v2ex.com/navatar/698d/51a1/111_mini.png?m=1648291973", "stars": 1590, "aliases": [], "root": false, "id": 111, "parent_node_name": "life"}, "member": {"id": 305526, "username": "tzlovezaq", "url": "https://www.v2ex.com/u/tzlovezaq", "website": null, "twitter": null, "psn": null, "github": null, "btc": null, "location": null, "tagline": null, "bio": null, "avatar_mini": "https://cdn.v2ex.com/avatar/218b/7a02/305526_mini.png?m=1736317390", "avatar_normal": "https://cdn.v2ex.com/avatar/218b/7a02/305526_normal.png?m=1736317390", "avatar_large": "https://cdn.v2ex.com/avatar/218b/7a02/305526_large.png?m=1736317390", "avatar_xlarge": "https://cdn.v2ex.com/avatar/218b/7a02/305526_xlarge.png?m=1736317390", "avatar_xxlarge": "https://cdn.v2ex.com/avatar/218b/7a02/305526_xlarge.png?m=1736317390", "created": 1522681764, "last_modified": 1736317390}, "last_reply_by": "EngAPI", "last_touched": 1744871335, "title": "微信阅读阅读挑战，阅读一分钟不算完成每日任务了😭", "url": "https://www.v2ex.com/t/1126035", "created": 1744851644, "deleted": 0, "content": "前几天一分钟的都算做失败了，天塌了", "content_rendered": "<p>前几天一分钟的都算做失败了，天塌了</p>\n", "last_modified": 1744851644, "replies": 41, "id": 1126035}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1733731195", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1733731195", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 66468, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1733731195", "stars": 9296, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"id": 383743, "username": "SGL", "url": "https://www.v2ex.com/u/SGL", "website": "", "twitter": "", "psn": "", "github": "", "btc": "", "location": "", "tagline": "", "bio": "我不道啊", "avatar_mini": "https://cdn.v2ex.com/avatar/3f22/feff/383743_mini.png?m=1550120465", "avatar_normal": "https://cdn.v2ex.com/avatar/3f22/feff/383743_normal.png?m=1550120465", "avatar_large": "https://cdn.v2ex.com/avatar/3f22/feff/383743_large.png?m=1550120465", "created": 1550114765, "last_modified": 1550120465}, "last_reply_by": "chawuchiren", "last_touched": 1744873722, "title": "Trae 所有的模型几乎都是免费无限用，它一天或者一个月的成本要多少？", "url": "https://www.v2ex.com/t/1126040", "created": 1744851964, "deleted": 0, "content": "除了部分热门的譬如 claude3.7 在白天要排队，几大顶尖模型几乎都免费无限给人用。\r\n当然，这是早起竞争阶段，要立稳脚跟。\r\n\r\n所以是不是从侧面说明，AI 编辑器 orIDE 这门生意，小公司玩不太起。", "content_rendered": "除了部分热门的譬如 claude3.7 在白天要排队，几大顶尖模型几乎都免费无限给人用。<br />当然，这是早起竞争阶段，要立稳脚跟。<br /><br />所以是不是从侧面说明，AI 编辑器 orIDE 这门生意，小公司玩不太起。", "last_modified": 1744851964, "replies": 38, "id": 1126040}]