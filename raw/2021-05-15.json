[{"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339", "name": "qna", "avatar_normal": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339", "title": "问与答", "url": "https://www.v2ex.com/go/qna", "topics": 172399, "footer": "", "header": "一个更好的世界需要你持续地提出好问题。", "title_alternative": "Questions and Answers", "avatar_mini": "https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339", "stars": 3226, "aliases": [], "root": false, "id": 12, "parent_node_name": "v2ex"}, "member": {"username": "MengiNo", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/6f35/0488/211732_mini.png?m=1575041535", "bio": "", "url": "https://www.v2ex.com/u/MengiNo", "tagline": "", "twitter": "", "created": 1484997409, "avatar_large": "https://cdn.v2ex.com/avatar/6f35/0488/211732_mini.png?m=1575041535", "avatar_mini": "https://cdn.v2ex.com/avatar/6f35/0488/211732_mini.png?m=1575041535", "location": "", "btc": "", "id": 211732}, "last_reply_by": "nguoidiqua", "last_touched": 1621054540, "title": "走投无路，希望老哥出出主意，帮我保住手机号", "url": "https://www.v2ex.com/t/776991", "created": 1620986843, "content": "之前我发了一个 qq 号被盗的贴，有老哥很快的回答了我的困惑，非常感谢（ 上期回顾 https://v2ex.com/t/775784 ）。现在有了后续，为了叙事完整我按时间顺序重新梳理下：\r\n\r\n5 月 11 日 凌晨发现 qq 被盗，5 月 11 日中午去移动营业厅补卡，开机（此前该手机号一直处于关机状态，用无忧行首发短信和接打电话，这个在 v2 应该也是正常操作了，但是无忧行没法接腾讯的外呼，我只能去补卡），刚开机半小时移动发来一条短信通知我手机号被封，要去营业厅解封（但没有立即生效，我也没有意识到严重性）。5 月 11 日下午，在联系上客服上传了手持身份证正反面后解封了。解封后我删除了骗子加的好友，重新绑定了手机（正好绑上了那个被封的手机）、重新设置了密码，还开通了令人作呕的腾讯手机管家，本以为 qq 的事情就结束了。\r\n\r\nps：拿回 qq 后我发现 4 月 10 号就有陌生设备登录，我的手机号是 5 月 11 日补卡之后封的，之前无忧行都用的好好的，腾讯也没有任何风控警告和提示，警察更也是好玩，作为 “作案工具” 我不开机你就不封。\r\n\r\n\r\n5 月 12 日上午手机正常使用，下午无电话（其实有电话，但手机已经无法使用了），晚上问 10086 得知被封，10086 要我回去看那条短信我才发现问题大条了。5 月 13 日早上，到营业厅问了移动，得知是公安反诈中心封的，移动给了我一份《承诺书》，大概意思就是保证不再犯，再犯自愿永冻该手机号且不得在申请，然后发给反诈中心的邮箱。\r\n\r\n本来我也没多想，结果 5 月 13 日晚上我还没来得及把手持保证书的照片发给反诈中心，我的 qq 又被盗了。晚上 7 点左右，我随手打开 qq，点到“qq 安全中心”页面，提示账号登录保护已关闭，我又给他打开了，而且确认了下没有其他异常设备登陆过，就没多想。结果过了一小时 qq 被强制下线，又被反诈中心冻结了。全程我手机 qq 登着的情况下，没有任何推送和警告。\r\n\r\n看到这个情况我真的被吓傻，如果我早点把运营商给我的《承诺书》发给反诈中心，结果我 qq 又被盗，不就直接自愿永封。于是我直接报警，想让 110 帮我去协调一下反诈中心，可千万别封了我的手机号，我和警察说如果是我干的你们早来抓我了，既然没来抓我为什么封我手机。结果到了派出所，警察完全就不想处理，只想早点打发我走，一下说没有什么内部系统，他们也不知道，一下说现在半夜没人能处理。最终给我个电话说是市级反诈中心的让我问问他们。今天我给市级反诈中心打了电话，他们说让我联系省厅，省厅说是外省某市某分局的刑侦大队封的，让我联系他们，刑侦大队又给了个某警官的电话给我。最终某警官说你打一个电话来无凭无据我怎么能给你查内部系统，所有系统都联网的你找你们当地的就可以了，要么你 找腾讯 让他们给你证据你去当地警方报警。自此 Gov 是完全靠不住了。\r\n\r\n现在只能靠自己排查，首先为了安全起见，我连夜重装了 mac，抹掉了 iPhone 。但我另外一个 qq 号也是绑定我那个被封掉的手机。抹掉 iPhone 后触发风控，我无法收验证码，连另外一个 qq 也登不上了。于是我就按腾讯安全中心的指引，去重置手机，结果没想到真和大刘说的一样。只需要 真实姓名（早就烂大街了 腾讯 qq 群关系泄露具有不可推卸的责任）、身份证（想找肯定找得到）、手机号（看似必填其实完全不验证，随便填个 Google voice 都行）、外加 3 个 好友验证就可以了。验证通过后就可以改掉密码和绑定手机（我为了测试还乱绑了一个 textnow 的号码，也顺利通过了）\r\n\r\n自此问题很明了了，qq 号只要存在内鬼好友，就没有任何安全可言，哪怕绑定手机、哪怕开通腾讯手机管家，腾讯甚至连登录历史记录都没有，等反应过来的时候号已经被封了，腾讯手机管家也上不去了，什么线索都没有了。现在因为 qq 的这个垃圾找回机制，我完全不敢提交《承诺书》去解封手机，而没有手机在 mac 和 iPhone 都被抹掉过的情况下，很多账号过不了风控，造成很大不便。而 qq 内鬼好友，几百个人根本无从排查，只能大规模清洗好友，甚至直接注销 qq ？\r\n\r\n这一条完整的链条真的让我汗颜，qq 好友安全意识薄弱 -> 你的 qq 号被盗 -> 你的手机号没了 -> 其他服务全部受影响 -> 漫长的扯皮撕逼最后通过卖人脸、卖手持身份证、卖一切隐私换回账号，完了你还得谢谢他们帮你找回账号。", "content_rendered": "<p>之前我发了一个 qq 号被盗的贴，有老哥很快的回答了我的困惑，非常感谢（ 上期回顾 <a href=\"https://v2ex.com/t/775784\" rel=\"nofollow\">https://v2ex.com/t/775784</a> ）。现在有了后续，为了叙事完整我按时间顺序重新梳理下：</p>\n<p>5 月 11 日 凌晨发现 qq 被盗，5 月 11 日中午去移动营业厅补卡，开机（此前该手机号一直处于关机状态，用无忧行首发短信和接打电话，这个在 v2 应该也是正常操作了，但是无忧行没法接腾讯的外呼，我只能去补卡），刚开机半小时移动发来一条短信通知我手机号被封，要去营业厅解封（但没有立即生效，我也没有意识到严重性）。5 月 11 日下午，在联系上客服上传了手持身份证正反面后解封了。解封后我删除了骗子加的好友，重新绑定了手机（正好绑上了那个被封的手机）、重新设置了密码，还开通了令人作呕的腾讯手机管家，本以为 qq 的事情就结束了。</p>\n<p>ps：拿回 qq 后我发现 4 月 10 号就有陌生设备登录，我的手机号是 5 月 11 日补卡之后封的，之前无忧行都用的好好的，腾讯也没有任何风控警告和提示，警察更也是好玩，作为 “作案工具” 我不开机你就不封。</p>\n<p>5 月 12 日上午手机正常使用，下午无电话（其实有电话，但手机已经无法使用了），晚上问 10086 得知被封，10086 要我回去看那条短信我才发现问题大条了。5 月 13 日早上，到营业厅问了移动，得知是公安反诈中心封的，移动给了我一份《承诺书》，大概意思就是保证不再犯，再犯自愿永冻该手机号且不得在申请，然后发给反诈中心的邮箱。</p>\n<p>本来我也没多想，结果 5 月 13 日晚上我还没来得及把手持保证书的照片发给反诈中心，我的 qq 又被盗了。晚上 7 点左右，我随手打开 qq，点到“qq 安全中心”页面，提示账号登录保护已关闭，我又给他打开了，而且确认了下没有其他异常设备登陆过，就没多想。结果过了一小时 qq 被强制下线，又被反诈中心冻结了。全程我手机 qq 登着的情况下，没有任何推送和警告。</p>\n<p>看到这个情况我真的被吓傻，如果我早点把运营商给我的《承诺书》发给反诈中心，结果我 qq 又被盗，不就直接自愿永封。于是我直接报警，想让 110 帮我去协调一下反诈中心，可千万别封了我的手机号，我和警察说如果是我干的你们早来抓我了，既然没来抓我为什么封我手机。结果到了派出所，警察完全就不想处理，只想早点打发我走，一下说没有什么内部系统，他们也不知道，一下说现在半夜没人能处理。最终给我个电话说是市级反诈中心的让我问问他们。今天我给市级反诈中心打了电话，他们说让我联系省厅，省厅说是外省某市某分局的刑侦大队封的，让我联系他们，刑侦大队又给了个某警官的电话给我。最终某警官说你打一个电话来无凭无据我怎么能给你查内部系统，所有系统都联网的你找你们当地的就可以了，要么你 找腾讯 让他们给你证据你去当地警方报警。自此 Gov 是完全靠不住了。</p>\n<p>现在只能靠自己排查，首先为了安全起见，我连夜重装了 mac，抹掉了 iPhone 。但我另外一个 qq 号也是绑定我那个被封掉的手机。抹掉 iPhone 后触发风控，我无法收验证码，连另外一个 qq 也登不上了。于是我就按腾讯安全中心的指引，去重置手机，结果没想到真和大刘说的一样。只需要 真实姓名（早就烂大街了 腾讯 qq 群关系泄露具有不可推卸的责任）、身份证（想找肯定找得到）、手机号（看似必填其实完全不验证，随便填个 Google voice 都行）、外加 3 个 好友验证就可以了。验证通过后就可以改掉密码和绑定手机（我为了测试还乱绑了一个 textnow 的号码，也顺利通过了）</p>\n<p>自此问题很明了了，qq 号只要存在内鬼好友，就没有任何安全可言，哪怕绑定手机、哪怕开通腾讯手机管家，腾讯甚至连登录历史记录都没有，等反应过来的时候号已经被封了，腾讯手机管家也上不去了，什么线索都没有了。现在因为 qq 的这个垃圾找回机制，我完全不敢提交《承诺书》去解封手机，而没有手机在 mac 和 iPhone 都被抹掉过的情况下，很多账号过不了风控，造成很大不便。而 qq 内鬼好友，几百个人根本无从排查，只能大规模清洗好友，甚至直接注销 qq ？</p>\n<p>这一条完整的链条真的让我汗颜，qq 好友安全意识薄弱 -&gt; 你的 qq 号被盗 -&gt; 你的手机号没了 -&gt; 其他服务全部受影响 -&gt; 漫长的扯皮撕逼最后通过卖人脸、卖手持身份证、卖一切隐私换回账号，完了你还得谢谢他们帮你找回账号。</p>\n", "last_modified": 1620986843, "replies": 62, "id": 776991}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/1fc2/1400/864_large.png?m=1497247521", "name": "promotions", "avatar_normal": "https://cdn.v2ex.com/navatar/1fc2/1400/864_normal.png?m=1497247521", "title": "推广", "url": "https://www.v2ex.com/go/promotions", "topics": 5575, "footer": "", "header": "来自厂商的推广活动类主题，会被归类到这个节点。希望有情怀的产商们在发布推广内容时，主动选择发布到本节点下。", "title_alternative": "Promotions", "avatar_mini": "https://cdn.v2ex.com/navatar/1fc2/1400/864_mini.png?m=1497247521", "stars": 585, "aliases": [], "root": false, "id": 864, "parent_node_name": ""}, "member": {"username": "6yong", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/avatar/05b8/c1d2/124015_mini.png?m=1568105233", "bio": null, "url": "https://www.v2ex.com/u/6yong", "tagline": null, "twitter": null, "created": 1435164565, "avatar_large": "https://cdn.v2ex.com/avatar/05b8/c1d2/124015_mini.png?m=1568105233", "avatar_mini": "https://cdn.v2ex.com/avatar/05b8/c1d2/124015_mini.png?m=1568105233", "location": null, "btc": null, "id": 124015}, "last_reply_by": "zhangqk", "last_touched": 1621054204, "title": "[抽奖送码] 内网穿透工具 ddnsto 免费了三年，竟然要收费了", "url": "https://www.v2ex.com/t/776964", "created": 1620981921, "content": "从 2017 年上线以来已经免费提供了三年的服务，累积了不少用户。最近我们改版了 UI 、还增加了像 SSH 、RDP 、VNC 等远程应用。\r\n\r\n趁此机会送一波福利，回馈大家对我们的支持。\r\n\r\n## [ddnsto]( https://www.ddnsto.com) 是什么？\r\n\r\nddnsto 是一个简单易用的内网穿透工具。无论你身处何方只要有浏览器就能快速访问内网服务。\r\n\r\n1. 门槛低（无需公网 ip，设置简单）\r\n\r\n2. 速度快（国内多个服务器 + HTTP2.0 ）\r\n\r\n3. 功能多（ SSH 、RDP 、VNC 等 N 种远程服务）\r\n\r\n4. 终端全（支持各种设备终端，ks 梅林 /LEDE 、OpenWrt 、群晖、威联通、Docker 等）\r\n\r\n5. 售后好（技术大佬随时在线解答）\r\n\r\n6. 费用少（无需购买域名和服务器）\r\n\r\n   \r\n\r\n![ddnsto_console]( https://www.kooldns.cn/app/img/ddnsto_console.png)\r\n\r\n![ddnsto_consoleApp]( https://www.kooldns.cn/app/img/ddnsto_consoleApp.png)官网： https://www.ddnsto.com/\r\n\r\ngithub： https://github.com/linkease/ddnsto\r\n\r\n有任何意见都请和我们反馈，我们仍然在不断努力改进\r\n\r\n## 免费\r\n\r\n就算没有抽中兑换码的朋友也没有关系，目前我们的免费通道还是继续开放试用滴！\r\n\r\n## 抽奖规则\r\n\r\n- 评论即可参加抽奖\r\n- 抽 10 人，每人送一个 ddnsto 年通道兑换码\r\n- 截止日期：2021.5.18 12:00\r\n- 从回复楼层中随机抽取\r\n- 中奖结果会以附言形式公布于本帖，并 @ 各位中奖用户\r\n\r\n\r\n\r\n```javascript\r\nfunction createRandom(num,from,to)\r\n{\r\n    var arr=[]; \r\n    var json={};  \r\n    while(arr.length<num)\r\n    {\r\n        var ranNum=Math.round(Math.random()*(to-from))+from;\r\n        if(!json[ranNum])\r\n        {\r\n            json[ranNum]=1;\r\n            arr.push(ranNum); \r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\ncreateRandom(10,0,回复楼层) //抽奖\r\n```\r\n\r\n源码引自 [yedanbo/createRandom().js]( https://gist.github.com/yedanbo)\r\n\r\n## 直接送\r\n\r\n先送几个兑换码吧，登录[ddnsto]( https://www.ddnsto.com/)控制台后右上角点兑换即可使用。\r\n\r\n363f8f3361b44c9795b071fe95fd243f\r\n\r\n048e70431acf4c71b290fc616d94a484\r\n\r\n8aa9d8efb31c495da9f1fb16c390d06b\r\n\r\n6256f3af9c99472489d8969452f113d5\r\n\r\n30070edd5e3b40e59a3214f53551393f", "content_rendered": "<p>从 2017 年上线以来已经免费提供了三年的服务，累积了不少用户。最近我们改版了 UI 、还增加了像 SSH 、RDP 、VNC 等远程应用。</p>\n<p>趁此机会送一波福利，回馈大家对我们的支持。</p>\n<h2><a href=\"https://www.ddnsto.com\" rel=\"nofollow\">ddnsto</a> 是什么？</h2>\n<p>ddnsto 是一个简单易用的内网穿透工具。无论你身处何方只要有浏览器就能快速访问内网服务。</p>\n<ol>\n<li>\n<p>门槛低（无需公网 ip，设置简单）</p>\n</li>\n<li>\n<p>速度快（国内多个服务器 + HTTP2.0 ）</p>\n</li>\n<li>\n<p>功能多（ SSH 、RDP 、VNC 等 N 种远程服务）</p>\n</li>\n<li>\n<p>终端全（支持各种设备终端，ks 梅林 /LEDE 、OpenWrt 、群晖、威联通、Docker 等）</p>\n</li>\n<li>\n<p>售后好（技术大佬随时在线解答）</p>\n</li>\n<li>\n<p>费用少（无需购买域名和服务器）</p>\n</li>\n</ol>\n<p><img alt=\"ddnsto_console\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://www.kooldns.cn/app/img/ddnsto_console.png\"/></p>\n<p><img alt=\"ddnsto_consoleApp\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://www.kooldns.cn/app/img/ddnsto_consoleApp.png\"/>官网： <a href=\"https://www.ddnsto.com/\" rel=\"nofollow\">https://www.ddnsto.com/</a></p>\n<p>github： <a href=\"https://github.com/linkease/ddnsto\" rel=\"nofollow\">https://github.com/linkease/ddnsto</a></p>\n<p>有任何意见都请和我们反馈，我们仍然在不断努力改进</p>\n<h2>免费</h2>\n<p>就算没有抽中兑换码的朋友也没有关系，目前我们的免费通道还是继续开放试用滴！</p>\n<h2>抽奖规则</h2>\n<ul>\n<li>评论即可参加抽奖</li>\n<li>抽 10 人，每人送一个 ddnsto 年通道兑换码</li>\n<li>截止日期：2021.5.18 12:00</li>\n<li>从回复楼层中随机抽取</li>\n<li>中奖结果会以附言形式公布于本帖，并 @ 各位中奖用户</li>\n</ul>\n<pre><code class=\"language-javascript\">function createRandom(num,from,to)\n{\n    var arr=[]; \n    var json={};  \n    while(arr.length&lt;num)\n    {\n        var ranNum=Math.round(Math.random()*(to-from))+from;\n        if(!json[ranNum])\n        {\n            json[ranNum]=1;\n            arr.push(ranNum); \n        }\n    }\n    return arr;\n}\n\ncreateRandom(10,0,回复楼层) //抽奖\n</code></pre>\n<p>源码引自 <a href=\"https://gist.github.com/yedanbo\" rel=\"nofollow\">yedanbo/createRandom().js</a></p>\n<h2>直接送</h2>\n<p>先送几个兑换码吧，登录<a href=\"https://www.ddnsto.com/\" rel=\"nofollow\">ddnsto</a>控制台后右上角点兑换即可使用。</p>\n<p>363f8f3361b44c9795b071fe95fd243f</p>\n<p>048e70431acf4c71b290fc616d94a484</p>\n<p>8aa9d8efb31c495da9f1fb16c390d06b</p>\n<p>6256f3af9c99472489d8969452f113d5</p>\n<p>30070edd5e3b40e59a3214f53551393f</p>\n", "last_modified": 1620982420, "replies": 59, "id": 776964}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1618915546", "name": "share", "avatar_normal": "https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1618915546", "title": "分享发现", "url": "https://www.v2ex.com/go/share", "topics": 33970, "footer": "", "header": "分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。", "title_alternative": "Share", "avatar_mini": "https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1618915546", "stars": 4489, "aliases": [], "root": false, "id": 16, "parent_node_name": "v2ex"}, "member": {"username": "3dwelcome", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/d2d0/2f32/162136_mini.png?m=1617116799", "bio": "", "url": "https://www.v2ex.com/u/3dwelcome", "tagline": "", "twitter": "", "created": 1457260101, "avatar_large": "https://cdn.v2ex.com/avatar/d2d0/2f32/162136_mini.png?m=1617116799", "avatar_mini": "https://cdn.v2ex.com/avatar/d2d0/2f32/162136_mini.png?m=1617116799", "location": "", "btc": "", "id": 162136}, "last_reply_by": "hst001", "last_touched": 1621040671, "title": "看了 Windows 的 GUID 生成算法，惊掉我下巴。", "url": "https://www.v2ex.com/t/776972", "created": 1620983243, "content": "原来没看到官方源代码前，我网上先搜了一下，做足了功课。一般都说 CLSID 的结构定义如下：\r\n\r\ntypedef struct _GUID {  \r\n DWORD Data1; // 随机数  \r\n WORD Data2; // 和时间相关  \r\n WORD Data3; // 和时间相关  \r\n BYTE Data4[8]; // 和网卡 MAC 相关  \r\n} GUID; \r\n\r\n这看起来很合理，里面除了随机数，即有时间戳保证时间不重复，又有网卡保证物理区域不重复。\r\n\r\n微软有专门生成 GUID 的 API, 叫 CoCreateGuid 给程序员调用。我看了代码，底层调用了 UuidCreate()。精彩部分的来了，查了 github 上的微软泄漏 UuidCreate()源代码后，发现整个函数核心就一句：\r\n\r\nRpcStatus = GenerateRandomNumber((unsigned char *)Uuid, 16);\r\n\r\n是的你没看错，就是生成 16 个随机数给用户。什么时间和网卡，全部都不存在！\r\n\r\n是否碰撞？那就听天由命吧。只要冲突概率最小，那就可以忽略。（比如 TCP 包校验也有记录冲突，但同样选择忽略，具体可看这个贴： https://www.v2ex.com/t/767293 ）", "content_rendered": "<p>原来没看到官方源代码前，我网上先搜了一下，做足了功课。一般都说 CLSID 的结构定义如下：</p>\n<p>typedef struct _GUID {<br/>\nDWORD Data1; // 随机数<br/>\nWORD Data2; // 和时间相关<br/>\nWORD Data3; // 和时间相关<br/>\nBYTE Data4[8]; // 和网卡 MAC 相关<br/>\n} GUID; </p>\n<p>这看起来很合理，里面除了随机数，即有时间戳保证时间不重复，又有网卡保证物理区域不重复。</p>\n<p>微软有专门生成 GUID 的 API, 叫 CoCreateGuid 给程序员调用。我看了代码，底层调用了 UuidCreate()。精彩部分的来了，查了 github 上的微软泄漏 UuidCreate()源代码后，发现整个函数核心就一句：</p>\n<p>RpcStatus = GenerateRandomNumber((unsigned char *)Uuid, 16);</p>\n<p>是的你没看错，就是生成 16 个随机数给用户。什么时间和网卡，全部都不存在！</p>\n<p>是否碰撞？那就听天由命吧。只要冲突概率最小，那就可以忽略。（比如 TCP 包校验也有记录冲突，但同样选择忽略，具体可看这个贴： <a href=\"https://www.v2ex.com/t/767293\" rel=\"nofollow\">https://www.v2ex.com/t/767293</a> ）</p>\n", "last_modified": 1620983243, "replies": 49, "id": 776972}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/642e/92ef/48_large.png?m=1559027807", "name": "tv", "avatar_normal": "https://cdn.v2ex.com/navatar/642e/92ef/48_normal.png?m=1559027807", "title": "剧集", "url": "https://www.v2ex.com/go/tv", "topics": 703, "footer": "", "header": "", "title_alternative": "TV", "avatar_mini": "https://cdn.v2ex.com/navatar/642e/92ef/48_mini.png?m=1559027807", "stars": 642, "aliases": [], "root": false, "id": 48, "parent_node_name": "life"}, "member": {"username": "litesoar", "website": "www.walixz.com", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/1a33/6426/8568_mini.png?m=1617265316", "bio": "", "url": "https://www.v2ex.com/u/litesoar", "tagline": "", "twitter": "", "created": 1304776333, "avatar_large": "https://cdn.v2ex.com/avatar/1a33/6426/8568_mini.png?m=1617265316", "avatar_mini": "https://cdn.v2ex.com/avatar/1a33/6426/8568_mini.png?m=1617265316", "location": "", "btc": "", "id": 8568}, "last_reply_by": "robotkang1", "last_touched": 1621036508, "title": "爱、死亡和机器人第 2 季，终于可以看了。", "url": "https://www.v2ex.com/t/776973", "created": 1620983355, "content": "今天下午已经上线 Netflix\r\n\r\nhttps://wx1.sinaimg.cn/mw2000/714305f5ly1gqi2f2q01mj20u018f77z.jpg", "content_rendered": "今天下午已经上线 Netflix<br /><br /><img src=\"https://wx1.sinaimg.cn/mw2000/714305f5ly1gqi2f2q01mj20u018f77z.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> ", "last_modified": 1620983446, "replies": 42, "id": 776973}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1620106885", "name": "career", "avatar_normal": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1620106885", "title": "职场话题", "url": "https://www.v2ex.com/go/career", "topics": 11447, "footer": "", "header": "这里，我们聊聊那些工作中遇到的开心和不开心的事。", "title_alternative": "Career", "avatar_mini": "https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1620106885", "stars": 2037, "aliases": [], "root": false, "id": 770, "parent_node_name": "work"}, "member": {"username": "erwin985211", "website": "", "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/avatar/4892/cea6/473521_mini.png?m=1612145846", "bio": "", "url": "https://www.v2ex.com/u/erwin985211", "tagline": "", "twitter": null, "created": 1583112090, "avatar_large": "https://cdn.v2ex.com/avatar/4892/cea6/473521_mini.png?m=1612145846", "avatar_mini": "https://cdn.v2ex.com/avatar/4892/cea6/473521_mini.png?m=1612145846", "location": "", "btc": null, "id": 473521}, "last_reply_by": "newmlp", "last_touched": 1621012264, "title": "有打工人一直住青旅吗", "url": "https://www.v2ex.com/t/776925", "created": 1620973770, "content": "最近找工作期间 要找短的房子，问了几家青旅。发现好多人都是一直住青旅。老板说有人已经连续住一年半。我说的青旅就是指那种上下铺，一屋子 4-8 人的那种", "content_rendered": "<p>最近找工作期间 要找短的房子，问了几家青旅。发现好多人都是一直住青旅。老板说有人已经连续住一年半。我说的青旅就是指那种上下铺，一屋子 4-8 人的那种</p>\n", "last_modified": 1620982404, "replies": 39, "id": 776925}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083", "name": "programmer", "avatar_normal": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083", "title": "程序员", "url": "https://www.v2ex.com/go/programmer", "topics": 44463, "footer": "", "header": "While code monkeys are not eating bananas, they're coding.", "title_alternative": "Programmer", "avatar_mini": "https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083", "stars": 7377, "aliases": [], "root": false, "id": 300, "parent_node_name": "computer"}, "member": {"username": "shanex", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/gravatar/cfae071df818fb86a98220d9b73c242e?s=24&d=retro", "bio": "", "url": "https://www.v2ex.com/u/shanex", "tagline": "", "twitter": "", "created": 1554125290, "avatar_large": "https://cdn.v2ex.com/gravatar/cfae071df818fb86a98220d9b73c242e?s=24&d=retro", "avatar_mini": "https://cdn.v2ex.com/gravatar/cfae071df818fb86a98220d9b73c242e?s=24&d=retro", "location": "", "btc": "", "id": 397519}, "last_reply_by": "ae86", "last_touched": 1621040400, "title": "老哥们，真心求个建议！", "url": "https://www.v2ex.com/t/777011", "created": 1620998916, "content": "## 背景\r\n\r\n和对象目前异地，她大学毕业一直留在成都。前不久去见了父母，在广东那边。顺便感受了下当地得风土人情。她爸妈在她很小得时候就来到广东这边，但是一直到现在都没安家置业。上次沟通中，一直没安家多少有些思乡情愫，之前也没想着买房投资啥的，反正就是没打算买房。后来房价暴涨，不是想不想的问题，想买也没能力上车了。然后她很多亲戚都在那边，办厂的，打工不少。然后呢，对象去了几次广州后和成都一对比感觉广州怎么说呢，人潮汹涌，感觉很压抑，特别时上班高峰时段。\r\n\r\n## 纠结\r\n\r\n1. 成都 or 广州 ？\r\n\r\n2. 有必要去广州奋斗 5，6 年然后回去么？", "content_rendered": "<h2>背景</h2>\n<p>和对象目前异地，她大学毕业一直留在成都。前不久去见了父母，在广东那边。顺便感受了下当地得风土人情。她爸妈在她很小得时候就来到广东这边，但是一直到现在都没安家置业。上次沟通中，一直没安家多少有些思乡情愫，之前也没想着买房投资啥的，反正就是没打算买房。后来房价暴涨，不是想不想的问题，想买也没能力上车了。然后她很多亲戚都在那边，办厂的，打工不少。然后呢，对象去了几次广州后和成都一对比感觉广州怎么说呢，人潮汹涌，感觉很压抑，特别时上班高峰时段。</p>\n<h2>纠结</h2>\n<ol>\n<li>\n<p>成都 or 广州 ？</p>\n</li>\n<li>\n<p>有必要去广州奋斗 5，6 年然后回去么？</p>\n</li>\n</ol>\n", "last_modified": 1620998916, "replies": 34, "id": 777011}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/8613/985e/90_large.png?m=1620107162", "name": "python", "avatar_normal": "https://cdn.v2ex.com/navatar/8613/985e/90_normal.png?m=1620107162", "title": "Python", "url": "https://www.v2ex.com/go/python", "topics": 14369, "footer": "", "header": "这里讨论各种 Python 语言编程话题，也包括 Django，Tornado 等框架的讨论。这里是一个能够帮助你解决实际问题的地方。", "title_alternative": "Python", "avatar_mini": "https://cdn.v2ex.com/navatar/8613/985e/90_mini.png?m=1620107162", "stars": 9583, "aliases": [], "root": false, "id": 90, "parent_node_name": "programming"}, "member": {"username": "alittlecode", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/gravatar/d6f5318106e50f8a2be66f0bd6ef51f7?s=24&d=retro", "bio": null, "url": "https://www.v2ex.com/u/alittlecode", "tagline": null, "twitter": null, "created": 1611389183, "avatar_large": "https://cdn.v2ex.com/gravatar/d6f5318106e50f8a2be66f0bd6ef51f7?s=24&d=retro", "avatar_mini": "https://cdn.v2ex.com/gravatar/d6f5318106e50f8a2be66f0bd6ef51f7?s=24&d=retro", "location": null, "btc": null, "id": 530099}, "last_reply_by": "cherbim", "last_touched": 1621002990, "title": "日常中如何解决 Python 中字典是无序这一问题的", "url": "https://www.v2ex.com/t/776937", "created": 1620976945, "content": "collections 的 OrderedDict 可以解决无序问题,但是他是按照你赋值的顺序实现的,比如我现在有一个 dict\r\n使用 OrderedDict 的话\r\nfrom collections import OrderedDict\r\na = OrderedDict()\r\na[\"aaa\"] = 1\r\na[\"bbb\"] = 2\r\n这样情况下得出的是一个有序的字典 dict a = {\"aaa\": 1, \"bbb\": 2}\r\n如果我原本就有一个 dict b = {\"ccc\": 3, \"ddd\": 4}\r\n在不遍历重新赋值的情况下怎样让成为一个有序的字典", "content_rendered": "collections 的 OrderedDict 可以解决无序问题,但是他是按照你赋值的顺序实现的,比如我现在有一个 dict<br />使用 OrderedDict 的话<br />from collections import OrderedDict<br />a = OrderedDict()<br />a[\"aaa\"] = 1<br />a[\"bbb\"] = 2<br />这样情况下得出的是一个有序的字典 dict a = {\"aaa\": 1, \"bbb\": 2}<br />如果我原本就有一个 dict b = {\"ccc\": 3, \"ddd\": 4}<br />在不遍历重新赋值的情况下怎样让成为一个有序的字典", "last_modified": 1620977245, "replies": 32, "id": 776937}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1615111825", "name": "apple", "avatar_normal": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1615111825", "title": "Apple", "url": "https://www.v2ex.com/go/apple", "topics": 14832, "footer": "", "header": "设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。", "title_alternative": "Apple", "avatar_mini": "https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1615111825", "stars": 1809, "aliases": [], "root": false, "id": 184, "parent_node_name": "hardware"}, "member": {"username": "KevinChan", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/0a44/c356/117534_mini.png?m=1522239843", "bio": "", "url": "https://www.v2ex.com/u/KevinChan", "tagline": "", "twitter": "", "created": 1431946465, "avatar_large": "https://cdn.v2ex.com/avatar/0a44/c356/117534_mini.png?m=1522239843", "avatar_mini": "https://cdn.v2ex.com/avatar/0a44/c356/117534_mini.png?m=1522239843", "location": "", "btc": "", "id": 117534}, "last_reply_by": "namelosw", "last_touched": 1621004506, "title": "关于苹果区别对待开发者的文章", "url": "https://www.v2ex.com/t/776920", "created": 1620972481, "content": "文章标题有些哗众取宠，但是内容不失为一种参考。\r\n链接： https://mp.weixin.qq.com/s/hZFXyVI1FMz9ZlR2BSC2rA", "content_rendered": "文章标题有些哗众取宠，但是内容不失为一种参考。<br />链接： <a target=\"_blank\" href=\"https://mp.weixin.qq.com/s/hZFXyVI1FMz9ZlR2BSC2rA\" rel=\"nofollow noopener\">https://mp.weixin.qq.com/s/hZFXyVI1FMz9ZlR2BSC2rA</a>", "last_modified": 1620972481, "replies": 31, "id": 776920}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_large.png?m=1620107141", "name": "android", "avatar_normal": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_normal.png?m=1620107141", "title": "Android", "url": "https://www.v2ex.com/go/android", "topics": 8712, "footer": "", "header": "来自 <a href=\"/go/google\">Google</a> 的开放源代码智能手机平台。", "title_alternative": "Android", "avatar_mini": "https://cdn.v2ex.com/navatar/d67d/8ab4/39_mini.png?m=1620107141", "stars": 4784, "aliases": [], "root": false, "id": 39, "parent_node_name": "hardware"}, "member": {"username": "dxfree", "website": "", "github": "", "psn": "", "avatar_normal": "https://cdn.v2ex.com/avatar/bfba/5092/131199_mini.png?m=1594612417", "bio": "", "url": "https://www.v2ex.com/u/dxfree", "tagline": "", "twitter": "", "created": 1438844420, "avatar_large": "https://cdn.v2ex.com/avatar/bfba/5092/131199_mini.png?m=1594612417", "avatar_mini": "https://cdn.v2ex.com/avatar/bfba/5092/131199_mini.png?m=1594612417", "location": "", "btc": "", "id": 131199}, "last_reply_by": "yogogo", "last_touched": 1621036401, "title": "用过 Sony Xperia 系列的大佬给说说这手机怎么样？这年头想找个完整屏的手机太难了。", "url": "https://www.v2ex.com/t/776944", "created": 1620978477, "content": "", "content_rendered": "", "last_modified": 1620978477, "replies": 30, "id": 776944}, {"node": {"avatar_large": "https://cdn.v2ex.com/navatar/b53b/3a3d/55_large.png?m=1611920927", "name": "games", "avatar_normal": "https://cdn.v2ex.com/navatar/b53b/3a3d/55_normal.png?m=1611920927", "title": "游戏", "url": "https://www.v2ex.com/go/games", "topics": 2005, "footer": "", "header": "Life is short, have more fun.", "title_alternative": "Games", "avatar_mini": "https://cdn.v2ex.com/navatar/b53b/3a3d/55_mini.png?m=1611920927", "stars": 1826, "aliases": [], "root": false, "id": 55, "parent_node_name": "computer"}, "member": {"username": "biangou", "website": null, "github": null, "psn": null, "avatar_normal": "https://cdn.v2ex.com/gravatar/0821b920aa61e1ff02bef0caacdd69e8?s=24&d=retro", "bio": null, "url": "https://www.v2ex.com/u/biangou", "tagline": null, "twitter": null, "created": 1524102866, "avatar_large": "https://cdn.v2ex.com/gravatar/0821b920aa61e1ff02bef0caacdd69e8?s=24&d=retro", "avatar_mini": "https://cdn.v2ex.com/gravatar/0821b920aa61e1ff02bef0caacdd69e8?s=24&d=retro", "location": null, "btc": null, "id": 309812}, "last_reply_by": "wensonsmith", "last_touched": 1620996668, "title": "刀斯林集合了", "url": "https://www.v2ex.com/t/776932", "created": 1620976048, "content": "突然就周五了，想了想突然就好久没玩 dota2 了，想了想更是好长时间没有开黑了，所以呼唤一下晚上开黑呀\r\n\r\n目前仅限低分局快速模式，晚上嗨几把", "content_rendered": "<p>突然就周五了，想了想突然就好久没玩 dota2 了，想了想更是好长时间没有开黑了，所以呼唤一下晚上开黑呀</p>\n<p>目前仅限低分局快速模式，晚上嗨几把</p>\n", "last_modified": 1620976262, "replies": 29, "id": 776932}]